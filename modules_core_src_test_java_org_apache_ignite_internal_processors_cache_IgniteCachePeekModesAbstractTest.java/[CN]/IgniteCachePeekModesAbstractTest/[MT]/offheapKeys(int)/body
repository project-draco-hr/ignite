{
  GridCacheAdapter<Integer,String> internalCache=((IgniteKernal)ignite(nodeIdx)).context().cache().internalCache();
  Iterator<Map.Entry<Integer,String>> offheapIt;
  if (internalCache.context().isNear())   offheapIt=internalCache.context().near().dht().context().swap().lazyOffHeapIterator();
 else   offheapIt=internalCache.context().swap().lazyOffHeapIterator();
  CacheAffinity aff=ignite(nodeIdx).affinity(null);
  ClusterNode node=ignite(nodeIdx).cluster().localNode();
  int primary=0;
  int backups=0;
  while (offheapIt.hasNext()) {
    Map.Entry<Integer,String> e=offheapIt.next();
    if (aff.isPrimary(node,e.getKey()))     primary++;
 else {
      assertTrue(aff.isBackup(node,e.getKey()));
      backups++;
    }
  }
  return new T2<>(primary,backups);
}
