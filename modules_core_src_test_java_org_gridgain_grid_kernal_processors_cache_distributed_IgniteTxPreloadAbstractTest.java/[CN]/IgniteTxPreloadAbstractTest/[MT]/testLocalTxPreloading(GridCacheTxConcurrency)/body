{
  Map<String,Integer> map=new HashMap<>();
  for (int i=0; i < 10000; i++)   map.put(String.valueOf(i),0);
  GridCache<String,Integer> cache0=cache(0);
  cache0.putAll(map);
  final String TX_KEY="9000";
  int expVal=0;
  for (int i=1; i < GRID_CNT; i++) {
    assertEquals((Integer)expVal,cache0.get(TX_KEY));
    startGrid(i);
    GridCache<String,Integer> cache=cache(i);
    try (IgniteTx tx=cache.txStart(txConcurrency,GridCacheTxIsolation.READ_COMMITTED)){
      cache.transform(TX_KEY,new C1<Integer,Integer>(){
        @Override public Integer apply(        Integer val){
          if (val == null) {
            keyNotLoaded=true;
            return 1;
          }
          return val + 1;
        }
      }
);
      tx.commit();
    }
     assertFalse(keyNotLoaded);
    expVal++;
    assertEquals((Integer)expVal,cache.get(TX_KEY));
  }
  for (int i=0; i < GRID_CNT; i++)   assertEquals("Unexpected value for cache " + i,(Integer)expVal,cache(i).get(TX_KEY));
}
