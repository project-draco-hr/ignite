{
  for (int i=0; i < gridCnt; i++) {
    GridGgfsConfiguration ggfsCfg=new GridGgfsConfiguration();
    ggfsCfg.setDataCacheName("partitioned");
    ggfsCfg.setMetaCacheName("replicated");
    ggfsCfg.setName("ggfs");
    ggfsCfg.setBlockSize(512 * 1024);
    ggfsCfg.setDefaultMode(PRIMARY);
    ggfsCfg.setIpcEndpointConfiguration(endpointCfg);
    ggfsCfg.setIpcEndpointEnabled(endpointEnabled);
    GridCacheConfiguration cacheCfg=defaultCacheConfiguration();
    cacheCfg.setName("partitioned");
    cacheCfg.setCacheMode(PARTITIONED);
    cacheCfg.setDistributionMode(GridCacheDistributionMode.PARTITIONED_ONLY);
    cacheCfg.setWriteSynchronizationMode(GridCacheWriteSynchronizationMode.FULL_SYNC);
    cacheCfg.setAffinityMapper(new GridGgfsGroupDataBlocksKeyMapper(128));
    cacheCfg.setBackups(0);
    cacheCfg.setQueryIndexEnabled(false);
    cacheCfg.setAtomicityMode(TRANSACTIONAL);
    GridCacheConfiguration metaCacheCfg=defaultCacheConfiguration();
    metaCacheCfg.setName("replicated");
    metaCacheCfg.setCacheMode(REPLICATED);
    metaCacheCfg.setWriteSynchronizationMode(GridCacheWriteSynchronizationMode.FULL_SYNC);
    metaCacheCfg.setQueryIndexEnabled(false);
    metaCacheCfg.setAtomicityMode(TRANSACTIONAL);
    GridConfiguration cfg=new GridConfiguration();
    int startPort=47500;
    Collection<String> addrs=new ArrayList<>(gridCnt);
    for (int j=0; j < gridCnt; j++)     addrs.add(U.getLocalHost().getHostAddress() + ":" + startPort++);
    GridTcpDiscoveryVmIpFinder ipFinder=new GridTcpDiscoveryVmIpFinder();
    ipFinder.setAddresses(addrs);
    GridTcpDiscoverySpi discoSpi=new GridTcpDiscoverySpi();
    discoSpi.setIpFinder(ipFinder);
    cfg.setDiscoverySpi(discoSpi);
    cfg.setCacheConfiguration(metaCacheCfg,cacheCfg);
    cfg.setGgfsConfiguration(ggfsCfg);
    cfg.setGridName("grid-" + i);
    Grid grid=G.start(cfg);
    if (ggfs == null)     ggfs=(GridGgfsImpl)grid.ggfs("ggfs");
  }
}
