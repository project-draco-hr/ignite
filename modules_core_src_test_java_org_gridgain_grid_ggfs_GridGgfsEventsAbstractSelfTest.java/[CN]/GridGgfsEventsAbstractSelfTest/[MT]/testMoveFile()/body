{
  final List<GridEvent> evtList=new ArrayList<>();
  final int evtsCnt=5 + 1;
  final CountDownLatch latch=new CountDownLatch(evtsCnt);
  grid(1).events().localListen(lsnr=new IgnitePredicate<GridEvent>(){
    @Override public boolean apply(    GridEvent evt){
      log.info("Received event [evt=" + evt + ']');
      evtList.add(evt);
      latch.countDown();
      return true;
    }
  }
,EVTS_GGFS);
  GridGgfsPath dir=new GridGgfsPath("/dir1/dir2");
  GridGgfsPath file=new GridGgfsPath(dir,"file1");
  ggfs.create(file,true).close();
  ggfs.rename(file,dir.parent());
  assertTrue(ggfs.exists(new GridGgfsPath(dir.parent(),file.name())));
  assertTrue(latch.await(10,TimeUnit.SECONDS));
  assertEquals(evtsCnt,evtList.size());
  GridGgfsEvent evt=(GridGgfsEvent)evtList.get(0);
  assertEquals(EVT_GGFS_DIR_CREATED,evt.type());
  assertEquals(new GridGgfsPath("/dir1"),evt.path());
  evt=(GridGgfsEvent)evtList.get(1);
  assertEquals(EVT_GGFS_DIR_CREATED,evt.type());
  assertEquals(new GridGgfsPath("/dir1/dir2"),evt.path());
  evt=(GridGgfsEvent)evtList.get(2);
  assertEquals(EVT_GGFS_FILE_CREATED,evt.type());
  assertEquals(new GridGgfsPath("/dir1/dir2/file1"),evt.path());
  evt=(GridGgfsEvent)evtList.get(3);
  assertEquals(EVT_GGFS_FILE_OPENED_WRITE,evt.type());
  assertEquals(new GridGgfsPath("/dir1/dir2/file1"),evt.path());
  evt=(GridGgfsEvent)evtList.get(4);
  assertEquals(EVT_GGFS_FILE_CLOSED_WRITE,evt.type());
  assertEquals(new GridGgfsPath("/dir1/dir2/file1"),evt.path());
  assertEquals(0,evt.dataSize());
  GridGgfsEvent evt4=(GridGgfsEvent)evtList.get(5);
  assertEquals(EVT_GGFS_FILE_RENAMED,evt4.type());
  assertEquals(new GridGgfsPath("/dir1/dir2/file1"),evt4.path());
  assertEquals(new GridGgfsPath("/dir1/file1"),evt4.newPath());
}
