{
  final List<IgniteEvent> evtList=new ArrayList<>();
  final int evtsCnt=4 + 3 + 1;
  final CountDownLatch latch=new CountDownLatch(evtsCnt);
  grid(1).events().localListen(lsnr=new IgnitePredicate<IgniteEvent>(){
    @Override public boolean apply(    IgniteEvent evt){
      log.info("Received event [evt=" + evt + ']');
      evtList.add(evt);
      latch.countDown();
      return true;
    }
  }
,EVTS_GGFS);
  GridGgfsPath dir=new GridGgfsPath("/dir1");
  GridGgfsPath file1=new GridGgfsPath(dir,"file1");
  GridGgfsPath file2=new GridGgfsPath(dir,"file2");
  ggfs.create(file1,true).close();
  ggfs.create(file2,true).close();
  assertTrue(ggfs.delete(dir,true));
  assertTrue(latch.await(10,TimeUnit.SECONDS));
  assertEquals(evtsCnt,evtList.size());
  GridGgfsEvent evt=(GridGgfsEvent)evtList.get(0);
  assertEquals(EVT_GGFS_DIR_CREATED,evt.type());
  assertEquals(new GridGgfsPath("/dir1"),evt.path());
  assertTrue(evt.isDirectory());
  evt=(GridGgfsEvent)evtList.get(1);
  assertEquals(EVT_GGFS_FILE_CREATED,evt.type());
  assertEquals(new GridGgfsPath("/dir1/file1"),evt.path());
  assertFalse(evt.isDirectory());
  evt=(GridGgfsEvent)evtList.get(2);
  assertEquals(EVT_GGFS_FILE_OPENED_WRITE,evt.type());
  assertEquals(new GridGgfsPath("/dir1/file1"),evt.path());
  evt=(GridGgfsEvent)evtList.get(3);
  assertEquals(EVT_GGFS_FILE_CLOSED_WRITE,evt.type());
  assertEquals(new GridGgfsPath("/dir1/file1"),evt.path());
  evt=(GridGgfsEvent)evtList.get(4);
  assertEquals(EVT_GGFS_FILE_CREATED,evt.type());
  assertEquals(new GridGgfsPath("/dir1/file2"),evt.path());
  assertFalse(evt.isDirectory());
  evt=(GridGgfsEvent)evtList.get(5);
  assertEquals(EVT_GGFS_FILE_OPENED_WRITE,evt.type());
  assertEquals(new GridGgfsPath("/dir1/file2"),evt.path());
  evt=(GridGgfsEvent)evtList.get(6);
  assertEquals(EVT_GGFS_FILE_CLOSED_WRITE,evt.type());
  assertEquals(new GridGgfsPath("/dir1/file2"),evt.path());
  evt=(GridGgfsEvent)evtList.get(7);
  assertEquals(EVT_GGFS_DIR_DELETED,evt.type());
  assertEquals(new GridGgfsPath("/dir1"),evt.path());
}
