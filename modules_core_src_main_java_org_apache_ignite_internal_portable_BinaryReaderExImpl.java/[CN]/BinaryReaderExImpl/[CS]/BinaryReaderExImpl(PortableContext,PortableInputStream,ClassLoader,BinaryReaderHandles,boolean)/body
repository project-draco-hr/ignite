{
  this.ctx=ctx;
  this.in=in;
  this.ldr=ldr;
  this.hnds=hnds;
  start=in.position();
  if (!skipHdrCheck && (in.readByte() == GridPortableMarshaller.OBJ)) {
    PortableUtils.checkProtocolVersion(in.readByte());
    short flags=in.readShort();
    int typeId0=in.readInt();
    in.readInt();
    int len=in.readInt();
    schemaId=in.readInt();
    int offset=in.readInt();
    userType=PortableUtils.isUserType(flags);
    fieldIdLen=PortableUtils.fieldIdLength(flags);
    fieldOffsetLen=PortableUtils.fieldOffsetLength(flags);
    if (PortableUtils.hasSchema(flags)) {
      footerStart=start + offset;
      if (PortableUtils.hasRaw(flags)) {
        footerLen=len - offset - 4;
        rawOff=start + in.readIntPositioned(start + len - 4);
      }
 else {
        footerLen=len - offset;
        rawOff=start + len;
      }
    }
 else {
      footerStart=start + len;
      footerLen=0;
      if (PortableUtils.hasRaw(flags))       rawOff=start + offset;
 else       rawOff=start + len;
    }
    if (typeId0 == UNREGISTERED_TYPE_ID) {
      int off=in.position();
      typeId=ctx.descriptorForClass(PortableUtils.doReadClass(in,ctx,ldr,typeId0)).typeId();
      int clsNameLen=in.position() - off;
      dataStart=start + DFLT_HDR_LEN + clsNameLen;
    }
 else {
      typeId=typeId0;
      dataStart=start + DFLT_HDR_LEN;
    }
    idMapper=userType ? ctx.userTypeIdMapper(typeId) : null;
    schema=PortableUtils.hasSchema(flags) ? getOrCreateSchema() : null;
  }
 else {
    dataStart=0;
    typeId=0;
    rawOff=0;
    footerStart=0;
    footerLen=0;
    idMapper=null;
    schemaId=0;
    userType=false;
    fieldIdLen=0;
    fieldOffsetLen=0;
    schema=null;
  }
  streamPosition(start);
}
