{
  this.ctx=ctx;
  if (depEnabled) {
    if (key == null)     key=ctx.marshaller().unmarshal(keyBytes,clsLdr);
    if (transformClosBytes != null && transformClosCol == null)     transformClosCol=ctx.marshaller().unmarshal(transformClosBytes,clsLdr);
    if (filters == null && filterBytes != null) {
      filters=ctx.marshaller().unmarshal(filterBytes,clsLdr);
      if (filters == null)       filters=CU.empty();
    }
  }
  val.unmarshal(ctx,clsLdr,depEnabled);
}
