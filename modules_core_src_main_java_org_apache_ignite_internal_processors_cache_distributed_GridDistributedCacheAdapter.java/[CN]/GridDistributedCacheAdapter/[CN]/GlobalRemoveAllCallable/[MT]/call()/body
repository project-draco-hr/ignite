{
  final IgniteKernal grid=(IgniteKernal)ignite;
  final GridCache<K,V> cache=grid.cachex(cacheName);
  GridCacheAdapter<K,V> cacheAdapter=grid.context().cache().internalCache(cacheName);
  final GridCacheContext<K,V> ctx=cacheAdapter.context();
  if (ctx.affinity().affinityTopologyVersion() != topVer)   return null;
  if (cacheAdapter instanceof GridNearCacheAdapter)   cacheAdapter=((GridNearCacheAdapter<K,V>)cacheAdapter).dht();
  GridDhtCacheAdapter<K,V> dht=(GridDhtCacheAdapter<K,V>)cacheAdapter;
  Collection<K> keys=new ArrayList<>();
  for (  GridDhtLocalPartition<K,V> locPart : dht.topology().currentLocalPartitions()) {
    if (!locPart.isEmpty() && locPart.primary(topVer)) {
      for (      GridDhtCacheEntry<K,V> o : locPart.entries()) {
        keys.add(o.key());
        if (keys.size() >= REMOVE_ALL_BATCH_SIZE) {
          cache.removeAll(keys);
          keys.clear();
        }
      }
    }
  }
  if (!keys.isEmpty())   cache.removeAll(keys);
  return null;
}
