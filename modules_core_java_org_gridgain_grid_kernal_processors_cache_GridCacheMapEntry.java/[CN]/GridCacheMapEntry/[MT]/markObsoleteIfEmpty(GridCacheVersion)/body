{
  boolean obsolete=false;
  boolean deferred=false;
  try {
synchronized (this) {
      if (obsoleteVersionExtras() != null)       return false;
      long expireTime=expireTimeExtras();
      if ((expireTime > 0L && (expireTime - U.currentTimeMillis() <= 0L)) || !hasValueUnlocked()) {
        if (ver == null)         ver=nextVersion();
        if (cctx.deferredDelete() && !isStartVersion() && !detached()&& !isInternal()) {
          if (!deletedUnlocked()) {
            update(null,null,0L,0L,ver);
            deletedUnlocked(true);
            deferred=true;
          }
        }
 else         obsolete=markObsolete(ver);
      }
    }
  }
  finally {
    if (deferred)     cctx.onDeferredDelete(this,ver);
  }
  return obsolete;
}
