{
  String name="serviceSingletonUpdateTopology";
  Grid g=randomGrid();
  CountDownLatch latch=new CountDownLatch(1);
  org.gridgain.grid.kernal.processors.service.DummyService.exeLatch(name,latch);
  GridFuture<?> fut=g.services().deployClusterSingleton(name,new org.gridgain.grid.kernal.processors.service.DummyService());
  info("Deployed service: " + name);
  fut.get();
  info("Finished waiting for service future: " + name);
  latch.await();
  TestCase.assertEquals(name,1,org.gridgain.grid.kernal.processors.service.DummyService.started(name));
  TestCase.assertEquals(name,0,org.gridgain.grid.kernal.processors.service.DummyService.cancelled(name));
  int nodeCnt=2;
  startExtraNodes(nodeCnt);
  try {
    TestCase.assertEquals(name,1,org.gridgain.grid.kernal.processors.service.DummyService.started(name));
    TestCase.assertEquals(name,0,org.gridgain.grid.kernal.processors.service.DummyService.cancelled(name));
    info(">>> Passed checks.");
    checkCount(name,g.services().deployedServices(),1);
  }
  finally {
    stopExtraNodes(nodeCnt);
  }
}
