{
  this.reader=reader;
  this.start=start;
  byte ver=reader.readByteAbsolute(start + PROTO_VER_POS);
  PortableUtils.checkProtocolVersion(ver);
  int typeId=reader.readIntAbsolute(start + TYPE_ID_POS);
  ctx=reader.portableContext();
  hashCode=reader.readIntAbsolute(start + HASH_CODE_POS);
  if (typeId == UNREGISTERED_TYPE_ID) {
    int mark=reader.position();
    reader.position(start + CLS_NAME_POS);
    clsNameToWrite=reader.readString();
    Class cls;
    try {
      cls=U.forName(clsNameToWrite,null);
    }
 catch (    ClassNotFoundException e) {
      throw new PortableInvalidClassException("Failed to load the class: " + clsNameToWrite,e);
    }
    this.typeId=ctx.descriptorForClass(cls).typeId();
    registeredType=false;
    hdrLen=reader.position() - mark;
    reader.position(mark);
  }
 else {
    this.typeId=typeId;
    hdrLen=DFLT_HDR_LEN;
  }
}
