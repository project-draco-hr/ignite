{
  super(cfg);
  if (!(cfg instanceof CacheConfiguration))   return;
  CacheConfiguration<K,V> cc=(CacheConfiguration<K,V>)cfg;
  aff=cc.getAffinity();
  affMapper=cc.getAffinityMapper();
  atomicityMode=cc.getAtomicityMode();
  atomicWriteOrderMode=cc.getAtomicWriteOrderMode();
  backups=cc.getBackups();
  cacheLoaderFactory=cc.getCacheLoaderFactory();
  cacheMode=cc.getCacheMode();
  cacheWriterFactory=cc.getCacheWriterFactory();
  cpOnRead=cc.isCopyOnRead();
  dfltLockTimeout=cc.getDefaultLockTimeout();
  eagerTtl=cc.isEagerTtl();
  evictFilter=cc.getEvictionFilter();
  evictKeyBufSize=cc.getEvictSynchronizedKeyBufferSize();
  evictMaxOverflowRatio=cc.getEvictMaxOverflowRatio();
  evictPlc=cc.getEvictionPolicy();
  evictSync=cc.isEvictSynchronized();
  evictSyncConcurrencyLvl=cc.getEvictSynchronizedConcurrencyLevel();
  evictSyncTimeout=cc.getEvictSynchronizedTimeout();
  expiryPolicyFactory=cc.getExpiryPolicyFactory();
  indexedTypes=cc.getIndexedTypes();
  interceptor=cc.getInterceptor();
  invalidate=cc.isInvalidate();
  isReadThrough=cc.isReadThrough();
  isWriteThrough=cc.isWriteThrough();
  keepPortableInStore=cc.isKeepPortableInStore() != null ? cc.isKeepPortableInStore() : DFLT_KEEP_PORTABLE_IN_STORE;
  listenerConfigurations=cc.listenerConfigurations;
  loadPrevVal=cc.isLoadPreviousValue();
  longQryWarnTimeout=cc.getLongQueryWarningTimeout();
  offHeapMaxMem=cc.getOffHeapMaxMemory();
  maxConcurrentAsyncOps=cc.getMaxConcurrentAsyncOperations();
  memMode=cc.getMemoryMode();
  name=cc.getName();
  nearCfg=cc.getNearConfiguration();
  nodeFilter=cc.getNodeFilter();
  pluginCfgs=cc.getPluginConfigurations();
  qryEntities=cc.getQueryEntities();
  rebalanceMode=cc.getRebalanceMode();
  rebalanceBatchSize=cc.getRebalanceBatchSize();
  rebalanceDelay=cc.getRebalanceDelay();
  rebalanceOrder=cc.getRebalanceOrder();
  rebalancePoolSize=cc.getRebalanceThreadPoolSize();
  rebalanceTimeout=cc.getRebalanceTimeout();
  rebalanceThrottle=cc.getRebalanceThrottle();
  readFromBackup=cc.isReadFromBackup();
  sqlEscapeAll=cc.isSqlEscapeAll();
  sqlFuncCls=cc.getSqlFunctionClasses();
  sqlOnheapRowCacheSize=cc.getSqlOnheapRowCacheSize();
  startSize=cc.getStartSize();
  storeFactory=cc.getCacheStoreFactory();
  storeSesLsnrs=cc.getCacheStoreSessionListenerFactories();
  swapEnabled=cc.isSwapEnabled();
  tmLookupClsName=cc.getTransactionManagerLookupClassName();
  topValidator=cc.getTopologyValidator();
  typeMeta=cc.getTypeMetadata();
  writeBehindBatchSize=cc.getWriteBehindBatchSize();
  writeBehindEnabled=cc.isWriteBehindEnabled();
  writeBehindFlushFreq=cc.getWriteBehindFlushFrequency();
  writeBehindFlushSize=cc.getWriteBehindFlushSize();
  writeBehindFlushThreadCnt=cc.getWriteBehindFlushThreadCount();
  writeSync=cc.getWriteSynchronizationMode();
}
