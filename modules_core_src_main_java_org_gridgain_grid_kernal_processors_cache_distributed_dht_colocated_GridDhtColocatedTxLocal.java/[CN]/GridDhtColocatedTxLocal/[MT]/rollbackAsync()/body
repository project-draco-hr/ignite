{
  if (log.isDebugEnabled())   log.debug("Rolling back colocated tx: " + this);
  GridDhtColocatedTxFinishFuture<K,V> fut=rollbackFut.get();
  if (fut != null)   return fut;
  if (!rollbackFut.compareAndSet(null,fut=new GridDhtColocatedTxFinishFuture<>(cctx,this)))   return rollbackFut.get();
  cctx.mvcc().addFuture(fut);
  GridFuture<GridCacheTxEx<K,V>> prepareFut=prepFut.get();
  if (prepareFut == null || prepareFut.isDone()) {
    try {
      if (finish(false) || state() == UNKNOWN)       fut.finish(false);
 else       fut.onError(new GridException("Failed to gracefully rollback transaction: " + CU.txString(this)));
    }
 catch (    GridException e) {
      fut.onError(e);
    }
  }
 else {
    prepareFut.listenAsync(new CI1<GridFuture<GridCacheTxEx<K,V>>>(){
      @Override public void apply(      GridFuture<GridCacheTxEx<K,V>> f){
        try {
          f.get();
        }
 catch (        GridException e) {
          if (log.isDebugEnabled())           log.debug("Got optimistic tx failure [tx=" + this + ", err="+ e+ ']');
        }
        GridDhtColocatedTxFinishFuture<K,V> rollbackFut0=rollbackFut.get();
        try {
          if (finish(false) || state() == UNKNOWN)           rollbackFut0.finish(false);
 else           rollbackFut0.onError(new GridException("Failed to gracefully rollback transaction: " + CU.txString(GridDhtColocatedTxLocal.this)));
        }
 catch (        GridException e) {
          U.error(log,"Failed to gracefully rollback transaction: " + CU.txString(GridDhtColocatedTxLocal.this),e);
          rollbackFut0.onError(e);
        }
      }
    }
);
  }
  return fut;
}
