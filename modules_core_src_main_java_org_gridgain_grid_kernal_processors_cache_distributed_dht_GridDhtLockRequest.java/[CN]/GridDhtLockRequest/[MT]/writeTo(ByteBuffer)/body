{
  commState.setBuffer(buf);
  if (!super.writeTo(buf))   return false;
  if (!commState.typeWritten) {
    if (!commState.putByte(null,directType()))     return false;
    commState.typeWritten=true;
  }
switch (commState.idx) {
case 24:
    if (!commState.putBitSet(null,invalidateEntries))     return false;
  commState.idx++;
case 25:
if (!commState.putGridUuid(null,miniId)) return false;
commState.idx++;
case 26:
if (nearKeyBytes != null) {
if (commState.it == null) {
if (!commState.putInt(null,nearKeyBytes.size())) return false;
commState.it=nearKeyBytes.iterator();
}
while (commState.it.hasNext() || commState.cur != NULL) {
if (commState.cur == NULL) commState.cur=commState.it.next();
if (!commState.putByteArray(null,(byte[])commState.cur)) return false;
commState.cur=NULL;
}
commState.it=null;
}
 else {
if (!commState.putInt(null,-1)) return false;
}
commState.idx++;
case 27:
if (!commState.putByteArray(null,ownedBytes)) return false;
commState.idx++;
case 28:
if (!commState.putLong(null,topVer)) return false;
commState.idx++;
case 29:
if (!commState.putUuid(null,subjId)) return false;
commState.idx++;
case 30:
if (!commState.putInt(null,taskNameHash)) return false;
commState.idx++;
case 31:
if (!commState.putBitSet(null,preloadKeys)) return false;
commState.idx++;
}
return true;
}
