{
  ExecutorService pool=Executors.newFixedThreadPool(threadCnt);
  final AtomicBoolean finish=new AtomicBoolean();
  for (int i=0; i < threadCnt; i++)   pool.submit(new Callable<Object>(){
    @Nullable @Override public Object call() throws Exception {
      while (!finish.get())       c.call();
      return null;
    }
  }
);
  try {
    Thread.sleep(dur);
  }
 catch (  InterruptedException ignored) {
  }
  finish.set(true);
  pool.shutdown();
}
