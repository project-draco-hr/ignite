{
  ctx=cfg.getServletContext();
  String gridName=U.firstNotNull(cfg.getInitParameter(WEB_SES_NAME_PARAM),ctx.getInitParameter(WEB_SES_NAME_PARAM));
  cacheName=U.firstNotNull(cfg.getInitParameter(WEB_SES_CACHE_NAME_PARAM),ctx.getInitParameter(WEB_SES_CACHE_NAME_PARAM));
  String retriesStr=U.firstNotNull(cfg.getInitParameter(WEB_SES_MAX_RETRIES_ON_FAIL_NAME_PARAM),ctx.getInitParameter(WEB_SES_MAX_RETRIES_ON_FAIL_NAME_PARAM));
  try {
    retries=retriesStr != null ? Integer.parseInt(retriesStr) : DFLT_MAX_RETRIES_ON_FAIL;
  }
 catch (  NumberFormatException e) {
    throw new IgniteException("Maximum number of retries parameter is invalid: " + retriesStr,e);
  }
  String retriesTimeoutStr=U.firstNotNull(cfg.getInitParameter(WEB_SES_RETRIES_TIMEOUT_NAME_PARAM),ctx.getInitParameter(WEB_SES_RETRIES_TIMEOUT_NAME_PARAM));
  try {
    retriesTimeout=retriesTimeoutStr != null ? Integer.parseInt(retriesTimeoutStr) : DFLT_RETRIES_ON_FAIL_TIMEOUT;
  }
 catch (  NumberFormatException e) {
    throw new IgniteException("Retries timeout parameter is invalid: " + retriesTimeoutStr,e);
  }
  webSesIgnite=G.ignite(gridName);
  if (webSesIgnite == null)   throw new IgniteException("Grid for web sessions caching is not started (is it configured?): " + gridName);
  txs=webSesIgnite.transactions();
  log=webSesIgnite.log();
  initCache();
  lsnr=new WebSessionListener(webSesIgnite,this,retries);
  String srvInfo=ctx.getServerInfo();
  if (srvInfo != null && srvInfo.contains("WebLogic")) {
    sesIdTransformer=new C1<String,String>(){
      @Override public String apply(      String s){
        int idx=s.indexOf('!');
        if (idx < 0 || idx == s.length() - 1)         return s;
        idx=s.indexOf('!',idx + 1);
        if (idx < 0)         return s;
        return s.substring(0,idx);
      }
    }
;
  }
  if (log.isInfoEnabled())   log.info("Started web sessions caching [gridName=" + gridName + ", cacheName="+ cacheName+ ", maxRetriesOnFail="+ retries+ ']');
}
