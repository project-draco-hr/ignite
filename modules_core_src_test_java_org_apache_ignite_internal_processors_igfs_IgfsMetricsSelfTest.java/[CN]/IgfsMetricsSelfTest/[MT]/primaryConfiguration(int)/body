{
  FileSystemConfiguration igfsCfg=new FileSystemConfiguration();
  igfsCfg.setDataCacheName("dataCache");
  igfsCfg.setMetaCacheName("metaCache");
  igfsCfg.setName(IGFS_PRIMARY);
  igfsCfg.setBlockSize(PRIMARY_BLOCK_SIZE);
  igfsCfg.setDefaultMode(PRIMARY);
  igfsCfg.setSecondaryFileSystem(igfsSecondary.asSecondary());
  Map<String,IgfsMode> pathModes=new HashMap<>();
  pathModes.put("/fileRemote",DUAL_SYNC);
  igfsCfg.setPathModes(pathModes);
  CacheConfiguration dataCacheCfg=defaultCacheConfiguration();
  dataCacheCfg.setName("dataCache");
  dataCacheCfg.setCacheMode(PARTITIONED);
  dataCacheCfg.setNearConfiguration(null);
  dataCacheCfg.setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC);
  dataCacheCfg.setAffinityMapper(new IgfsGroupDataBlocksKeyMapper(128));
  dataCacheCfg.setBackups(0);
  dataCacheCfg.setAtomicityMode(TRANSACTIONAL);
  CacheConfiguration metaCacheCfg=defaultCacheConfiguration();
  metaCacheCfg.setName("metaCache");
  metaCacheCfg.setCacheMode(REPLICATED);
  metaCacheCfg.setNearConfiguration(null);
  metaCacheCfg.setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC);
  metaCacheCfg.setAtomicityMode(TRANSACTIONAL);
  IgniteConfiguration cfg=new IgniteConfiguration();
  cfg.setGridName("grid-" + idx);
  TcpDiscoverySpi discoSpi=new TcpDiscoverySpi();
  discoSpi.setIpFinder(IP_FINDER);
  cfg.setDiscoverySpi(discoSpi);
  cfg.setCacheConfiguration(dataCacheCfg,metaCacheCfg);
  cfg.setFileSystemConfiguration(igfsCfg);
  cfg.setLocalHost("127.0.0.1");
  return cfg;
}
