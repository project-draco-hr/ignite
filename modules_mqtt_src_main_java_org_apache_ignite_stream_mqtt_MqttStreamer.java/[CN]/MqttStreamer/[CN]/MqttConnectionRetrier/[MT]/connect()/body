{
  Callable<Boolean> callable=retrier.wrap(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      if (connected)       return true;
      if (stopped)       return false;
      if (connectOptions == null)       client.connect();
 else       client.connect(connectOptions);
      if (qualitiesOfService.isEmpty())       client.subscribe(topics.toArray(new String[0]));
 else {
        int[] qoses=new int[qualitiesOfService.size()];
        for (int i=0; i < qualitiesOfService.size(); i++)         qoses[i]=qualitiesOfService.get(i);
        client.subscribe(topics.toArray(new String[0]),qoses);
      }
      log.info("MQTT Streamer (re-)connected and subscribed " + cachedLogValues);
      connected=true;
      return true;
    }
  }
);
  Future<Boolean> result=exec.submit(callable);
  if (blockUntilConnected) {
    try {
      result.get();
    }
 catch (    Throwable e) {
      throw new RuntimeException(e);
    }
  }
}
