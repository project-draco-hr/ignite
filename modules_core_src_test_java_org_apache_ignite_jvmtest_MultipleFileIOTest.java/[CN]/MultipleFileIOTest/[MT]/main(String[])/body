{
  File parent=new File(TMP_DIR,"testMultipleFilesCreation");
  System.out.println("Deleting: " + new Date());
  delete(parent);
  parent.mkdirs();
  int childCnt=10;
  int subChildCnt=10;
  boolean useRaf=true;
  if (args.length > 0) {
    childCnt=Integer.parseInt(args[0]);
    subChildCnt=Integer.parseInt(args[1]);
  }
  if (args.length > 3)   useRaf=Boolean.parseBoolean(args[2]);
  for (int i=0; i < childCnt; i++) {
    File f=new File(parent,String.valueOf(i));
    f.mkdirs();
    for (int j=0; j < subChildCnt; j++)     new File(f,String.valueOf(j)).mkdirs();
  }
  System.out.println("Test started: " + new Date());
  System.out.println("Parent: " + parent.getAbsolutePath());
  long start=System.currentTimeMillis();
  byte[] data=new byte[4096];
  for (int i=0; i < 50000; i++) {
    int idx1=i % childCnt;
    int idx2=(i / childCnt) % subChildCnt;
    File f=new File(parent,idx1 + File.separator + idx2+ File.separatorChar+ i);
    if (useRaf) {
      RandomAccessFile raf=null;
      try {
        raf=new RandomAccessFile(f,"rw");
        raf.write(data);
      }
  finally {
        if (raf != null)         raf.close();
      }
    }
 else {
      FileOutputStream fos=null;
      try {
        fos=new FileOutputStream(f);
        fos.write(data);
      }
  finally {
        if (fos != null)         fos.close();
      }
    }
  }
  System.out.println("Test time: " + (System.currentTimeMillis() - start));
}
