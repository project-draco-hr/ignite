{
  if (keys.size() == 1) {
    K key=keys.get(0);
    while (true) {
      GridDhtCacheEntry<K,V> entry=entryExx(key,topVer);
      UNSAFE.monitorEnter(entry);
      if (entry.obsolete())       UNSAFE.monitorExit(entry);
 else       return Collections.singletonList(entry);
    }
  }
 else {
    List<GridDhtCacheEntry<K,V>> locked=new ArrayList<>(keys.size());
    while (true) {
      for (      K key : keys) {
        GridDhtCacheEntry<K,V> entry=entryExx(key,topVer);
        locked.add(entry);
      }
      for (int i=0; i < locked.size(); i++) {
        GridCacheMapEntry<K,V> entry=locked.get(i);
        UNSAFE.monitorEnter(entry);
        if (entry.obsolete()) {
          for (int j=0; j <= i; j++)           UNSAFE.monitorExit(locked.get(j));
          locked.clear();
          break;
        }
      }
      if (!locked.isEmpty())       return locked;
    }
  }
}
