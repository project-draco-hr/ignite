{
  try (Ignite ignite=Ignition.start("examples/config/example-compute.xml")){
    if (!ExamplesUtils.checkMinTopologySize(ignite.cluster(),2))     return;
    System.out.println();
    System.out.println(">>> Messaging ping-pong example started.");
    ClusterGroup nodeB=ignite.cluster().forRemotes().forRandom();
    ignite.message(nodeB).remoteListen(null,new IgniteBiPredicate<UUID,String>(){
      /** 
 * This will be injected on node listener comes to. 
 */
      @IgniteInstanceResource private Ignite ignite;
      @Override public boolean apply(      UUID nodeId,      String rcvMsg){
        System.out.println("Received message [msg=" + rcvMsg + ", sender="+ nodeId+ ']');
        try {
          if ("PING".equals(rcvMsg)) {
            ignite.message(ignite.cluster().forNodeId(nodeId)).send(null,"PONG");
            return true;
          }
          return false;
        }
 catch (        IgniteException e) {
          throw new GridClosureException(e);
        }
      }
    }
);
    int MAX_PLAYS=10;
    final CountDownLatch cnt=new CountDownLatch(MAX_PLAYS);
    ignite.message().localListen(null,new IgniteBiPredicate<UUID,String>(){
      @Override public boolean apply(      UUID nodeId,      String rcvMsg){
        System.out.println("Received message [msg=" + rcvMsg + ", sender="+ nodeId+ ']');
        try {
          if (cnt.getCount() == 1) {
            ignite.message(ignite.cluster().forNodeId(nodeId)).send(null,"STOP");
            cnt.countDown();
            return false;
          }
 else           if ("PONG".equals(rcvMsg))           ignite.message(ignite.cluster().forNodeId(nodeId)).send(null,"PING");
 else           throw new RuntimeException("Received unexpected message: " + rcvMsg);
          cnt.countDown();
          return true;
        }
 catch (        IgniteException e) {
          throw new GridClosureException(e);
        }
      }
    }
);
    ignite.message(nodeB).send(null,"PING");
    try {
      cnt.await();
    }
 catch (    InterruptedException e) {
      System.err.println("Hm... let us finish the game!\n" + e);
    }
  }
 }
