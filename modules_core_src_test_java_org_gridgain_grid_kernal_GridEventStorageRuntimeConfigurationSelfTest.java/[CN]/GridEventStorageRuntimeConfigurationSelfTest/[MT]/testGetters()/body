{
  inclEvtTypes=new int[]{EVT_TASK_STARTED,EVT_TASK_FINISHED};
  try {
    Grid g=startGrid();
    assertEqualsWithoutOrder(inclEvtTypes,getEnabledEvents(g));
    assertEqualsWithoutOrder(inclEvtTypes,getEnabledEvents(1013,g));
    g.events().enableLocal(20000,EVT_TASK_STARTED,EVT_CACHE_ENTRY_CREATED);
    assertEqualsWithoutOrder(new int[]{EVT_TASK_STARTED,EVT_TASK_FINISHED,EVT_CACHE_ENTRY_CREATED,20000},getEnabledEvents(g));
    assertEqualsWithoutOrder(new int[]{EVT_TASK_STARTED,EVT_TASK_FINISHED,EVT_CACHE_ENTRY_CREATED,20000},getEnabledEvents(1013,g,20000));
    g.events().disableLocal(20000,20001,EVT_TASK_STARTED,EVT_CACHE_ENTRY_CREATED);
    assertEqualsWithoutOrder(new int[]{EVT_TASK_FINISHED,EVT_TASK_STARTED},getEnabledEvents(g));
    assertEqualsWithoutOrder(new int[]{EVT_TASK_FINISHED,EVT_TASK_STARTED},getEnabledEvents(1013,g,20000));
    int[] a=new int[1013];
    for (int i=0; i < 1000; i++)     a[i]=1001 + i;
    a[1000]=EVT_TASK_TIMEDOUT;
    a[1001]=EVT_TASK_STARTED;
    randomShuffle(a,1002);
    int[] a0=Arrays.copyOf(a,a.length + 1);
    g.events().enableLocal(Arrays.copyOf(a,1002));
    a0[1002]=EVT_TASK_FINISHED;
    assertEqualsWithoutOrder(Arrays.copyOf(a0,1003),getEnabledEvents(g));
    assertEqualsWithoutOrder(Arrays.copyOf(a0,1003),getEnabledEvents(2013,g));
    g.events().disableLocal(Arrays.copyOf(a,1002));
    assertEqualsWithoutOrder(new int[]{EVT_TASK_STARTED,EVT_TASK_FINISHED},getEnabledEvents(g));
    assertEqualsWithoutOrder(new int[]{EVT_TASK_STARTED,EVT_TASK_FINISHED},getEnabledEvents(1013,g,20000));
  }
  finally {
    stopAllGrids();
  }
}
