{
  if (stop)   return;
  if (failSingleMsg) {
    failSingleMsg=false;
    log.info("IO error on message send [locNode=" + locNode + ", msg="+ msg+ ']');
    sock.close();
    throw new SocketTimeoutException();
  }
  if (locNode.internalOrder() == failOrder && (msg instanceof TcpDiscoveryNodeAddedMessage) && failMsg.compareAndSet(false,true)) {
    log.info("IO error on message send [locNode=" + locNode + ", msg="+ msg+ ']');
    sock.close();
    throw new SocketTimeoutException();
  }
  if (stopBeforeSndFail && locNode.internalOrder() == failOrder && (msg instanceof TcpDiscoveryNodeFailedMessage)) {
    stop=true;
    log.info("Skip messages send and stop node [locNode=" + locNode + ", msg="+ msg+ ']');
    sock.close();
    GridTestUtils.runAsync(new Callable<Object>(){
      @Override public Object call() throws Exception {
        ignite.close();
        return null;
      }
    }
,"stop-node");
    return;
  }
  super.writeToSocket(sock,out,msg,timeout);
}
