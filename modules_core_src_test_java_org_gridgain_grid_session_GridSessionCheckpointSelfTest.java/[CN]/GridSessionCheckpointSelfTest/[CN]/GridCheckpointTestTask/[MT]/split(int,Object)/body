{
  for (int i=0; i < SPLIT_COUNT; i++) {
    ses.saveCheckpoint("map:session:key:" + i,"map:session:testval:" + i);
    ses.saveCheckpoint("map:global:key:" + i,"map:global:testval:" + i,GridComputeTaskSessionScope.GLOBAL_SCOPE,0);
  }
  Collection<GridComputeJobAdapter> jobs=new ArrayList<>(SPLIT_COUNT);
  for (int i=0; i < SPLIT_COUNT; i++) {
    jobs.add(new GridComputeJobAdapter(i){
      /** 
 */
      private static final long serialVersionUID=-9118687978815477993L;
      /** 
 * {@inheritDoc} 
 */
      @Override public Serializable execute() throws GridException {
        ses.saveCheckpoint("job:session:key:" + argument(0),"job:session:testval:" + argument(0));
        ses.saveCheckpoint("job:global:key:" + argument(0),"job:global:testval:" + argument(0),GridComputeTaskSessionScope.GLOBAL_SCOPE,0);
        return 1;
      }
    }
);
  }
  return jobs;
}
