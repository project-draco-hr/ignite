{
  checkObsolete();
  if (isNew()) {
    V val=unswapped.value();
    if (cctx.portableEnabled()) {
      val=(V)cctx.kernalContext().portable().detachPortable(val);
      if (cctx.offheapTiered() && !unswapped.valueIsByteArray())       unswapped.valueBytes(cctx.convertPortableBytes(unswapped.valueBytes()));
    }
    update(val,unswapped.valueBytes(),unswapped.expireTime(),unswapped.ttl(),unswapped.version());
    return true;
  }
  return false;
}
