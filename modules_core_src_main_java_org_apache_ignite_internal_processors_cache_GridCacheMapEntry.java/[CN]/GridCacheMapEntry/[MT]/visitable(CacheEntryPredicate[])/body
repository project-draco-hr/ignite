{
  boolean rmv=false;
  try {
synchronized (this) {
      if (obsoleteOrDeleted())       return false;
      if (checkExpired()) {
        rmv=markObsolete0(cctx.versions().next(this.ver),true,null);
        return false;
      }
    }
    if (filter != CU.empty0() && !cctx.isAll(this,filter))     return false;
  }
 catch (  IgniteCheckedException e) {
    U.error(log,"An exception was thrown while filter checking.",e);
    RuntimeException ex=e.getCause(RuntimeException.class);
    if (ex != null)     throw ex;
    Error err=e.getCause(Error.class);
    if (err != null)     throw err;
    return false;
  }
 finally {
    if (rmv) {
      onMarkedObsolete();
      cctx.cache().removeEntry(this);
    }
  }
  IgniteInternalTx tx=cctx.tm().localTxx();
  if (tx != null) {
    IgniteTxEntry e=tx.entry(txKey());
    boolean rmvd=e != null && e.op() == DELETE;
    return !rmvd;
  }
  return true;
}
