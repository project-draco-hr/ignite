{
  checkArgs(args);
  final int frameworkFailoverTimeout=0;
  Protos.FrameworkInfo.Builder frameworkBuilder=Protos.FrameworkInfo.newBuilder().setName("IgniteFramework").setUser("").setFailoverTimeout(frameworkFailoverTimeout);
  if (System.getenv("MESOS_CHECKPOINT") != null) {
    System.out.println("Enabling checkpoint for the framework");
    frameworkBuilder.setCheckpoint(true);
  }
  final Scheduler scheduler=createIgniteScheduler(args);
  MesosSchedulerDriver driver;
  if (System.getenv("MESOS_AUTHENTICATE") != null) {
    System.out.println("Enabling authentication for the framework");
    if (System.getenv("DEFAULT_PRINCIPAL") == null) {
      System.err.println("Expecting authentication principal in the environment");
      System.exit(1);
    }
    if (System.getenv("DEFAULT_SECRET") == null) {
      System.err.println("Expecting authentication secret in the environment");
      System.exit(1);
    }
    Protos.Credential credential=Protos.Credential.newBuilder().setPrincipal(System.getenv("DEFAULT_PRINCIPAL")).setSecret(ByteString.copyFrom(System.getenv("DEFAULT_SECRET").getBytes())).build();
    frameworkBuilder.setPrincipal(System.getenv("DEFAULT_PRINCIPAL"));
    driver=new MesosSchedulerDriver(scheduler,frameworkBuilder.build(),args[0],credential);
  }
 else {
    frameworkBuilder.setPrincipal("ignite-framework-java");
    driver=new MesosSchedulerDriver(scheduler,frameworkBuilder.build(),args[0]);
  }
  int status=driver.run() == Protos.Status.DRIVER_STOPPED ? 0 : 1;
  driver.stop();
  System.exit(status);
}
