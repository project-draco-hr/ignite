{
  try (Grid g=GridGain.start("examples/config/example-cache.xml")){
    System.out.println();
    System.out.println(">>> Cache continuous query example started.");
    GridCache<Integer,String> cache=g.cache(CACHE_NAME);
    int keyCnt=20;
    for (int i=0; i < keyCnt; i++)     cache.putx(i,Integer.toString(i));
    try (GridCacheContinuousQuery<Integer,String> qry=cache.queries().createContinuousQuery()){
      qry.localCallback(new GridBiPredicate<UUID,Collection<GridCacheContinuousQueryEntry<Integer,String>>>(){
        @Override public boolean apply(        UUID nodeId,        Collection<GridCacheContinuousQueryEntry<Integer,String>> entries){
          for (          GridCacheContinuousQueryEntry<Integer,String> e : entries)           System.out.println("Queried entry [key=" + e.getKey() + ", val="+ e.getValue()+ ']');
          return true;
        }
      }
);
      qry.remoteFilter(new GridPredicate<GridCacheContinuousQueryEntry<Integer,String>>(){
        @Override public boolean apply(        GridCacheContinuousQueryEntry<Integer,String> e){
          return e.getKey() > 15;
        }
      }
);
      qry.execute();
      for (int i=keyCnt; i < keyCnt + 5; i++)       cache.putx(i,Integer.toString(i));
      Thread.sleep(2000);
    }
   }
 }
