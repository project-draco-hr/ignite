{
  CacheConfiguration<Long,Person> cfg=new CacheConfiguration<>(name);
  cfg.setAtomicityMode(TRANSACTIONAL);
  cfg.setCacheStoreFactory(new Factory<CacheStore<? super Long,? super Person>>(){
    @Override public CacheStore<? super Long,? super Person> create(){
      CacheJdbcPojoStore<Long,Person> store=new CacheJdbcPojoStore<>();
      store.setDataSource(JdbcConnectionPool.create("jdbc:h2:tcp://localhost/mem:ExampleDb","sa",""));
      return store;
    }
  }
);
  CacheTypeMetadata meta=new CacheTypeMetadata();
  meta.setDatabaseTable("PERSON");
  meta.setKeyType("java.lang.Long");
  meta.setValueType("org.apache.ignite.examples.model.Person");
  meta.setKeyFields(Collections.singletonList(new CacheTypeFieldMetadata("ID",Types.BIGINT,"id",Long.class)));
  meta.setValueFields(Arrays.asList(new CacheTypeFieldMetadata("ID",Types.BIGINT,"id",long.class),new CacheTypeFieldMetadata("FIRST_NAME",Types.VARCHAR,"firstName",String.class),new CacheTypeFieldMetadata("LAST_NAME",Types.VARCHAR,"lastName",String.class)));
  cfg.setTypeMetadata(Collections.singletonList(meta));
  cfg.setWriteBehindEnabled(true);
  cfg.setReadThrough(true);
  cfg.setWriteThrough(true);
  return cfg;
}
