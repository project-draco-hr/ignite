{
  if (log.isDebugEnabled())   log.debug("Updating full partition map [exchId=" + exchId + ", parts="+ fullMapString()+ ']');
  lock.writeLock().lock();
  try {
    if (exchId != null && lastExchangeId != null && lastExchangeId.compareTo(exchId) >= 0) {
      if (log.isDebugEnabled())       log.debug("Stale exchange id for full partition map update (will ignore) [lastExchId=" + lastExchangeId + ", exchId="+ exchId+ ']');
      return null;
    }
    if (node2part != null && node2part.compareTo(partMap) >= 0) {
      if (log.isDebugEnabled())       log.debug("Stale partition map for full partition map update (will ignore) [lastExchId=" + lastExchangeId + ", exchId="+ exchId+ ", curMap="+ node2part+ ", newMap="+ partMap+ ']');
      return null;
    }
    long updateSeq=this.updateSeq.incrementAndGet();
    if (exchId != null)     lastExchangeId=exchId;
    if (node2part != null) {
      for (      GridDhtPartitionMap part : node2part.values()) {
        GridDhtPartitionMap newPart=partMap.get(part.nodeId());
        if (newPart != null && newPart.updateSequence() < part.updateSequence()) {
          if (log.isDebugEnabled())           log.debug("Overriding partition map in full update map [exchId=" + exchId + ", curPart="+ mapString(part)+ ", newPart="+ mapString(newPart)+ ']');
          partMap.put(part.nodeId(),part);
        }
      }
      for (Iterator<UUID> it=partMap.keySet().iterator(); it.hasNext(); ) {
        UUID nodeId=it.next();
        if (!cctx.discovery().alive(nodeId)) {
          if (log.isDebugEnabled())           log.debug("Removing left node from full map update [nodeId=" + nodeId + ", partMap="+ partMap+ ']');
          it.remove();
        }
      }
    }
    node2part=partMap;
    Map<Integer,Set<UUID>> p2n=new HashMap<>(cctx.affinity().partitions(),1.0f);
    for (    Map.Entry<UUID,GridDhtPartitionMap> e : partMap.entrySet()) {
      for (      Integer p : e.getValue().keySet()) {
        Set<UUID> ids=p2n.get(p);
        if (ids == null)         p2n.put(p,ids=new HashSet<>(3));
        ids.add(e.getKey());
      }
    }
    part2node=p2n;
    boolean changed=checkEvictions(updateSeq);
    consistencyCheck();
    if (log.isDebugEnabled())     log.debug("Partition map after full update: " + fullMapString());
    return changed ? localPartitionMap() : null;
  }
  finally {
    lock.writeLock().unlock();
  }
}
