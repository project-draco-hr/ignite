{
  int cursorCnt=qryCursors.size();
  if (maxCursors > 0 && cursorCnt >= maxCursors)   return new OdbcResponse(OdbcResponse.STATUS_FAILED,"Too many opened cursors (either close other " + "opened cursors or increase the limit through OdbcConfiguration.setMaxOpenCursors()) " + "[maximum=" + maxCursors + ", current="+ cursorCnt+ ']');
  long qryId=QRY_ID_GEN.getAndIncrement();
  try {
    SqlFieldsQuery qry=new SqlFieldsQuery(req.sqlQuery());
    qry.setArgs(req.arguments());
    qry.setDistributedJoins(distributedJoins);
    qry.setEnforceJoinOrder(enforceJoinOrder);
    IgniteCache<Object,Object> cache=ctx.grid().cache(req.cacheName());
    if (cache == null)     return new OdbcResponse(OdbcResponse.STATUS_FAILED,"Cache doesn't exist (did you configure it?): " + req.cacheName());
    QueryCursor qryCur=cache.query(qry);
    Iterator iter=qryCur.iterator();
    qryCursors.put(qryId,new IgniteBiTuple<>(qryCur,iter));
    List<?> fieldsMeta=((QueryCursorImpl)qryCur).fieldsMeta();
    OdbcQueryExecuteResult res=new OdbcQueryExecuteResult(qryId,convertMetadata(fieldsMeta));
    return new OdbcResponse(res);
  }
 catch (  Exception e) {
    qryCursors.remove(qryId);
    return new OdbcResponse(OdbcResponse.STATUS_FAILED,e.getMessage());
  }
}
