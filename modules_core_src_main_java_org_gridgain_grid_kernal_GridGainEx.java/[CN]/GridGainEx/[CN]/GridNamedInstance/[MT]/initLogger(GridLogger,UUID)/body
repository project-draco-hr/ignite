{
  try {
    final String log4jClsName="org.gridgain.grid.logger.log4j.GridLog4jLogger";
    if (cfgLog == null) {
      Class<?> log4jCls;
      try {
        log4jCls=Class.forName(log4jClsName);
      }
 catch (      ClassNotFoundException ignored) {
        log4jCls=null;
      }
      if (log4jCls != null) {
        URL url=U.resolveGridGainUrl("config/gridgain-log4j.xml");
        if (url != null) {
          boolean configured=(Boolean)log4jCls.getMethod("isConfigured").invoke(null);
          if (configured)           url=null;
        }
        if (url != null) {
          Constructor<?> ctor=log4jCls.getConstructor(String.class);
          cfgLog=(GridLogger)ctor.newInstance(url);
        }
 else         cfgLog=(GridLogger)log4jCls.newInstance();
      }
 else       cfgLog=new GridJavaLogger();
    }
    if (cfgLog.getClass().getName().equals(log4jClsName))     cfgLog.getClass().getMethod("setNodeId").invoke(null,nodeId);
    return cfgLog;
  }
 catch (  Exception e) {
    throw new GridException("Failed to create GridLog4jLogger.",e);
  }
}
