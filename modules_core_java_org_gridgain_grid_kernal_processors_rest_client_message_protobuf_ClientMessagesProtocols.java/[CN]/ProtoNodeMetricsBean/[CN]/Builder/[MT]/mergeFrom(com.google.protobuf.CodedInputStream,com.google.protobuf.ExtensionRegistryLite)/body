{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    onChanged();
  return this;
default :
{
  if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
    this.setUnknownFields(unknownFields.build());
    onChanged();
    return this;
  }
  break;
}
case 8:
{
bitField0_|=0x00000001;
lastUpdateTime_=input.readInt64();
break;
}
case 16:
{
bitField0_|=0x00000002;
maximumActiveJobs_=input.readInt32();
break;
}
case 24:
{
bitField0_|=0x00000004;
currentActiveJobs_=input.readInt32();
break;
}
case 37:
{
bitField0_|=0x00000008;
averageActiveJobs_=input.readFloat();
break;
}
case 40:
{
bitField0_|=0x00000010;
maximumWaitingJobs_=input.readInt32();
break;
}
case 48:
{
bitField0_|=0x00000020;
currentWaitingJobs_=input.readInt32();
break;
}
case 61:
{
bitField0_|=0x00000040;
averageWaitingJobs_=input.readFloat();
break;
}
case 64:
{
bitField0_|=0x00000080;
maximumRejectedJobs_=input.readInt32();
break;
}
case 72:
{
bitField0_|=0x00000100;
currentRejectedJobs_=input.readInt32();
break;
}
case 85:
{
bitField0_|=0x00000200;
averageRejectedJobs_=input.readFloat();
break;
}
case 88:
{
bitField0_|=0x00000400;
maximumCancelledJobs_=input.readInt32();
break;
}
case 96:
{
bitField0_|=0x00000800;
currentCancelledJobs_=input.readInt32();
break;
}
case 109:
{
bitField0_|=0x00001000;
averageCancelledJobs_=input.readFloat();
break;
}
case 112:
{
bitField0_|=0x00002000;
totalRejectedJobs_=input.readInt32();
break;
}
case 120:
{
bitField0_|=0x00004000;
totalCancelledJobs_=input.readInt32();
break;
}
case 128:
{
bitField0_|=0x00008000;
totalExecutedJobs_=input.readInt32();
break;
}
case 136:
{
bitField0_|=0x00010000;
maximumJobWaitTime_=input.readInt64();
break;
}
case 144:
{
bitField0_|=0x00020000;
currentJobWaitTime_=input.readInt64();
break;
}
case 153:
{
bitField0_|=0x00040000;
averageJobWaitTime_=input.readDouble();
break;
}
case 160:
{
bitField0_|=0x00080000;
maximumJobExecuteTime_=input.readInt64();
break;
}
case 168:
{
bitField0_|=0x00100000;
currentJobExecuteTime_=input.readInt64();
break;
}
case 177:
{
bitField0_|=0x00200000;
averageJobExecuteTime_=input.readDouble();
break;
}
case 184:
{
bitField0_|=0x00400000;
totalIdleTime_=input.readInt64();
break;
}
case 192:
{
bitField0_|=0x00800000;
currentIdleTime_=input.readInt64();
break;
}
case 200:
{
bitField0_|=0x01000000;
totalCpus_=input.readInt32();
break;
}
case 209:
{
bitField0_|=0x02000000;
currentCpuLoad_=input.readDouble();
break;
}
case 217:
{
bitField0_|=0x04000000;
averageCpuLoad_=input.readDouble();
break;
}
case 224:
{
bitField0_|=0x08000000;
heapMemoryInitialized_=input.readInt64();
break;
}
case 232:
{
bitField0_|=0x10000000;
heapMemoryUsed_=input.readInt64();
break;
}
case 240:
{
bitField0_|=0x20000000;
heapMemoryCommitted_=input.readInt64();
break;
}
case 248:
{
bitField0_|=0x40000000;
heapMemoryMaximum_=input.readInt64();
break;
}
case 256:
{
bitField0_|=0x80000000;
nonHeapMemoryInitialized_=input.readInt64();
break;
}
case 264:
{
bitField1_|=0x00000001;
nonHeapMemoryUsed_=input.readInt64();
break;
}
case 272:
{
bitField1_|=0x00000002;
nonHeapMemoryCommitted_=input.readInt64();
break;
}
case 280:
{
bitField1_|=0x00000004;
nonHeapMemoryMaximum_=input.readInt64();
break;
}
case 288:
{
bitField1_|=0x00000008;
upTime_=input.readInt64();
break;
}
case 296:
{
bitField1_|=0x00000010;
startTime_=input.readInt64();
break;
}
case 304:
{
bitField1_|=0x00000020;
nodeStartTime_=input.readInt64();
break;
}
case 312:
{
bitField1_|=0x00000040;
currentThreadCount_=input.readInt32();
break;
}
case 320:
{
bitField1_|=0x00000080;
maximumThreadCount_=input.readInt32();
break;
}
case 328:
{
bitField1_|=0x00000100;
totalStartedThreadCount_=input.readInt64();
break;
}
case 336:
{
bitField1_|=0x00000200;
currentDaemonThreadCount_=input.readInt32();
break;
}
case 344:
{
bitField1_|=0x00000400;
fileSystemFreeSpace_=input.readInt64();
break;
}
case 352:
{
bitField1_|=0x00000800;
fileSystemTotalSpace_=input.readInt64();
break;
}
case 360:
{
bitField1_|=0x00001000;
fileSystemUsableSpace_=input.readInt64();
break;
}
case 368:
{
bitField1_|=0x00002000;
lastDataVersion_=input.readInt64();
break;
}
case 377:
{
bitField1_|=0x00004000;
currentGcCpuLoad_=input.readDouble();
break;
}
case 384:
{
bitField1_|=0x00008000;
totalExecutedTasks_=input.readInt32();
break;
}
case 392:
{
bitField1_|=0x00010000;
sentMessagesCount_=input.readInt32();
break;
}
case 400:
{
bitField1_|=0x00020000;
sentBytesCount_=input.readInt64();
break;
}
case 408:
{
bitField1_|=0x00040000;
receivedMessagesCount_=input.readInt32();
break;
}
case 416:
{
bitField1_|=0x00080000;
receivedBytesCount_=input.readInt64();
break;
}
}
}
}
