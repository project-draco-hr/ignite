{
  GridCacheProjection<String,Integer> cache=cache();
  cache.put("key2",1);
  cache.put("key3",3);
  IgniteTx tx=txEnabled() ? cache.txStart(concurrency,isolation) : null;
  try {
    cache.transform("key1",INCR_CLOS);
    cache.transform("key2",INCR_CLOS);
    cache.transform("key3",RMV_CLOS);
    if (tx != null)     tx.commit();
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw e;
  }
 finally {
    if (tx != null)     tx.close();
  }
  assertEquals((Integer)1,cache.get("key1"));
  assertEquals((Integer)2,cache.get("key2"));
  assertNull(cache.get("key3"));
  for (int i=0; i < gridCount(); i++)   assertNull("Failed for cache: " + i,cache(i).peek("key3"));
  cache.remove("key1");
  cache.put("key2",1);
  cache.put("key3",3);
  cache.transform("key1",INCR_CLOS);
  cache.transform("key2",INCR_CLOS);
  cache.transform("key3",RMV_CLOS);
  assertEquals((Integer)1,cache.get("key1"));
  assertEquals((Integer)2,cache.get("key2"));
  assertNull(cache.get("key3"));
  for (int i=0; i < gridCount(); i++)   assertNull(cache(i).peek("key3"));
}
