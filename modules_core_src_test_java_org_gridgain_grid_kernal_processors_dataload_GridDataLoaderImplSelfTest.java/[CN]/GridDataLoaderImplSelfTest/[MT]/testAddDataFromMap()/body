{
  try {
    cnt=0;
    portables=false;
    startGrids(2);
    Ignite g0=grid(0);
    IgniteMarshaller marsh=g0.configuration().getMarshaller();
    if (marsh instanceof IgniteOptimizedMarshaller)     assertTrue(((IgniteOptimizedMarshaller)marsh).isRequireSerializable());
 else     fail("Expected GridOptimizedMarshaller, but found: " + marsh.getClass().getName());
    IgniteDataLoader<Integer,String> dataLdr=g0.dataLoader(null);
    Map<Integer,String> map=U.newHashMap(KEYS_COUNT);
    for (int i=0; i < KEYS_COUNT; i++)     map.put(i,String.valueOf(i));
    dataLdr.addData(map);
    dataLdr.close();
    Random rnd=new Random();
    GridCache<Integer,String> c=g0.cache(null);
    for (int i=0; i < KEYS_COUNT; i++) {
      Integer k=rnd.nextInt(KEYS_COUNT);
      String v=c.get(k);
      assertEquals(k.toString(),v);
    }
  }
  finally {
    G.stopAll(true);
  }
}
