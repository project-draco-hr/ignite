{
  lock();
  try {
    HashEntry[] tab=tbl;
    int idx=hash & (tab.length - 1);
    HashEntry bin=tab[idx];
    GridCacheMapEntry cur=null;
    GridCacheMapEntry created=null;
    GridCacheMapEntry doomed=null;
    if (bin == null) {
      if (create)       cur=created=put0(key,hash,val,topVer);
      return new GridTriple<>(cur,created,doomed);
    }
    HashEntry e=bin;
    while (e != null && (e.mapEntry.hash() != hash || !key.equals(e.mapEntry.key())))     e=e.next;
    if (e != null) {
      if (e.mapEntry.obsolete()) {
        doomed=remove(key,hash,null);
        if (create)         cur=created=put0(key,hash,val,topVer);
      }
 else       cur=e.mapEntry;
    }
 else     if (create)     cur=created=put0(key,hash,val,topVer);
    return new GridTriple<>(cur,created,doomed);
  }
  finally {
    unlock();
  }
}
