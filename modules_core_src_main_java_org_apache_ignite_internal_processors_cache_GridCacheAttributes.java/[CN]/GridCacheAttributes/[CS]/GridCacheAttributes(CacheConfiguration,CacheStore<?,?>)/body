{
  atomicityMode=cfg.getAtomicityMode();
  cacheMode=cfg.getCacheMode();
  dfltLockTimeout=cfg.getDefaultLockTimeout();
  evictMaxOverflowRatio=cfg.getEvictMaxOverflowRatio();
  evictNearSync=cfg.isEvictNearSynchronized();
  evictSync=cfg.isEvictSynchronized();
  loadPrevVal=cfg.isLoadPreviousValue();
  name=cfg.getName();
  partDistro=GridCacheUtils.distributionMode(cfg);
  preloadBatchSize=cfg.getPreloadBatchSize();
  preloadMode=cfg.getPreloadMode();
  readThrough=cfg.isReadThrough();
  storeValBytes=cfg.isStoreValueBytes();
  swapEnabled=cfg.isSwapEnabled();
  ttl=cfg.getDefaultTimeToLive();
  writeBehindBatchSize=cfg.getWriteBehindBatchSize();
  writeBehindEnabled=cfg.isWriteBehindEnabled();
  writeBehindFlushFreq=cfg.getWriteBehindFlushFrequency();
  writeBehindFlushSize=cfg.getWriteBehindFlushSize();
  writeBehindFlushThreadCnt=cfg.getWriteBehindFlushThreadCount();
  writeSyncMode=cfg.getWriteSynchronizationMode();
  writeThrough=cfg.isWriteThrough();
  affMapperClsName=className(cfg.getAffinityMapper());
  affKeyBackups=cfg.getBackups();
  CacheAffinityFunction aff=cfg.getAffinity();
  if (aff != null) {
    if (aff instanceof CacheRendezvousAffinityFunction) {
      CacheRendezvousAffinityFunction aff0=(CacheRendezvousAffinityFunction)aff;
      affInclNeighbors=aff0.isExcludeNeighbors();
      affHashIdRslvrClsName=className(aff0.getHashIdResolver());
    }
    affPartsCnt=aff.partitions();
    affClsName=className(aff);
  }
  evictFilterClsName=className(cfg.getEvictionFilter());
  evictPlcClsName=className(cfg.getEvictionPolicy());
  nearEvictPlcClsName=className(cfg.getNearEvictionPolicy());
  storeClsName=className(store);
  tmLookupClsName=cfg.getTransactionManagerLookupClassName();
}
