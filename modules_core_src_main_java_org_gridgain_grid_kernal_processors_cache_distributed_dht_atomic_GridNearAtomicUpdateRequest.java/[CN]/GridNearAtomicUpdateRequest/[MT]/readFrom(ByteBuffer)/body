{
  commState.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (commState.idx) {
case 3:
    drExpireTimes=commState.getLongList("drExpireTimes");
  if (!commState.lastRead())   return false;
commState.idx++;
case 4:
drTtls=commState.getLongList("drTtls");
if (!commState.lastRead()) return false;
commState.idx++;
case 5:
if (commState.readSize == -1) {
commState.readSize=commState.getInt(null);
if (!commState.lastRead()) return false;
}
if (commState.readSize >= 0) {
if (drVers == null) drVers=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
GridCacheVersion _val=commState.getCacheVersion(null);
if (!commState.lastRead()) return false;
drVers.add((GridCacheVersion)_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 6:
fastMap=commState.getBoolean("fastMap");
if (!commState.lastRead()) return false;
commState.idx++;
case 7:
if (commState.readSize == -1) {
commState.readSize=commState.getInt(null);
if (!commState.lastRead()) return false;
}
if (commState.readSize >= 0) {
if (filterBytes == null) filterBytes=new byte[commState.readSize][];
for (int i=commState.readItems; i < commState.readSize; i++) {
byte[] _val=commState.getByteArray(null);
if (!commState.lastRead()) return false;
filterBytes[i]=(byte[])_val;
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 8:
futVer=commState.getCacheVersion("futVer");
if (!commState.lastRead()) return false;
commState.idx++;
case 9:
hasPrimary=commState.getBoolean("hasPrimary");
if (!commState.lastRead()) return false;
commState.idx++;
case 10:
if (commState.readSize == -1) {
commState.readSize=commState.getInt(null);
if (!commState.lastRead()) return false;
}
if (commState.readSize >= 0) {
if (keyBytes == null) keyBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
byte[] _val=commState.getByteArray(null);
if (!commState.lastRead()) return false;
keyBytes.add((byte[])_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 11:
byte op0=commState.getByte("op");
if (!commState.lastRead()) return false;
op=GridCacheOperation.fromOrdinal(op0);
commState.idx++;
case 12:
retval=commState.getBoolean("retval");
if (!commState.lastRead()) return false;
commState.idx++;
case 13:
byte syncMode0=commState.getByte("syncMode");
if (!commState.lastRead()) return false;
syncMode=GridCacheWriteSynchronizationMode.fromOrdinal(syncMode0);
commState.idx++;
case 14:
topVer=commState.getLong("topVer");
if (!commState.lastRead()) return false;
commState.idx++;
case 15:
ttl=commState.getLong("ttl");
if (!commState.lastRead()) return false;
commState.idx++;
case 16:
updateVer=commState.getCacheVersion("updateVer");
if (!commState.lastRead()) return false;
commState.idx++;
case 17:
if (commState.readSize == -1) {
commState.readSize=commState.getInt(null);
if (!commState.lastRead()) return false;
}
if (commState.readSize >= 0) {
if (valBytes == null) valBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
GridCacheValueBytes _val=commState.getValueBytes(null);
if (!commState.lastRead()) return false;
valBytes.add((GridCacheValueBytes)_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 18:
forceTransformBackups=commState.getBoolean("forceTransformBackups");
if (!commState.lastRead()) return false;
commState.idx++;
case 19:
subjId=commState.getUuid("subjId");
if (!commState.lastRead()) return false;
commState.idx++;
case 20:
taskNameHash=commState.getInt("taskNameHash");
if (!commState.lastRead()) return false;
commState.idx++;
}
return true;
}
