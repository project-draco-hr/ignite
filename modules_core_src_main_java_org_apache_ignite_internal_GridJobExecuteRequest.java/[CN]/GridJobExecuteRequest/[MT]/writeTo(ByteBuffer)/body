{
  commState.setBuffer(buf);
  if (!commState.typeWritten) {
    if (!commState.putByte(null,directType()))     return false;
    commState.typeWritten=true;
  }
switch (commState.idx) {
case 0:
    if (!commState.putGridUuid("clsLdrId",clsLdrId))     return false;
  commState.idx++;
case 1:
if (!commState.putString("cpSpi",cpSpi)) return false;
commState.idx++;
case 2:
if (!commState.putLong("createTime",createTime)) return false;
commState.idx++;
case 3:
if (!commState.putEnum("depMode",depMode)) return false;
commState.idx++;
case 4:
if (!commState.putBoolean("dynamicSiblings",dynamicSiblings)) return false;
commState.idx++;
case 5:
if (!commState.putBoolean("forceLocDep",forceLocDep)) return false;
commState.idx++;
case 6:
if (!commState.putBoolean("internal",internal)) return false;
commState.idx++;
case 7:
if (!commState.putByteArray("jobAttrsBytes",jobAttrsBytes)) return false;
commState.idx++;
case 8:
if (!commState.putByteArray("jobBytes",jobBytes)) return false;
commState.idx++;
case 9:
if (!commState.putGridUuid("jobId",jobId)) return false;
commState.idx++;
case 9:
if (ldrParticipants != null) {
if (commState.it == null) {
if (!commState.putInt(null,ldrParticipants.size())) return false;
commState.it=ldrParticipants.entrySet().iterator();
}
while (commState.it.hasNext() || commState.cur != NULL) {
if (commState.cur == NULL) commState.cur=commState.it.next();
Map.Entry<UUID,IgniteUuid> e=(Map.Entry<UUID,IgniteUuid>)commState.cur;
if (!commState.keyDone) {
if (!commState.putUuid(null,e.getKey())) return false;
commState.keyDone=true;
}
if (!commState.putGridUuid(null,e.getValue())) return false;
commState.keyDone=false;
commState.cur=NULL;
}
commState.it=null;
}
 else {
if (!commState.putInt(null,-1)) return false;
}
commState.idx++;
case 11:
if (!commState.putByteArray("sesAttrsBytes",sesAttrsBytes)) return false;
commState.idx++;
case 12:
if (!commState.putBoolean(sesFullSup)) return false;
commState.idx++;
case 13:
if (!commState.putGridUuid("sesId",sesId)) return false;
commState.idx++;
case 14:
if (!commState.putByteArray("siblingsBytes",siblingsBytes)) return false;
commState.idx++;
case 15:
if (!commState.putLong("startTaskTime",startTaskTime)) return false;
commState.idx++;
case 16:
if (!commState.putUuid("subjId",subjId)) return false;
commState.idx++;
case 17:
if (!commState.putString("taskClsName",taskClsName)) return false;
commState.idx++;
case 18:
if (!commState.putString("taskName",taskName)) return false;
commState.idx++;
case 19:
if (!commState.putLong("timeout",timeout)) return false;
commState.idx++;
case 19:
if (top != null) {
if (commState.it == null) {
if (!commState.putInt(null,top.size())) return false;
commState.it=top.iterator();
}
while (commState.it.hasNext() || commState.cur != NULL) {
if (commState.cur == NULL) commState.cur=commState.it.next();
if (!commState.putUuid(null,(UUID)commState.cur)) return false;
commState.cur=NULL;
}
commState.it=null;
}
 else {
if (!commState.putInt(null,-1)) return false;
}
commState.idx++;
case 21:
if (!commState.putString("userVer",userVer)) return false;
commState.idx++;
}
return true;
}
