{
  int size;
  if (cacheMode() == PARTITIONED) {
    Collection<Integer> res=compute(cache.gridProjection()).broadcast(new IgniteCallable<Integer>(){
      @GridInstanceResource private Ignite g;
      @Override public Integer call(){
        return cache(g).projection(F.<String,Integer>cachePrimary()).size();
      }
    }
);
    size=0;
    for (    Integer size0 : res)     size+=size0;
  }
 else   size=cache.size();
  assertTrue("Key set size is lesser then the expected size [size=" + size + ", expSize="+ expSize+ ']',size >= expSize);
  for (int i=0; i < expSize; i++)   assertNotNull("Failed to get value for key: 'key" + i + "'",cache.get("key" + i));
}
