{
  int size=cacheMode() == PARTITIONED ? cache.gridProjection().compute().call(F.asSet(new GridCallable<Integer>(){
    @GridInstanceResource private Grid g;
    @Override public Integer call(){
      return cache(g).projection(F.<String,Integer>cachePrimary()).size();
    }
  }
),F.sumIntReducer()).get() : cache.size();
  assertTrue("Key set size is lesser then the expected size [size=" + size + ", expSize="+ expSize+ ']',size >= expSize);
  for (int i=0; i < expSize; i++)   assertNotNull("Failed to get value for key: 'key" + i + "'",cache.get("key" + i));
}
