{
  byte flag=readByte(off++);
switch (flag) {
case NULL:
    return null;
case HANDLE:
  return null;
case OBJ:
boolean userType=readBoolean(off);
int typeId=readInt(off + 1);
int hashCode=readInt(off + 5);
rawOff=readInt(off + 13);
return new GridPortableObjectImpl(this,userType,typeId,hashCode);
case BYTE:
return readByte(off);
case SHORT:
return readShort(off);
case INT:
return readInt(off);
case LONG:
return readLong(off);
case FLOAT:
return readFloat(off);
case DOUBLE:
return readDouble(off);
case CHAR:
return readChar(off);
case BOOLEAN:
return readBoolean(off);
case STRING:
return readString(off);
case UUID:
return readUuid(off);
case BYTE_ARR:
return readByteArray(off);
case SHORT_ARR:
return readShortArray(off);
case INT_ARR:
return readIntArray(off);
case LONG_ARR:
return readLongArray(off);
case FLOAT_ARR:
return readFloatArray(off);
case DOUBLE_ARR:
return readDoubleArray(off);
case CHAR_ARR:
return readCharArray(off);
case BOOLEAN_ARR:
return readBooleanArray(off);
default :
throw new GridPortableException("Invalid flag value: " + flag);
}
}
