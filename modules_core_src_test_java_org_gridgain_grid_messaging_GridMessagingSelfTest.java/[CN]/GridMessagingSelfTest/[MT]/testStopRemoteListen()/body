{
  final AtomicInteger msgCnt1=new AtomicInteger();
  final AtomicInteger msgCnt2=new AtomicInteger();
  final AtomicInteger msgCnt3=new AtomicInteger();
  final String topic1=null;
  final String topic2="top2";
  final String topic3="top3";
  UUID id1=grid2.message().remoteListen(topic1,new P2<UUID,Object>(){
    @Override public boolean apply(    UUID nodeId,    Object msg){
      System.out.println(Thread.currentThread().getName() + " Listener1 received new message [msg=" + msg+ ", senderNodeId="+ nodeId+ ']');
      msgCnt1.incrementAndGet();
      return true;
    }
  }
);
  UUID id2=grid2.message().remoteListen(topic2,new P2<UUID,Object>(){
    @Override public boolean apply(    UUID nodeId,    Object msg){
      System.out.println(Thread.currentThread().getName() + " Listener2 received new message [msg=" + msg+ ", senderNodeId="+ nodeId+ ']');
      msgCnt2.incrementAndGet();
      return true;
    }
  }
);
  UUID id3=grid2.message().remoteListen(topic3,new P2<UUID,Object>(){
    @Override public boolean apply(    UUID nodeId,    Object msg){
      System.out.println(Thread.currentThread().getName() + " Listener3 received new message [msg=" + msg+ ", senderNodeId="+ nodeId+ ']');
      msgCnt3.incrementAndGet();
      return true;
    }
  }
);
  grid1.forRemotes().message().send(topic1,"msg1-1");
  grid1.forRemotes().message().send(topic2,"msg1-2");
  grid1.forRemotes().message().send(topic3,"msg1-3");
  GridTestUtils.waitForCondition(new PA(){
    @Override public boolean apply(){
      return msgCnt1.get() > 0 && msgCnt2.get() > 0 && msgCnt3.get() > 0;
    }
  }
,5000);
  assertEquals(1,msgCnt1.get());
  assertEquals(1,msgCnt2.get());
  assertEquals(1,msgCnt3.get());
  grid2.message().stopRemoteListen(id2);
  grid1.forRemotes().message().send(topic1,"msg2-1");
  grid1.forRemotes().message().send(topic2,"msg2-2");
  grid1.forRemotes().message().send(topic3,"msg2-3");
  GridTestUtils.waitForCondition(new PA(){
    @Override public boolean apply(){
      return msgCnt1.get() > 1 && msgCnt3.get() > 1;
    }
  }
,5000);
  assertEquals(2,msgCnt1.get());
  assertEquals(1,msgCnt2.get());
  assertEquals(2,msgCnt3.get());
  grid2.message().stopRemoteListen(id2);
  grid2.message().stopRemoteListen(id1);
  grid2.message().stopRemoteListen(id3);
  grid1.forRemotes().message().send(topic1,"msg3-1");
  grid1.forRemotes().message().send(topic2,"msg3-2");
  grid1.forRemotes().message().send(topic3,"msg3-3");
  U.sleep(1000);
  assertEquals(2,msgCnt1.get());
  assertEquals(1,msgCnt2.get());
  assertEquals(2,msgCnt3.get());
}
