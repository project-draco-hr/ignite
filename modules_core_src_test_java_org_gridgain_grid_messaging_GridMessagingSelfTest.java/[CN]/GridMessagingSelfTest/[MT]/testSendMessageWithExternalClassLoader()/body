{
  URL[] urls=new URL[]{new URL(GridTestProperties.getProperty("p2p.uri.cls"))};
  ClassLoader extLdr=new URLClassLoader(urls);
  Class rcCls=extLdr.loadClass(EXT_RESOURCE_CLS_NAME);
  final AtomicBoolean error=new AtomicBoolean(false);
  final CountDownLatch rcvLatch=new CountDownLatch(1);
  grid2.message().remoteListen(S_TOPIC_1,new P2<UUID,Object>(){
    @Override public boolean apply(    UUID nodeId,    Object msg){
      try {
        log.info("Received new message [msg=" + msg + ", senderNodeId="+ nodeId+ ']');
        if (!nodeId.equals(grid1.localNode().id())) {
          log.error("Unexpected sender node: " + nodeId);
          error.set(true);
          return false;
        }
        return true;
      }
  finally {
        rcvLatch.countDown();
      }
    }
  }
);
  grid1.forRemotes().message().send(S_TOPIC_1,Collections.singleton(rcCls.newInstance()));
  assertTrue(rcvLatch.await(3,TimeUnit.SECONDS));
  assertFalse(error.get());
}
