{
  checkInternal(key);
  GridNearCacheEntry<K,V> cached=cctx.near().peekExx(key);
  try {
    if (cached == null) {
      evicted.add(key);
      if (keyBytes != null)       evictedBytes.add(keyBytes);
      return false;
    }
 else {
      cached.unswap();
      if (cached.peek(GLOBAL,CU.<K,V>empty()) == null && cached.evictInternal(false,xidVer,null)) {
        cached.context().cache().removeIfObsolete(key);
        evicted.add(key);
        if (keyBytes != null)         evictedBytes.add(keyBytes);
        return false;
      }
 else {
        GridCacheTxEntry<K,V> txEntry=new GridCacheTxEntry<>(cctx,this,NOOP,val,0L,-1L,cached,drVer);
        txEntry.keyBytes(keyBytes);
        if (cctx.sendValueBytes())         txEntry.valueBytes(valBytes);
        writeMap.put(key,txEntry);
        return true;
      }
    }
  }
 catch (  GridCacheEntryRemovedException ignore) {
    evicted.add(key);
    if (keyBytes != null)     evictedBytes.add(keyBytes);
    if (log.isDebugEnabled())     log.debug("Got removed entry when adding reads to remote transaction (will ignore): " + cached);
    return false;
  }
}
