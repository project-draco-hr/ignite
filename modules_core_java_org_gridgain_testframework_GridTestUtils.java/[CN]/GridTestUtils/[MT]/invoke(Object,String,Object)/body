{
  for (  Method m : obj.getClass().getMethods()) {
    if (!m.getName().equals(mtd))     continue;
    if (!areCompatible(params,m.getParameterTypes()))     continue;
    try {
synchronized (m) {
        boolean accessible=m.isAccessible();
        try {
          if (!accessible)           m.setAccessible(true);
          return (T)m.invoke(obj,params);
        }
  finally {
          if (!accessible)           m.setAccessible(false);
        }
      }
    }
 catch (    IllegalAccessException e) {
      throw new RuntimeException("Failed to access method" + " [obj=" + obj + ", mtd="+ mtd+ ", params="+ Arrays.toString(params)+ ']',e);
    }
catch (    InvocationTargetException e) {
      Throwable cause=e.getCause();
      if (cause instanceof Error)       throw (Error)cause;
      if (cause instanceof Exception)       throw (Exception)cause;
      throw new RuntimeException("Failed to invoke method)" + " [obj=" + obj + ", mtd="+ mtd+ ", params="+ Arrays.toString(params)+ ']',e);
    }
  }
  throw new RuntimeException("Failed to find method" + " [obj=" + obj + ", mtd="+ mtd+ ", params="+ Arrays.toString(params)+ ']');
}
