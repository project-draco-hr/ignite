{
  IgfsPath inDir=new IgfsPath(PATH_INPUT);
  igfs.mkdirs(inDir);
  IgfsPath inFile=new IgfsPath(inDir,HadoopWordCount2.class.getSimpleName() + "-input");
  URI inFileUri=URI.create(igfsScheme() + inFile.toString());
  try (PrintWriter pw=new PrintWriter(igfs.create(inFile,true))){
    pw.println("hello0 world0");
    pw.println("world1 hello1");
  }
   HadoopFileBlock fileBlock1=new HadoopFileBlock(HOSTS,inFileUri,0,igfs.info(inFile).length() - 1);
  try (PrintWriter pw=new PrintWriter(igfs.append(inFile,false))){
    pw.println("hello2 world2");
    pw.println("world3 hello3");
  }
   HadoopFileBlock fileBlock2=new HadoopFileBlock(HOSTS,inFileUri,fileBlock1.length(),igfs.info(inFile).length() - fileBlock1.length());
  HadoopV2Job gridJob=getHadoopJob(igfsScheme() + inFile.toString(),igfsScheme() + PATH_OUTPUT);
  HadoopTaskInfo taskInfo=new HadoopTaskInfo(HadoopTaskType.MAP,gridJob.id(),0,0,fileBlock1);
  HadoopTestTaskContext ctx=new HadoopTestTaskContext(taskInfo,gridJob);
  ctx.mockOutput().clear();
  ctx.run();
  assertEquals("hello0,1; world0,1; world1,1; hello1,1",Joiner.on("; ").join(ctx.mockOutput()));
  ctx.mockOutput().clear();
  ctx.taskInfo(new HadoopTaskInfo(HadoopTaskType.MAP,gridJob.id(),0,0,fileBlock2));
  ctx.run();
  assertEquals("hello2,1; world2,1; world3,1; hello3,1",Joiner.on("; ").join(ctx.mockOutput()));
}
