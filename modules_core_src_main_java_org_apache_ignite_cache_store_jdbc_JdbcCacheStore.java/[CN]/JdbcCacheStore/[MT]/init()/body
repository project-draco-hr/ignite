{
  if (initLatch.getCount() > 0) {
    if (initGuard.compareAndSet(false,true)) {
      if (log.isDebugEnabled())       log.debug("Initializing cache store.");
      if (dataSrc == null && F.isEmpty(connUrl))       throw new CacheException("Failed to initialize cache store (connection is not provided).");
      try {
        if (dialect == null)         dialect=resolveDialect();
        initOk=true;
      }
  finally {
        initLatch.countDown();
      }
    }
 else     try {
      if (initLatch.getCount() > 0)       initLatch.await();
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
      throw new CacheException(e);
    }
  }
  if (!initOk)   throw new CacheException("Cache store was not properly initialized.");
  Integer cacheKey=cacheKeyId();
  if (!cacheMappings.containsKey(cacheKey)) {
    buildMetaCacheLock.lock();
    try {
      if (!cacheMappings.containsKey(cacheKey)) {
        Collection<CacheQueryTypeMetadata> typeMetadata=ignite().cache(session().cacheName()).configuration().getQueryConfiguration().getTypeMetadata();
        Map<Object,EntryMapping> entryMappings=U.newHashMap(typeMetadata.size());
        for (        CacheQueryTypeMetadata type : typeMetadata)         entryMappings.put(keyId(type.getKeyType()),new EntryMapping(dialect,type));
        cacheMappings.put(cacheKey,Collections.unmodifiableMap(entryMappings));
        prepareBuilders(typeMetadata);
      }
    }
  finally {
      buildMetaCacheLock.unlock();
    }
  }
}
