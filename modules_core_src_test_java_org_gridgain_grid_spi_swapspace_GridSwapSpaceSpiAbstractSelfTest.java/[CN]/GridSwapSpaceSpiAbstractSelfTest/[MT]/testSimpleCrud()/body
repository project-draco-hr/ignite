{
  assertEquals(0,spi.count(DFLT_SPACE_NAME));
  long key1=1;
  byte[] val1=Long.toString(key1).getBytes();
  spi.store(DFLT_SPACE_NAME,new GridSwapKey(key1),val1,context());
  assertEquals(1,spi.count(DFLT_SPACE_NAME));
  assertArrayEquals(spi.read(DFLT_SPACE_NAME,new GridSwapKey(key1),context()),val1);
  final byte[] val2="newValue".getBytes();
  spi.store(DFLT_SPACE_NAME,new GridSwapKey(key1),val2,context());
  assertEquals(1,spi.count(DFLT_SPACE_NAME));
  assertArrayEquals(spi.read(DFLT_SPACE_NAME,new GridSwapKey(key1),context()),val2);
  spi.remove(DFLT_SPACE_NAME,new GridSwapKey(key1),new GridInClosure<byte[]>(){
    @Override public void apply(    byte[] old){
      assertArrayEquals(val2,old);
    }
  }
,context());
  assertEquals(0,spi.count(DFLT_SPACE_NAME));
}
