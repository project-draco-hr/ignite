{
  File path=GridTestUtils.resolveGridGainPath(springCfgPath);
  if (path == null) {
    throw new GridException("Spring XML configuration file path is invalid: " + new File(springCfgPath) + ". Note that this path should be either absolute path or a relative path to GRIDGAIN_HOME.");
  }
  if (!path.isFile()) {
    throw new GridException("Provided file path is not a file: " + path);
  }
  Appender app=new NullAppender();
  Logger.getRootLogger().addAppender(app);
  ApplicationContext springCtx;
  try {
    springCtx=new FileSystemXmlApplicationContext(path.toURI().toURL().toString());
  }
 catch (  BeansException|MalformedURLException e) {
    throw new GridException("Failed to instantiate Spring XML application context: " + e.getMessage(),e);
  }
  Map cfgMap;
  try {
    cfgMap=springCtx.getBeansOfType(GridConfiguration.class);
  }
 catch (  BeansException e) {
    throw new GridException("Failed to instantiate bean [type=" + GridConfiguration.class + ", err="+ e.getMessage()+ ']',e);
  }
  if (cfgMap == null) {
    throw new GridException("Failed to find a single grid factory configuration in: " + path);
  }
  Logger.getRootLogger().removeAppender(app);
  if (cfgMap.isEmpty()) {
    throw new GridException("Can't find grid factory configuration in: " + path);
  }
  Collection<GridConfiguration> res=new ArrayList<>();
  for (  GridConfiguration cfg : (Collection<GridConfiguration>)cfgMap.values()) {
    UUID nodeId=UUID.randomUUID();
    cfg.setNodeId(nodeId);
    cfg.setGridLogger(initLogger(log));
    res.add(cfg);
  }
  return res;
}
