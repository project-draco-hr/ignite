{
  assertNull(creator.semaphore("semaphore1",1,true,false));
  assertNull(other.semaphore("semaphore1",1,true,false));
  try (IgniteSemaphore semaphore=creator.semaphore("semaphore1",-1,true,true)){
    assertNotNull(semaphore);
    assertEquals(-1,semaphore.availablePermits());
    IgniteInternalFuture<?> fut=GridTestUtils.runAsync(new Callable<Object>(){
      @Override public Object call() throws Exception {
        U.sleep(1000);
        IgniteSemaphore semaphore0=other.semaphore("semaphore1",-1,true,false);
        assertEquals(-1,semaphore0.availablePermits());
        log.info("Release semaphore.");
        semaphore0.release(2);
        return null;
      }
    }
);
    log.info("Acquire semaphore.");
    assertTrue(semaphore.tryAcquire(1,5000,TimeUnit.MILLISECONDS));
    log.info("Finished wait.");
    fut.get();
    assertEquals(0,semaphore.availablePermits());
  }
   assertNull(creator.semaphore("semaphore1",1,true,false));
  assertNull(other.semaphore("semaphore1",1,true,false));
}
