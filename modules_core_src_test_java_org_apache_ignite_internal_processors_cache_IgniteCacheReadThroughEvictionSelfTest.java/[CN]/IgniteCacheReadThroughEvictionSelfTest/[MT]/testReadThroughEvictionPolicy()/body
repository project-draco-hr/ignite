{
  Ignite ig=testedGrid();
  CacheConfiguration<Object,Object> cc=variationConfig("eviction");
  cc.setEvictionPolicy(new FifoEvictionPolicy(1));
  if (cc.getMemoryMode() == CacheMemoryMode.OFFHEAP_TIERED)   cc.setOffHeapMaxMemory(2 * 1024);
  final IgniteCache<Object,Object> cache=ig.createCache(cc);
  try {
    for (int i=0; i < KEYS; i++)     cache.put(key(i),value(i));
    assertTrue(GridTestUtils.waitForCondition(new PA(){
      @Override public boolean apply(){
        int size=cache.size(CachePeekMode.ONHEAP);
        int offheapSize=cache.size(CachePeekMode.OFFHEAP);
        System.out.println("Cache [onHeap=" + size + ", offHeap="+ offheapSize+ ']');
        return size <= testsCfg.gridCount() && offheapSize < KEYS;
      }
    }
,getTestTimeout()));
    for (int i=0; i < KEYS; i++)     assertEquals(value(i),cache.get(key(i)));
  }
  finally {
    destroyCacheSafe(ig,cc.getName());
  }
}
