{
  try {
    System.out.println("[INFO] Recreating Cassandra artifacts (keyspace, table, indexes) for load tests");
    KeyValuePersistenceSettings perSettings=new KeyValuePersistenceSettings(TestsHelper.getLoadTestsPersistenceSettings());
    System.out.println("[INFO] Dropping test keyspace: " + perSettings.getKeyspace());
    try {
      CassandraHelper.dropTestKeyspaces();
    }
 catch (    Throwable e) {
      throw new RuntimeException("Failed to drop test keyspace: " + perSettings.getKeyspace(),e);
    }
    System.out.println("[INFO] Test keyspace '" + perSettings.getKeyspace() + "' was successfully dropped");
    System.out.println("[INFO] Creating test keyspace: " + perSettings.getKeyspace());
    try {
      CassandraHelper.executeWithAdminCredentials(perSettings.getKeyspaceDDLStatement());
    }
 catch (    Throwable e) {
      throw new RuntimeException("Failed to create test keyspace: " + perSettings.getKeyspace(),e);
    }
    System.out.println("[INFO] Test keyspace '" + perSettings.getKeyspace() + "' was successfully created");
    System.out.println("[INFO] Creating test table: " + perSettings.getTable());
    try {
      CassandraHelper.executeWithAdminCredentials(perSettings.getTableDDLStatement(perSettings.getTable()));
    }
 catch (    Throwable e) {
      throw new RuntimeException("Failed to create test table: " + perSettings.getTable(),e);
    }
    System.out.println("[INFO] Test table '" + perSettings.getTable() + "' was successfully created");
    List<String> statements=perSettings.getIndexDDLStatements(perSettings.getTable());
    if (statements == null)     statements=new LinkedList<>();
    for (    String statement : statements) {
      System.out.println("[INFO] Creating test table index:");
      System.out.println(statement);
      try {
        CassandraHelper.executeWithAdminCredentials(statement);
      }
 catch (      Throwable e) {
        throw new RuntimeException("Failed to create test table index",e);
      }
      System.out.println("[INFO] Test table index was successfully created");
    }
    System.out.println("[INFO] All required Cassandra artifacts were successfully recreated");
  }
 catch (  Throwable e) {
    System.out.println("[ERROR] Failed to recreate Cassandra artifacts");
    e.printStackTrace(System.out);
    if (e instanceof RuntimeException)     throw (RuntimeException)e;
 else     throw new RuntimeException(e);
  }
 finally {
    CassandraHelper.releaseCassandraResources();
  }
}
