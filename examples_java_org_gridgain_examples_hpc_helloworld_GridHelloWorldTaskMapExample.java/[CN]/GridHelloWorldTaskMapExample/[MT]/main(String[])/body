{
  GridComputeTask<String,Integer> task=new GridComputeTaskAdapter<String,Integer>(){
    /** 
 * Splits the received string to words, creates a child job for each word, and sends
 * these jobs to other nodes for processing. Each such job simply prints out the received word.
 * @param subgrid Nodes available for this task execution.
 * @param arg String to split into words for processing.
 * @return Map of jobs to nodes.
 */
    @Override public Map<? extends GridComputeJob,GridNode> map(    List<GridNode> subgrid,    String arg){
      String[] words=arg.split(" ");
      Map<GridComputeJob,GridNode> map=new HashMap<>(words.length);
      Iterator<GridNode> it=subgrid.iterator();
      for (      final String word : arg.split(" ")) {
        if (!it.hasNext())         it=subgrid.iterator();
        GridNode node=it.next();
        map.put(new GridComputeJobAdapter(){
          @Nullable @Override public Object execute(){
            System.out.println(">>>");
            System.out.println(">>> Printing '" + word + "' on this node from grid job.");
            System.out.println(">>>");
            return word.length();
          }
        }
,node);
      }
      return map;
    }
    /** 
 * {@inheritDoc} 
 */
    @Nullable @Override public Integer reduce(    List<GridComputeJobResult> results){
      int sum=0;
      for (      GridComputeJobResult res : results)       sum+=res.<Integer>getData();
      return results.size() - 1 + sum;
    }
  }
;
  try (Grid g=GridGain.start("examples/config/example-default.xml")){
    GridComputeTaskFuture<Integer> fut=g.compute().execute(task,"Hello Grid Enabled World!");
    int phraseLen=fut.get();
    System.out.println(">>>");
    System.out.println(">>> Finished executing Grid \"Hello World\" example with custom task.");
    System.out.println(">>> Total number of characters in the phrase is '" + phraseLen + "'.");
    System.out.println(">>> You should see print out of 'Hello' on one node and 'World' on another node.");
    System.out.println(">>> Check all nodes for output (this node is also part of the grid).");
    System.out.println(">>>");
  }
 }
