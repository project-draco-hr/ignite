{
  final GridHadoopTaskState state=status.state();
  final Throwable err=status.failCause();
  if (!flush) {
    try {
      if (log.isDebugEnabled())       log.debug("Sending notification to parent node [taskInfo=" + taskInfo + ", state="+ state+ ", err="+ err+ ']');
      comm.sendMessage(nodeDesc,new GridHadoopTaskFinishedMessage(taskInfo,status));
    }
 catch (    IgniteCheckedException e) {
      log.error("Failed to send message to parent node (will terminate child process).",e);
      shutdown();
      terminate();
    }
  }
 else {
    if (log.isDebugEnabled())     log.debug("Flushing shuffle messages before sending last task completion notification [taskInfo=" + taskInfo + ", state="+ state+ ", err="+ err+ ']');
    final long start=U.currentTimeMillis();
    try {
      shuffleJob.flush().listenAsync(new CI1<IgniteInternalFuture<?>>(){
        @Override public void apply(        IgniteInternalFuture<?> f){
          long end=U.currentTimeMillis();
          if (log.isDebugEnabled())           log.debug("Finished flushing shuffle messages [taskInfo=" + taskInfo + ", flushTime="+ (end - start)+ ']');
          try {
            f.get();
            notifyTaskFinished(taskInfo,status,false);
          }
 catch (          IgniteCheckedException e) {
            log.error("Failed to flush shuffle messages (will fail the task) [taskInfo=" + taskInfo + ", state="+ state+ ", err="+ err+ ']',e);
            notifyTaskFinished(taskInfo,new GridHadoopTaskStatus(GridHadoopTaskState.FAILED,e),false);
          }
        }
      }
);
    }
 catch (    IgniteCheckedException e) {
      log.error("Failed to flush shuffle messages (will fail the task) [taskInfo=" + taskInfo + ", state="+ state+ ", err="+ err+ ']',e);
      notifyTaskFinished(taskInfo,new GridHadoopTaskStatus(GridHadoopTaskState.FAILED,e),false);
    }
  }
}
