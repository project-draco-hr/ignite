{
  Object val=entity.value();
  ClassLoader ldr=val.getClass().getClassLoader();
  byte[] bytes=entity.bytes();
  ByteArrayOutputStream out=new ByteArrayOutputStream(bytes == null ? 128 : bytes.length + 8);
  if (ldr == null)   out.write(-1);
 else {
    Long ldrId;
    while ((ldrId=idByLdr.get(ldr)) == null) {
      ldrId=ldrIdGen.incrementAndGet();
      if (idByLdr.putIfAbsent(ldr,ldrId) == null) {
        ldrById.put(ldrId,ldr);
        break;
      }
    }
    try {
      out.write(U.longToBytes(ldrId));
    }
 catch (    IOException e) {
      throw new IgniteSpiException(e);
    }
  }
  try {
    if (bytes == null)     marsh.marshal(val,out);
 else     out.write(bytes);
  }
 catch (  Exception e) {
    throw new IgniteSpiException(e);
  }
  return out.toByteArray();
}
