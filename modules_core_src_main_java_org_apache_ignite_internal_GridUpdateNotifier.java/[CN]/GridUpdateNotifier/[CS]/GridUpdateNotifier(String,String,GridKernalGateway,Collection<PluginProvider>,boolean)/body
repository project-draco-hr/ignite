{
  try {
    DocumentBuilderFactory factory=DocumentBuilderFactory.newInstance();
    documentBuilder=factory.newDocumentBuilder();
    documentBuilder.setEntityResolver(new EntityResolver(){
      @Override public InputSource resolveEntity(      String publicId,      String sysId){
        if (sysId.endsWith(".dtd"))         return new InputSource(new StringReader(""));
        return null;
      }
    }
);
    this.ver=ver;
    url="http://tiny.cc/updater/update_status_ignite.php";
    this.gridName=gridName == null ? "null" : gridName;
    this.gw=gw;
    SB pluginsBuilder=new SB();
    for (    PluginProvider provider : pluginProviders)     pluginsBuilder.a("&").a(provider.name() + "-plugin-version").a("=").a(encode(provider.version(),CHARSET));
    pluginsVers=pluginsBuilder.toString();
    this.reportOnlyNew=reportOnlyNew;
    vmProps=getSystemProperties();
    workerThread=new Thread(new Runnable(){
      @Override public void run(){
        try {
          while (!Thread.currentThread().isInterrupted()) {
            Runnable cmd0=cmd.getAndSet(null);
            if (cmd0 != null)             cmd0.run();
 else             Thread.sleep(WORKER_THREAD_SLEEP_TIME);
          }
        }
 catch (        InterruptedException ignore) {
        }
      }
    }
,"upd-ver-checker");
    workerThread.setDaemon(true);
    workerThread.start();
  }
 catch (  ParserConfigurationException e) {
    throw new IgniteCheckedException("Failed to create xml parser.",e);
  }
catch (  UnsupportedEncodingException e) {
    throw new IgniteCheckedException("Failed to encode.",e);
  }
}
