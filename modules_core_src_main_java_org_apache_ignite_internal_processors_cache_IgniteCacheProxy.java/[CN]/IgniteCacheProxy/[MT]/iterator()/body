{
  GridCacheProjectionImpl<K,V> prev=gate.enter(prj);
  try {
    final Iterator<GridCacheEntry<K,V>> it=delegate.iterator();
    return new Iterator<Entry<K,V>>(){
      private CacheEntryImpl e;
      @Override public boolean hasNext(){
        return it.hasNext();
      }
      @Override public Entry<K,V> next(){
        if (!hasNext())         throw new NoSuchElementException();
        GridCacheEntry<K,V> e0=it.next();
        e=new CacheEntryImpl(e0.getKey(),e0.getValue());
        return e;
      }
      @Override public void remove(){
        if (e == null)         throw new IllegalStateException();
        IgniteCacheProxy.this.remove((K)e.getKey());
        e=null;
      }
    }
;
  }
  finally {
    gate.leave(prev);
  }
}
