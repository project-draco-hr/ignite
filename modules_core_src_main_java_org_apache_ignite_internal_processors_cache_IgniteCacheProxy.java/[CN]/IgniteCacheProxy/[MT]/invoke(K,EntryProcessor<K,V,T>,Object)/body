{
  try {
    GridCacheGateway<K,V> gate=this.gate;
    CacheOperationContext prev=onEnter(gate,opCtx);
    try {
      if (isAsync()) {
        IgniteInternalFuture<EntryProcessorResult<T>> fut=delegate.invokeAsync(key,entryProcessor,args);
        IgniteInternalFuture<T> fut0=fut.chain(new CX1<IgniteInternalFuture<EntryProcessorResult<T>>,T>(){
          @Override public T applyx(          IgniteInternalFuture<EntryProcessorResult<T>> fut) throws IgniteCheckedException {
            try {
              EntryProcessorResult<T> res=fut.get();
              return res != null ? res.get() : null;
            }
 catch (            RuntimeException e) {
              throw new GridClosureException(e);
            }
          }
        }
);
        setFuture(fut0);
        return null;
      }
 else {
        EntryProcessorResult<T> res=delegate.invoke(key,entryProcessor,args);
        return res != null ? res.get() : null;
      }
    }
  finally {
      onLeave(gate,prev);
    }
  }
 catch (  IgniteCheckedException e) {
    throw cacheException(e);
  }
}
