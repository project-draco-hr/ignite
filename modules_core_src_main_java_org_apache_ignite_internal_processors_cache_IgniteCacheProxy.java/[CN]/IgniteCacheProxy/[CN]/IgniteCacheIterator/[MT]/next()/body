{
  initFirstTime();
  curEntry=nextEntry;
  if (curEntry == null)   throw new NoSuchElementException();
  try {
    nextEntry=fut.next();
  }
 catch (  IgniteCheckedException e) {
    curEntry=null;
    throw cacheException(e);
  }
  return new Cache.Entry<K,V>(){
    @Override public K getKey(){
      return curEntry.getKey();
    }
    @Override public V getValue(){
      return curEntry.getValue();
    }
    @Override public <T>T unwrap(    Class<T> clazz){
      throw new IllegalArgumentException();
    }
  }
;
}
