{
  return new TrustManager[]{new X509TrustManager(){
    /** 
 * {@inheritDoc} 
 */
    @Nullable @Override public X509Certificate[] getAcceptedIssuers(){
      return null;
    }
    /** 
 * {@inheritDoc} 
 */
    @Override public void checkClientTrusted(    X509Certificate[] certs,    String authType){
      StringBuilder buf=new StringBuilder();
      buf.append("Trust manager handle client certificates [authType=");
      buf.append(authType);
      buf.append(", certificates=");
      for (      X509Certificate cert : certs) {
        buf.append("{type=");
        buf.append(cert.getType());
        buf.append(", principalName=");
        buf.append(cert.getSubjectX500Principal().getName());
        buf.append('}');
      }
      buf.append(']');
      if (scanCtx.getLogger().isDebugEnabled())       scanCtx.getLogger().debug(buf.toString());
    }
    /** 
 * {@inheritDoc} 
 */
    @Override public void checkServerTrusted(    X509Certificate[] certs,    String authType){
      StringBuilder buf=new StringBuilder();
      buf.append("Trust manager handle server certificates [authType=");
      buf.append(authType);
      buf.append(", certificates=");
      for (      X509Certificate cert : certs) {
        buf.append("{type=");
        buf.append(cert.getType());
        buf.append(", principalName=");
        buf.append(cert.getSubjectX500Principal().getName());
        buf.append('}');
      }
      buf.append(']');
      if (scanCtx.getLogger().isDebugEnabled())       scanCtx.getLogger().debug(buf.toString());
    }
  }
};
}
