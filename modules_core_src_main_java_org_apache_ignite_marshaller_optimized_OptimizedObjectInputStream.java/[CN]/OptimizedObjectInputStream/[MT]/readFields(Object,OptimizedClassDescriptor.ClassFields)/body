{
  for (int i=0; i < fieldOffs.size(); i++) {
    OptimizedClassDescriptor.FieldInfo t=fieldOffs.get(i);
switch ((t.type())) {
case BYTE:
      byte resByte=readByte();
    if (t.field() != null)     setByte(obj,t.offset(),resByte);
  break;
case SHORT:
short resShort=readShort();
if (t.field() != null) setShort(obj,t.offset(),resShort);
break;
case INT:
int resInt=readInt();
if (t.field() != null) setInt(obj,t.offset(),resInt);
break;
case LONG:
long resLong=readLong();
if (t.field() != null) setLong(obj,t.offset(),resLong);
break;
case FLOAT:
float resFloat=readFloat();
if (t.field() != null) setFloat(obj,t.offset(),resFloat);
break;
case DOUBLE:
double resDouble=readDouble();
if (t.field() != null) setDouble(obj,t.offset(),resDouble);
break;
case CHAR:
char resChar=readChar();
if (t.field() != null) setChar(obj,t.offset(),resChar);
break;
case BOOLEAN:
boolean resBoolean=readBoolean();
if (t.field() != null) setBoolean(obj,t.offset(),resBoolean);
break;
case OTHER:
Object resObject=readObject();
if (t.field() != null) setObject(obj,t.offset(),resObject);
}
}
}
