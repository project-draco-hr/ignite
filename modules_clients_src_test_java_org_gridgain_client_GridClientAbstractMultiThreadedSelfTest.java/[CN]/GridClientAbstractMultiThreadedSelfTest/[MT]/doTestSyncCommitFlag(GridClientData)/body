{
  Collection<? extends GridClientNode> nodes=client.compute().nodes();
  Iterator<? extends GridClientNode> it=nodes.iterator();
  final GridClientData dataFirst=data.pinNodes(it.next());
  final GridClientData dataOthers=data.pinNodes(it.next(),toArray(it));
  for (int i=0; i < syncCommitIterCount(); i++) {
    final CountDownLatch l=new CountDownLatch(1);
    final String key="k" + i;
    final String val="v" + i;
    GridFuture<?> f=multithreadedAsync(new Callable<Object>(){
      @Override public Object call() throws Exception {
        l.await();
        assertEquals(val,dataOthers.get(key));
        return null;
      }
    }
,THREAD_CNT);
    dataFirst.flagsOn(GridClientCacheFlag.SYNC_COMMIT).put(key,val);
    l.countDown();
    f.get();
  }
}
