{
  final AtomicInteger cnt=new AtomicInteger();
  final GridAtomicInteger max=new GridAtomicInteger();
  for (int i=0; i < 5000; i++) {
    final int i0=i;
    cnt.incrementAndGet();
    IgniteCache<String,Integer> cacheAsync=jcache().withAsync();
    cacheAsync.put("key" + i,i);
    IgniteInternalFuture<Boolean> fut=cacheAsync.future();
    fut.listenAsync(new CI1<IgniteInternalFuture<Boolean>>(){
      @Override public void apply(      IgniteInternalFuture<Boolean> t){
        cnt.decrementAndGet();
        max.setIfGreater(cnt.get());
        if (i0 > 0 && i0 % 100 == 0)         info("cnt: " + cnt.get());
      }
    }
);
    assertTrue("Maximum number of permits exceeded: " + max.get(),max.get() <= 51);
  }
}
