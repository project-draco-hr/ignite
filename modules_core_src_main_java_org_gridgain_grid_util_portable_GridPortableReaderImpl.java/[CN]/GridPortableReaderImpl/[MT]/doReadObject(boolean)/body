{
  int start=raw ? rawOff : off;
  byte flag=doReadByte(raw);
switch (flag) {
case NULL:
    return null;
case HANDLE:
  int handle=doReadInt(raw);
if (oHandles.containsKey(handle)) return oHandles.get(handle);
off=handle;
return doReadObject(false);
case OBJ:
boolean userType=doReadBoolean(raw);
int typeId=doReadInt(raw);
GridPortableClassDescriptor desc=ctx.descriptorForTypeId(userType,typeId);
if (desc == null) throw new GridPortableInvalidClassException("Unknown type ID: " + typeId);
if (raw) rawOff+=4;
 else off+=4;
int len=doReadInt(raw);
int rawOff0=start + doReadInt(raw);
Object obj=desc.read(new GridPortableReaderImpl(ctx,poHandles,oHandles,arr,start,rawOff0,typeId));
if (obj instanceof GridPortableObjectImpl) ((GridPortableObjectImpl)obj).context(ctx);
int dataLen=len - HDR_LEN;
if (raw) rawOff+=dataLen;
 else off+=dataLen;
return obj;
default :
throw new GridPortableException("Invalid flag value: " + flag);
}
}
