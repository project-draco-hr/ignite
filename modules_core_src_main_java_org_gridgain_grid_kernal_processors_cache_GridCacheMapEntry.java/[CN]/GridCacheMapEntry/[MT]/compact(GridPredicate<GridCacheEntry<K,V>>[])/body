{
  GridCacheVersion startVer;
synchronized (this) {
    checkObsolete();
    startVer=ver;
  }
  if (!cctx.isAll(this,filter))   return false;
synchronized (this) {
    checkObsolete();
    if (deletedUnlocked())     return false;
    if (startVer.equals(ver)) {
      if (hasValueUnlocked() && !checkExpired()) {
        if (!isOffHeapValuesOnly()) {
          if (val != null)           valBytes=null;
        }
        return false;
      }
 else       return clear(nextVersion(),cctx.isSwapOrOffheapEnabled(),false,filter);
    }
  }
  return compact(filter);
}
