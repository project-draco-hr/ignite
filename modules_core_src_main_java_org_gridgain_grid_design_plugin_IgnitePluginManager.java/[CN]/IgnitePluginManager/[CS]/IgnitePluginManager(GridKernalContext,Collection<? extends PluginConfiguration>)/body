{
  this.ctx=ctx;
  if (cfgs == null)   return;
  for (  PluginConfiguration pluginCfg : cfgs) {
    try {
      if (pluginCfg.providerClass() == null)       throw new IgniteException("Provider class is null.");
      GridPluginContext pluginCtx=new GridPluginContext(ctx,pluginCfg);
      PluginProvider provider;
      try {
        Constructor<? extends PluginProvider> ctr=pluginCfg.providerClass().getConstructor(pluginCfg.getClass());
        provider=ctr.newInstance(pluginCfg);
      }
 catch (      NoSuchMethodException ignore) {
        provider=pluginCfg.providerClass().newInstance();
      }
      if (F.isEmpty(provider.name()))       throw new IgniteException("Plugin name can not be empty.");
      if (provider.plugin() == null)       throw new IgniteException("Plugin is null.");
      if (plugins.containsKey(provider.name()))       throw new IgniteException("Duplicated plugin name: " + provider.name());
      plugins.put(provider.name(),provider);
      pluginCtxMap.put(provider,pluginCtx);
    }
 catch (    InstantiationException|IllegalAccessException|InvocationTargetException e) {
      throw new IgniteException("Failed to create plugin provider instance.",e);
    }
  }
}
