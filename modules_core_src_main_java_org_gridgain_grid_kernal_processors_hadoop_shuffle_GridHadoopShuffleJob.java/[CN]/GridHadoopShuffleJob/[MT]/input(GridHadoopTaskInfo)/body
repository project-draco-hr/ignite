{
switch (taskInfo.type()) {
case COMBINE:
    return combinerMap.input();
case REDUCE:
  int reducer=taskInfo.taskNumber();
if (ctx.localNodeId().equals(outNodes[reducer])) return outMaps.get(reducer).input();
GridHadoopMultimap m=inMaps.get(reducer);
if (m != null) return m.input();
return new GridHadoopTaskInput(){
@Override public boolean next(){
return false;
}
@Override public Object key(){
throw new IllegalStateException();
}
@Override public Iterator<?> values(){
throw new IllegalStateException();
}
@Override public void close() throws Exception {
}
}
;
default :
throw new IllegalStateException("Illegal type: " + taskInfo.type());
}
}
