{
  System.out.println();
  System.out.println(">>> Cache put-get example started.");
  Grid g=GridGain.grid();
  final GridCache<Integer,String> cache=g.cache(CACHE_NAME);
  final int keyCnt=20;
  for (int i=0; i < keyCnt; i++)   cache.putx(i,Integer.toString(i));
  System.out.println(">>> Stored values in cache.");
  GridProjection rmts=g.forCache(CACHE_NAME).forRemotes();
  if (rmts.nodes().isEmpty()) {
    System.out.println(">>> Need to start remote nodes to complete example.");
    return;
  }
  rmts.compute().broadcast(new GridCallable<Object>(){
    @Override public Object call() throws GridException {
      for (int i=0; i < keyCnt; i++)       System.out.println("Got [key=" + i + ", val="+ cache.get(i)+ ']');
      return null;
    }
  }
).get();
}
