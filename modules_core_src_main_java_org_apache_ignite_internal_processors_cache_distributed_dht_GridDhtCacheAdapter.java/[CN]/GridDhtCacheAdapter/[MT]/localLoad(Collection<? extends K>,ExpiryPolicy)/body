{
  if (ctx.store().isLocalStore()) {
    super.localLoad(keys,plc);
    return;
  }
  final GridCacheVersion ver0=ctx.shared().versions().nextForLoad(topology().topologyVersion());
  final boolean replicate=ctx.isDrEnabled();
  final AffinityTopologyVersion topVer=ctx.affinity().affinityTopologyVersion();
  final ExpiryPolicy plc0=plc != null ? plc : ctx.expiry();
  Collection<KeyCacheObject> keys0=ctx.cacheKeysView(keys);
  ctx.store().loadAllFromStore(null,keys0,new CI2<KeyCacheObject,Object>(){
    @Override public void apply(    KeyCacheObject key,    Object val){
      loadEntry(key,val,ver0,null,topVer,replicate,plc0);
    }
  }
);
}
