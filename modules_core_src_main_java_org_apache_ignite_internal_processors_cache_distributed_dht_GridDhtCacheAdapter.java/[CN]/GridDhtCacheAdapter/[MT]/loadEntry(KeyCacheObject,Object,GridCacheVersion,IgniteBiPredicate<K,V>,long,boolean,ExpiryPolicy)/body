{
  if (p != null && !p.apply(key.<K>value(ctx.cacheObjectContext(),false),(V)val))   return;
  try {
    GridDhtLocalPartition part=top.localPartition(ctx.affinity().partition(key),-1,true);
    if (part.reserve()) {
      GridCacheEntryEx entry=null;
      try {
        long ttl=CU.ttlForLoad(plc);
        if (ttl == CU.TTL_ZERO)         return;
        CacheObject cacheVal=ctx.toCacheObject(val);
        entry=entryEx(key,false);
        entry.initialValue(cacheVal,ver,ttl,CU.EXPIRE_TIME_CALCULATE,false,topVer,replicate ? DR_LOAD : DR_NONE);
      }
 catch (      IgniteCheckedException e) {
        throw new IgniteException("Failed to put cache value: " + entry,e);
      }
catch (      GridCacheEntryRemovedException ignore) {
        if (log.isDebugEnabled())         log.debug("Got removed entry during loadCache (will ignore): " + entry);
      }
 finally {
        if (entry != null)         entry.context().evicts().touch(entry,topVer);
        part.release();
      }
    }
 else     if (log.isDebugEnabled())     log.debug("Will node load entry into cache (partition is invalid): " + part);
  }
 catch (  GridDhtInvalidPartitionException e) {
    if (log.isDebugEnabled())     log.debug("Ignoring entry for partition that does not belong [key=" + key + ", val="+ val+ ", err="+ e+ ']');
  }
}
