{
  updateMetaData();
  List<List<Object>> rows=new LinkedList<>();
  int cnt=0;
  for (  Map.Entry<String,Map<String,Map<String,String>>> schema : meta.entrySet())   if (matches(schema.getKey(),schemaPtrn))   for (  Map.Entry<String,Map<String,String>> tbl : schema.getValue().entrySet())   if (matches(tbl.getKey(),tblNamePtrn))   for (  Map.Entry<String,String> col : tbl.getValue().entrySet())   rows.add(columnRow(schema.getKey(),tbl.getKey(),col.getKey(),JdbcUtils.type(col.getValue()),JdbcUtils.typeName(col.getValue()),JdbcUtils.nullable(col.getKey(),col.getValue()),++cnt));
  return new JdbcResultSet(conn.createStatement0(),Collections.<String>emptyList(),Arrays.asList("TABLE_CAT","TABLE_SCHEM","TABLE_NAME","COLUMN_NAME","DATA_TYPE","TYPE_NAME","COLUMN_SIZE","DECIMAL_DIGITS","NUM_PREC_RADIX","NULLABLE","REMARKS","COLUMN_DEF","CHAR_OCTET_LENGTH","ORDINAL_POSITION","IS_NULLABLE","SCOPE_CATLOG","SCOPE_SCHEMA","SCOPE_TABLE","SOURCE_DATA_TYPE","IS_AUTOINCREMENT"),Arrays.<String>asList(String.class.getName(),String.class.getName(),String.class.getName(),String.class.getName(),Integer.class.getName(),String.class.getName(),Integer.class.getName(),Integer.class.getName(),Integer.class.getName(),Integer.class.getName(),String.class.getName(),String.class.getName(),Integer.class.getName(),Integer.class.getName(),String.class.getName(),String.class.getName(),String.class.getName(),String.class.getName(),Short.class.getName(),String.class.getName()),rows);
}
