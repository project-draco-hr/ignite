{
  if (!busyLock.tryReadLock())   return null;
  try {
    HadoopJobMetadata meta=jobMetaCache().get(jobId);
    if (meta == null)     return null;
    if (log.isTraceEnabled())     log.trace("Got job metadata for status check [locNodeId=" + ctx.localNodeId() + ", meta="+ meta+ ']');
    if (meta.phase() == PHASE_COMPLETE) {
      if (log.isTraceEnabled())       log.trace("Job is complete, returning finished future: " + jobId);
      return new GridFinishedFuture<>(jobId);
    }
    GridFutureAdapter<HadoopJobId> fut=F.addIfAbsent(activeFinishFuts,jobId,new GridFutureAdapter<HadoopJobId>());
    meta=jobMetaCache().get(jobId);
    if (log.isTraceEnabled())     log.trace("Re-checking job metadata [locNodeId=" + ctx.localNodeId() + ", meta="+ meta+ ']');
    if (meta == null) {
      fut.onDone();
      activeFinishFuts.remove(jobId,fut);
    }
 else     if (meta.phase() == PHASE_COMPLETE) {
      fut.onDone(jobId,meta.failCause());
      activeFinishFuts.remove(jobId,fut);
    }
    return fut;
  }
  finally {
    busyLock.readUnlock();
  }
}
