{
  A.notNull(c,"c");
  return new CO<T>(){
    private Iterator<? extends T> iter=c.iterator();
{
      peerDeployLike(U.peerDeployAware0(c));
    }
    @Override public T apply(){
      if (!iter.hasNext()) {
        if (cyclic) {
          iter=c.iterator();
        }
 else {
          throw new NoSuchElementException();
        }
      }
      return iter.next();
    }
  }
;
}
