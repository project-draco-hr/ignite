{
  GridConfiguration cfg=new GridConfiguration();
  cfg.setLocalHost("127.0.0.1");
  GridOptimizedMarshaller marsh=new GridOptimizedMarshaller();
  marsh.setRequireSerializable(false);
  cfg.setMarshaller(marsh);
  GridTcpDiscoverySpi discoSpi=new GridTcpDiscoverySpi();
  GridTcpDiscoveryVmIpFinder ipFinder=new GridTcpDiscoveryVmIpFinder();
  ipFinder.setAddresses(Collections.singletonList("127.0.0.1:47500..47509"));
  discoSpi.setIpFinder(ipFinder);
  cfg.setDiscoverySpi(discoSpi);
  GridCacheConfiguration metaCacheCfg=new GridCacheConfiguration();
  metaCacheCfg.setName("ggfs-meta");
  metaCacheCfg.setCacheMode(REPLICATED);
  metaCacheCfg.setAtomicityMode(TRANSACTIONAL);
  metaCacheCfg.setQueryIndexEnabled(false);
  metaCacheCfg.setWriteSynchronizationMode(FULL_SYNC);
  GridCacheConfiguration dataCacheCfg=new GridCacheConfiguration();
  dataCacheCfg.setName("ggfs-data");
  dataCacheCfg.setCacheMode(PARTITIONED);
  dataCacheCfg.setAtomicityMode(TRANSACTIONAL);
  dataCacheCfg.setQueryIndexEnabled(false);
  dataCacheCfg.setWriteSynchronizationMode(FULL_SYNC);
  dataCacheCfg.setDistributionMode(PARTITIONED_ONLY);
  dataCacheCfg.setBackups(0);
  dataCacheCfg.setAffinityMapper(new GridGgfsGroupDataBlocksKeyMapper(512));
  cfg.setCacheConfiguration(metaCacheCfg,dataCacheCfg);
  GridGgfsConfiguration ggfsCfg=new GridGgfsConfiguration();
  ggfsCfg.setName("ggfs");
  ggfsCfg.setMetaCacheName("ggfs-meta");
  ggfsCfg.setDataCacheName("ggfs-data");
  ggfsCfg.setBlockSize(128 * 1024);
  ggfsCfg.setPerNodeBatchSize(512);
  ggfsCfg.setPerNodeParallelBatchCount(16);
  ggfsCfg.setPrefetchBlocks(32);
  Map<String,String> endpointCfg=new TreeMap<>();
  if (GridUtils.isWindows())   endpointCfg.put("type","tcp");
 else {
    endpointCfg.put("type","shmem");
    endpointCfg.put("port","10500");
  }
  ggfsCfg.setIpcEndpointConfiguration(endpointCfg);
  cfg.setGgfsConfiguration(ggfsCfg);
  return cfg;
}
