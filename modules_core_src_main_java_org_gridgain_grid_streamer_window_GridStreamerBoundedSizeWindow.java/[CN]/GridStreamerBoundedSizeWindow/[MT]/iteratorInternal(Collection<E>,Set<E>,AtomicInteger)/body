{
  final ConcurrentLinkedDeque8.IteratorEx<E> it=(ConcurrentLinkedDeque8.IteratorEx<E>)col.iterator();
  return new GridStreamerWindowIterator<E>(){
    private E lastRet;
    @Override public boolean hasNext(){
      return it.hasNext();
    }
    @Override public E next(){
      lastRet=it.next();
      return lastRet;
    }
    @Override public E removex(){
      if (it.removex()) {
        if (set != null)         set.remove(lastRet);
        size.decrementAndGet();
        return lastRet;
      }
 else       return null;
    }
  }
;
}
