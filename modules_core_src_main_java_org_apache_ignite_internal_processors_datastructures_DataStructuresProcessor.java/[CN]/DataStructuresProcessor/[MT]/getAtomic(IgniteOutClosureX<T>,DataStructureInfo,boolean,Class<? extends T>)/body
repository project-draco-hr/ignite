{
  Map<String,DataStructureInfo> dsMap=utilityCache.get(DATA_STRUCTURES_KEY);
  if (!create && (dsMap == null || !dsMap.containsKey(dsInfo.name)))   return null;
  IgniteCheckedException err=validateDataStructure(dsMap,dsInfo,create);
  if (err != null)   throw err;
  final GridCacheInternalKey key=new GridCacheInternalKeyImpl(dsInfo.name);
  T dataStructure=cast(this.dsMap.get(key),cls);
  if (dataStructure != null)   return dataStructure;
  return retryTopologySafe(new IgniteOutClosureX<T>(){
    @Override public T applyx() throws IgniteCheckedException {
      if (!create)       return c.applyx();
      try (IgniteInternalTx tx=utilityCache.txStartEx(PESSIMISTIC,REPEATABLE_READ)){
        IgniteCheckedException err=utilityCache.invoke(DATA_STRUCTURES_KEY,new AddAtomicProcessor(dsInfo)).get();
        if (err != null)         throw err;
        T dataStructure=c.applyx();
        tx.commit();
        return dataStructure;
      }
     }
  }
);
}
