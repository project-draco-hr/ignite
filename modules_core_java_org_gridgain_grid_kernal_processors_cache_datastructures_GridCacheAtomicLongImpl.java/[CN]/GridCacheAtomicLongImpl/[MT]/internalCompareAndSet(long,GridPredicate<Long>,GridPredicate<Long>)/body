{
  return new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      GridCacheTx tx=CU.txStartInternal(ctx,atomicView,PESSIMISTIC,REPEATABLE_READ);
      try {
        GridCacheAtomicLongValue val=atomicView.get(key);
        if (val == null)         throw new GridException("Failed to find atomic long with given name: " + name);
        boolean retVal=p.apply(val.get());
        for (        GridPredicate<Long> p : ps)         retVal&=p.apply(val.get());
        if (retVal) {
          val.set(l);
          atomicView.put(key,val);
          tx.commit();
        }
        return retVal;
      }
 catch (      Error|Exception e) {
        U.error(log,"Failed to compare and set: " + this,e);
        throw e;
      }
 finally {
        tx.close();
      }
    }
  }
;
}
