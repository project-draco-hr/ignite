{
  boolean empty=F.isEmpty(keys);
  Map<K,V> map=empty ? Collections.<K,V>emptyMap() : new GridLeanMap<K,V>(keys.size());
  if (!empty) {
    GridCacheVersion ver=F.isEmpty(infos) ? null : cctx.versions().next();
    for (    GridCacheEntryInfo<K,V> info : infos) {
      try {
        info.unmarshalValue(cctx,cctx.deploy().globalLoader());
        if (!cctx.cache().affinity().isPrimaryOrBackup(cctx.localNode(),info.key())) {
          GridNearCacheEntry<K,V> entry=cache().entryExx(info.key());
          GridCacheVersion saved=savedVers.get(info.key());
          entry.loadedValue(tx,nodeId,info.value(),info.valueBytes(),ver,info.version(),saved,info.ttl(),info.expireTime(),true);
        }
      }
 catch (      GridCacheEntryRemovedException ignore) {
        if (log.isDebugEnabled())         log.debug("Got removed entry while processing get response (will not retry).");
      }
catch (      GridException e) {
        onDone(e);
        return Collections.emptyMap();
      }
      map.put(info.key(),info.value());
    }
  }
  return map;
}
