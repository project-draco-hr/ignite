{
  Object obj;
  try {
    obj=UNSAFE.allocateInstance(cls);
  }
 catch (  InstantiationException e) {
    throw new IOException(e);
  }
  int handle=handles.assign(obj);
  for (int i=0; i < mtds.size(); i++) {
    Method mtd=mtds.get(i);
    if (mtd != null) {
      curObj=obj;
      curFields=fieldOffs.get(i);
      try {
        mtd.invoke(obj,this);
      }
 catch (      IllegalAccessException|InvocationTargetException e) {
        throw new IOException(e);
      }
    }
 else     readFields(obj,fieldOffs.get(i));
  }
  if (readResolveMtd != null) {
    try {
      obj=readResolveMtd.invoke(obj);
      handles.set(handle,obj);
    }
 catch (    IllegalAccessException|InvocationTargetException e) {
      throw new IOException(e);
    }
  }
  return obj;
}
