{
  GridFuture fut1=GridTestUtils.runMultiThreadedAsync(new Callable<Object>(){
    @Nullable @Override public Object call() throws Exception {
      for (int j=0; j < ITER_CNT; j++)       for (int i=0; i < STORE_SIZE; i++)       store.updateLocalMetrics(ids[i],new GridDiscoveryMetricsAdapter());
      return null;
    }
  }
,THREAD_CNT,"writers");
  GridFuture fut2=GridTestUtils.runMultiThreadedAsync(new Callable<Object>(){
    @Nullable @Override public Object call() throws Exception {
      for (int j=0; j < ITER_CNT; j++)       store.metrics(Arrays.asList(ids)).size();
      return null;
    }
  }
,THREAD_CNT,"readers");
  GridFuture fut3=GridTestUtils.runMultiThreadedAsync(new Callable<Object>(){
    @Nullable @Override public Object call() throws Exception {
      for (int j=0; j < ITER_CNT; j++)       for (int i=0; i < STORE_SIZE; i++)       store.removeMetrics(Arrays.asList(ids[i]));
      return null;
    }
  }
,THREAD_CNT,"removers");
  fut1.get();
  fut2.get();
  fut3.get();
  Collection<UUID> allNodeIds=store.allNodeIds();
  if (!allNodeIds.isEmpty())   store.removeMetrics(allNodeIds);
}
