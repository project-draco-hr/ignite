{
  readLock().lock();
  try {
    if (evts != null)     return (ConcurrentLinkedDeque8.IteratorEx<E>)evts.iterator();
    return new ConcurrentLinkedDeque8.IteratorEx<E>(){
      @Override public boolean removex(){
        throw new NoSuchElementException();
      }
      @Override public boolean hasNext(){
        return false;
      }
      @Override public E next(){
        throw new NoSuchElementException();
      }
      @Override public void remove(){
        throw new NoSuchElementException();
      }
    }
;
  }
  finally {
    readLock().unlock();
  }
}
