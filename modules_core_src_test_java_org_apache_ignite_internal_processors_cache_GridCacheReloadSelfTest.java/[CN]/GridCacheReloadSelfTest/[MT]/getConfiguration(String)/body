{
  IgniteConfiguration cfg=super.getConfiguration(gridName);
  cfg.setLocalHost("127.0.0.1");
  TcpDiscoverySpi discoSpi=new TcpDiscoverySpi();
  TcpDiscoveryVmIpFinder ipFinder=new TcpDiscoveryVmIpFinder();
  ipFinder.setAddresses(Collections.singleton("127.0.0.1:47500"));
  discoSpi.setIpFinder(ipFinder);
  cfg.setDiscoverySpi(discoSpi);
  CacheConfiguration cacheCfg=defaultCacheConfiguration();
  cacheCfg.setName(CACHE_NAME);
  cacheCfg.setCacheMode(cacheMode);
  LruEvictionPolicy plc=new LruEvictionPolicy();
  plc.setMaxSize(MAX_CACHE_ENTRIES);
  cacheCfg.setEvictionPolicy(plc);
  cacheCfg.setNearConfiguration(nearEnabled ? new NearCacheConfiguration() : null);
  final CacheStore store=new CacheStoreAdapter<Integer,Integer>(){
    @Override public Integer load(    Integer key){
      return key;
    }
    @Override public void write(    javax.cache.Cache.Entry<? extends Integer,? extends Integer> e){
    }
    @Override public void delete(    Object key){
    }
  }
;
  cacheCfg.setCacheStoreFactory(singletonFactory(store));
  cacheCfg.setReadThrough(true);
  cacheCfg.setWriteThrough(true);
  cacheCfg.setLoadPreviousValue(true);
  if (cacheMode == PARTITIONED)   cacheCfg.setBackups(1);
  cfg.setCacheConfiguration(cacheCfg);
  return cfg;
}
