{
  out.writeInt(cacheId);
  out.writeBoolean(keyBytesSent);
  out.writeBoolean(valBytesSent);
  if (keyBytesSent)   IgniteByteUtils.writeByteArray(out,keyBytes);
 else   out.writeObject(key);
  if (valBytesSent)   IgniteByteUtils.writeByteArray(out,valBytes);
 else {
    if (val != null && val instanceof byte[]) {
      out.writeBoolean(true);
      IgniteByteUtils.writeByteArray(out,(byte[])val);
    }
 else {
      out.writeBoolean(false);
      out.writeObject(val);
    }
  }
  out.writeLong(ttl);
  long remaining;
  if (expireTime == 0)   remaining=-1;
 else {
    remaining=expireTime - U.currentTimeMillis();
    if (remaining < 0)     remaining=0;
  }
  out.writeLong(remaining);
  CU.writeVersion(out,ver);
}
