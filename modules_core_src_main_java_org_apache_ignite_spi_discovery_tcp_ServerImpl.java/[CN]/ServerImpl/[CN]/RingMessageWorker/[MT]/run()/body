{
  String errMsg="Local node's marshaller differs from remote node's marshaller " + "(to make sure all nodes in topology have identical marshaller, " + "configure marshaller explicitly in configuration) "+ "[locMarshaller=" + locMarsh + ", rmtMarshaller="+ rmtMarsh+ ", locNodeAddrs="+ U.addressesAsString(locNode)+ ", rmtNodeAddrs="+ U.addressesAsString(node)+ ", locNodeId="+ locNode.id()+ ", rmtNodeId="+ msg.creatorNodeId()+ ']';
  LT.warn(log,null,errMsg);
  if (log.isDebugEnabled())   log.debug(errMsg);
  try {
    String sndMsg="Local node's marshaller differs from remote node's marshaller " + "(to make sure all nodes in topology have identical marshaller, " + "configure marshaller explicitly in configuration) "+ "[locMarshaller=" + rmtMarsh + ", rmtMarshaller="+ locMarsh+ ", locNodeAddrs="+ U.addressesAsString(node)+ ", locPort="+ node.discoveryPort()+ ", rmtNodeAddr="+ U.addressesAsString(locNode)+ ", locNodeId="+ node.id()+ ", rmtNodeId="+ locNode.id()+ ']';
    trySendMessageDirectly(node,new TcpDiscoveryCheckFailedMessage(locNodeId,sndMsg));
  }
 catch (  IgniteSpiException e) {
    if (log.isDebugEnabled())     log.debug("Failed to send marshaller check failed message to node " + "[node=" + node + ", err="+ e.getMessage()+ ']');
    onException("Failed to send marshaller check failed message to node " + "[node=" + node + ", err="+ e.getMessage()+ ']',e);
  }
}
