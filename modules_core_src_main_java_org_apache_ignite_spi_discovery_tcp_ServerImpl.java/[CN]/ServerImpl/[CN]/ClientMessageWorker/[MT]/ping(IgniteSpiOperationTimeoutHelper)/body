{
  if (spi.isNodeStopping0())   return false;
  GridFutureAdapter<Boolean> fut;
  while (true) {
    fut=pingFut.get();
    if (fut != null)     break;
    fut=new GridFutureAdapter<>();
    if (pingFut.compareAndSet(null,fut)) {
      TcpDiscoveryPingRequest pingReq=new TcpDiscoveryPingRequest(getLocalNodeId(),clientNodeId);
      pingReq.verify(getLocalNodeId());
      addMessage(pingReq);
      break;
    }
  }
  try {
    return fut.get(timeoutHelper.nextTimeoutChunk(spi.getAckTimeout()),TimeUnit.MILLISECONDS);
  }
 catch (  IgniteInterruptedCheckedException ignored) {
    throw new InterruptedException();
  }
catch (  IgniteFutureTimeoutCheckedException ignored) {
    if (pingFut.compareAndSet(fut,null))     fut.onDone(false);
    return false;
  }
catch (  IgniteCheckedException e) {
    throw new IgniteSpiException("Internal error: ping future cannot be done with exception",e);
  }
}
