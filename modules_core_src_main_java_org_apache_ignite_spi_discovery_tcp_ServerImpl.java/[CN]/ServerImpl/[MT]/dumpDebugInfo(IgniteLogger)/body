{
  if (!debugMode) {
    U.quietAndWarn(log,"Failed to dump debug info (discovery SPI was not configured " + "in debug mode, consider setting 'debugMode' configuration property to 'true').");
    return;
  }
synchronized (mux) {
    StringBuilder b=new StringBuilder(U.nl());
    b.append(">>>").append(U.nl());
    b.append(">>>").append("Dumping discovery SPI debug info.").append(U.nl());
    b.append(">>>").append(U.nl());
    b.append("Local node ID: ").append(getLocalNodeId()).append(U.nl()).append(U.nl());
    b.append("Local node: ").append(locNode).append(U.nl()).append(U.nl());
    b.append("SPI state: ").append(spiState).append(U.nl()).append(U.nl());
    b.append("Internal threads: ").append(U.nl());
    b.append("    Message worker: ").append(threadStatus(msgWorker)).append(U.nl());
    b.append("    Check status sender: ").append(threadStatus(chkStatusSnd)).append(U.nl());
    b.append("    HB sender: ").append(threadStatus(hbsSnd)).append(U.nl());
    b.append("    IP finder cleaner: ").append(threadStatus(ipFinderCleaner)).append(U.nl());
    b.append("    Stats printer: ").append(threadStatus(statsPrinter)).append(U.nl());
    b.append(U.nl());
    b.append("Socket readers: ").append(U.nl());
    for (    SocketReader rdr : readers)     b.append("    ").append(rdr).append(U.nl());
    b.append(U.nl());
    b.append("In-memory log messages: ").append(U.nl());
    for (    String msg : debugLog)     b.append("    ").append(msg).append(U.nl());
    b.append(U.nl());
    b.append("Leaving nodes: ").append(U.nl());
    for (    TcpDiscoveryNode node : leavingNodes)     b.append("    ").append(node.id()).append(U.nl());
    b.append(U.nl());
    b.append("Failed nodes: ").append(U.nl());
    for (    TcpDiscoveryNode node : failedNodes)     b.append("    ").append(node.id()).append(U.nl());
    b.append(U.nl());
    b.append("Stats: ").append(spi.stats).append(U.nl());
    System.out.println(b.toString());
  }
}
