{
  if (atomicityMode() == TRANSACTIONAL) {
    String key="1";
    for (int i=0; i < gridCount(); i++)     assertFalse("Invalid result on grid: " + i,jcache(i).containsKey(key));
    IgniteCache<String,Integer> cache=jcache(0);
    for (    TransactionConcurrency conc : TransactionConcurrency.values()) {
      for (      TransactionIsolation iso : TransactionIsolation.values()) {
        try (Transaction tx=grid(0).transactions().txStart(conc,iso)){
          assertFalse("Invalid result on grid inside tx",cache.containsKey(key));
          assertFalse("Key was enlisted to transaction: " + tx,txContainsKey(tx,key));
          cache.put(key,1);
          assertTrue("Invalid result on grid inside tx",cache.containsKey(key));
        }
         for (int i=0; i < gridCount(); i++)         assertFalse("Invalid result on grid: " + i,jcache(i).containsKey(key));
      }
    }
  }
}
