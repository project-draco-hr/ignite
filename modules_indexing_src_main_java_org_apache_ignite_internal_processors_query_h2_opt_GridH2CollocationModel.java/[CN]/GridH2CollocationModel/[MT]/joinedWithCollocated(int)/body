{
  TableFilter tf=childFilters[f];
  GridH2Table tbl=(GridH2Table)tf.getTable();
  if (validate) {
    if (tbl.rowDescriptor().context().customAffinityMapper())     throw customAffinityError(tbl.spaceName());
    if (F.isEmpty(tf.getIndexConditions())) {
      throw new CacheException("Failed to prepare distributed join query: " + "join condition does not use index [joinedCache=" + tbl.spaceName() + ", plan="+ tf.getSelect().getPlanSQL()+ ']');
    }
  }
  IndexColumn affCol=tbl.getAffinityKeyColumn();
  boolean affKeyCondFound=false;
  if (affCol != null) {
    ArrayList<IndexCondition> idxConditions=tf.getIndexConditions();
    int affColId=affCol.column.getColumnId();
    for (int i=0; i < idxConditions.size(); i++) {
      IndexCondition c=idxConditions.get(i);
      int cmpType=c.getCompareType();
      if ((cmpType == Comparison.EQUAL || cmpType == Comparison.EQUAL_NULL_SAFE) && c.getColumn().getColumnId() == affColId && c.isEvaluatable()) {
        affKeyCondFound=true;
        Expression exp=c.getExpression();
        exp=exp.getNonAliasExpression();
        if (exp instanceof ExpressionColumn) {
          ExpressionColumn expCol=(ExpressionColumn)exp;
          TableFilter prevJoin=expCol.getTableFilter();
          if (prevJoin != null) {
            GridH2CollocationModel cm=child(indexOf(prevJoin),true);
            if (cm != null) {
              Type t=cm.type(true);
              if (t.isPartitioned() && t.isCollocated() && isAffinityColumn(prevJoin,expCol,validate))               return Affinity.JOINED_WITH_COLLOCATED;
            }
          }
        }
      }
    }
  }
  return affKeyCondFound ? Affinity.HAS_AFFINITY_CONDITION : Affinity.NONE;
}
