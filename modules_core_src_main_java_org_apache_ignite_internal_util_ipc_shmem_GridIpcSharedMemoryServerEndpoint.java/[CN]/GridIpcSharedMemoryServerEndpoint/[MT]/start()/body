{
  GridIpcSharedMemoryNativeLoader.load();
  pid=IpcSharedMemoryUtils.pid();
  if (pid == -1)   throw new GridIpcEndpointBindException("Failed to get PID of the current process.");
  if (size <= 0)   throw new GridIpcEndpointBindException("Space size should be positive: " + size);
  String tokDirPath=this.tokDirPath;
  if (F.isEmpty(tokDirPath))   throw new GridIpcEndpointBindException("Token directory path is empty.");
  tokDirPath=tokDirPath + '/' + locNodeId.toString()+ '-'+ IpcSharedMemoryUtils.pid();
  tokDir=U.resolveWorkDirectory(tokDirPath,false);
  if (port <= 0 || port >= 0xffff)   throw new GridIpcEndpointBindException("Port value is illegal: " + port);
  try {
    srvSock=new ServerSocket();
    srvSock.bind(new InetSocketAddress("127.0.0.1",port));
  }
 catch (  IOException e) {
    U.closeQuiet(srvSock);
    throw new GridIpcEndpointBindException("Failed to bind shared memory IPC endpoint (is port already " + "in use?): " + port,e);
  }
  gcWorker=new GcWorker(gridName,"ipc-shmem-gc",log);
  new IgniteThread(gcWorker).start();
  if (log.isInfoEnabled())   log.info("IPC shared memory server endpoint started [port=" + port + ", tokDir="+ tokDir.getAbsolutePath()+ ']');
}
