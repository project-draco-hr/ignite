{
  Collection<Integer> shmemIdsBeforeInteractions=GridIpcSharedMemoryUtils.sharedMemoryIds();
  info("Shared memory IDs before starting server-client interactions: " + shmemIdsBeforeInteractions);
  Collection<Integer> shmemIdsWithinInteractions=interactWithServer();
  Collection<Integer> shmemIdsAfterInteractions=GridIpcSharedMemoryUtils.sharedMemoryIds();
  info("Shared memory IDs created within interaction: " + shmemIdsWithinInteractions);
  info("Shared memory IDs after server and client killing: " + shmemIdsAfterInteractions);
  if (!U.isLinux())   assertTrue("List of shared memory IDs after server-client interactions should include IDs created within " + "client-server interactions.",shmemIdsAfterInteractions.containsAll(shmemIdsWithinInteractions));
 else   assertFalse("List of shared memory IDs after server-client interactions should not include IDs created " + "(on Linux): within client-server interactions.",CollectionUtils.containsAny(shmemIdsAfterInteractions,shmemIdsWithinInteractions));
  ProcessStartResult srvStartRes=startSharedMemoryTestServer();
  try {
    for (int i=0; i < 12; i++) {
      shmemIdsAfterInteractions=GridIpcSharedMemoryUtils.sharedMemoryIds();
      info("Shared memory IDs after server restart: " + shmemIdsAfterInteractions);
      if (CollectionUtils.containsAny(shmemIdsAfterInteractions,shmemIdsWithinInteractions))       U.sleep(1000);
 else       break;
    }
    assertFalse("List of shared memory IDs after server endpoint restart should not include IDs created: " + "within client-server interactions.",CollectionUtils.containsAny(shmemIdsAfterInteractions,shmemIdsWithinInteractions));
  }
  finally {
    srvStartRes.proc().kill();
    srvStartRes.isKilledLatch().await();
  }
}
