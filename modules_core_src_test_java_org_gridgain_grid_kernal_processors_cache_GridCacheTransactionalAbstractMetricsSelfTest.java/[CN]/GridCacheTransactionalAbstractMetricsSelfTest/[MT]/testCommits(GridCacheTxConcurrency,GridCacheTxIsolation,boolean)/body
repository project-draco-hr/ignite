{
  GridCache<Integer,Integer> cache=grid(0).cache(null);
  for (int i=0; i < TX_CNT; i++) {
    IgniteTx tx=cache.txStart(concurrency,isolation);
    if (put)     for (int j=0; j < keyCount(); j++)     cache.put(j,j);
    tx.commit();
  }
  for (int i=0; i < gridCount(); i++) {
    IgniteTxMetrics metrics=grid(i).transactions().metrics();
    GridCacheMetrics cacheMetrics=grid(i).cache(null).metrics();
    if (i == 0) {
      assertEquals(TX_CNT,metrics.txCommits());
      if (put)       assertEquals(TX_CNT,cacheMetrics.txCommits());
    }
 else {
      assertEquals(0,metrics.txCommits());
      assertEquals(0,cacheMetrics.txCommits());
    }
    assertEquals(0,metrics.txRollbacks());
    assertEquals(0,cacheMetrics.txRollbacks());
  }
}
