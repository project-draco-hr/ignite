{
  GridConfiguration cfg=getConfiguration("test");
  cfg.setLifecycleBeans(new GridCacheLoaderLifeCycleBean());
  final Grid g=G.start(cfg);
  Integer res=g.compute().call(new GridCallable<Integer>(){
    @Override public Integer call() throws GridException {
      GridCache<MyKey,MyValue> cache=g.cache(null);
      GridCacheQuery<Map.Entry<MyKey,MyValue>> q=cache.queries().createScanQuery(null);
      return F.sumInt(q.execute(new GridReducer<Map.Entry<MyKey,MyValue>,Integer>(){
        /** 
 */
        private int cnt_;
        @Override public boolean collect(        Map.Entry<MyKey,MyValue> e){
          cnt_++;
          return true;
        }
        @Override public Integer reduce(){
          return cnt_;
        }
      }
).get());
    }
  }
).get();
  assertEquals(1000,res.intValue());
}
