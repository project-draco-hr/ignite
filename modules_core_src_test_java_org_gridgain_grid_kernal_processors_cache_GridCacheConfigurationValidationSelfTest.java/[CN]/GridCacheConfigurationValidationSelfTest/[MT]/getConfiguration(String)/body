{
  IgniteConfiguration cfg=super.getConfiguration(gridName);
  TcpDiscoverySpi spi=new TcpDiscoverySpi();
  spi.setIpFinder(ipFinder);
  cfg.setDiscoverySpi(spi);
  CacheConfiguration dfltCacheCfg=defaultCacheConfiguration();
  dfltCacheCfg.setCacheMode(PARTITIONED);
  dfltCacheCfg.setPreloadMode(ASYNC);
  dfltCacheCfg.setWriteSynchronizationMode(FULL_SYNC);
  dfltCacheCfg.setAffinity(new GridCacheConsistentHashAffinityFunction());
  CacheConfiguration namedCacheCfg=defaultCacheConfiguration();
  namedCacheCfg.setCacheMode(PARTITIONED);
  namedCacheCfg.setPreloadMode(ASYNC);
  namedCacheCfg.setWriteSynchronizationMode(FULL_SYNC);
  namedCacheCfg.setName(NON_DFLT_CACHE_NAME);
  namedCacheCfg.setAffinity(new GridCacheConsistentHashAffinityFunction());
  if (gridName.contains(WRONG_PRELOAD_MODE_GRID_NAME))   dfltCacheCfg.setPreloadMode(SYNC);
 else   if (gridName.contains(WRONG_CACHE_MODE_GRID_NAME))   dfltCacheCfg.setCacheMode(REPLICATED);
 else   if (gridName.contains(WRONG_AFFINITY_GRID_NAME)) {
    dfltCacheCfg.setAffinity(new GridCacheConsistentHashAffinityFunction(){
    }
);
  }
 else   if (gridName.contains(WRONG_AFFINITY_MAPPER_GRID_NAME)) {
    dfltCacheCfg.setAffinityMapper(new GridCacheDefaultAffinityKeyMapper(){
    }
);
  }
 else   if (gridName.contains(WRONG_OFF_HEAP_GRID_NAME))   dfltCacheCfg.setMemoryMode(OFFHEAP_VALUES);
  if (gridName.contains(DUP_CACHES_GRID_NAME))   cfg.setCacheConfiguration(namedCacheCfg,namedCacheCfg);
 else   if (gridName.contains(DUP_DFLT_CACHES_GRID_NAME))   cfg.setCacheConfiguration(dfltCacheCfg,dfltCacheCfg);
 else   cfg.setCacheConfiguration(dfltCacheCfg,namedCacheCfg);
  return cfg;
}
