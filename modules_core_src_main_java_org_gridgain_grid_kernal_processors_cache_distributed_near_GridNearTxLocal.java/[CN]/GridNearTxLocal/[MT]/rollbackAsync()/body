{
  GridNearTxPrepareFuture<K,V> prepFut=this.prepFut.get();
  GridNearTxFinishFuture<K,V> fut=rollbackFut.get();
  if (fut == null && !rollbackFut.compareAndSet(null,fut=new GridNearTxFinishFuture<>(cctx,this,false)))   return rollbackFut.get();
  try {
    cctx.mvcc().addFuture(fut);
    if (prepFut == null || prepFut.isDone()) {
      try {
        if (prepFut != null)         prepFut.get();
      }
 catch (      GridException e) {
        if (log.isDebugEnabled())         log.debug("Got optimistic tx failure [tx=" + this + ", err="+ e+ ']');
      }
      if (finish(false) || state() == UNKNOWN)       fut.finish();
 else       fut.onError(new GridException("Failed to gracefully rollback transaction: " + CU.txString(this)));
    }
 else {
      prepFut.listenAsync(new CI1<GridFuture<GridCacheTxEx<K,V>>>(){
        @Override public void apply(        GridFuture<GridCacheTxEx<K,V>> f){
          try {
            f.get();
          }
 catch (          GridException e) {
            if (log.isDebugEnabled())             log.debug("Got optimistic tx failure [tx=" + this + ", err="+ e+ ']');
          }
          GridNearTxFinishFuture<K,V> fut0=rollbackFut.get();
          try {
            if (finish(false) || state() == UNKNOWN)             fut0.finish();
 else             fut0.onError(new GridException("Failed to gracefully rollback transaction: " + CU.txString(GridNearTxLocal.this)));
          }
 catch (          GridException e) {
            U.error(log,"Failed to gracefully rollback transaction: " + this,e);
            fut0.onError(e);
          }
        }
      }
);
    }
    return fut;
  }
 catch (  GridException e) {
    return new GridFinishedFuture<>(cctx.kernalContext(),e);
  }
}
