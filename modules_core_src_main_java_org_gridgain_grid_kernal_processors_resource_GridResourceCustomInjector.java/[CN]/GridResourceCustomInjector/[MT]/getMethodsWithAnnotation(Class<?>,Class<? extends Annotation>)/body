{
  List<Method> mtds=new ArrayList<>();
  for (Class<?> c=cls; !c.equals(Object.class); c=c.getSuperclass()) {
    for (    Method mtd : c.getDeclaredMethods()) {
      if (mtd.getAnnotation(annCls) != null) {
        if (mtd.getParameterTypes().length > 0) {
          throw new IgniteCheckedException("Task shared resource initialization or finalization method should " + "not have parameters: " + mtd);
        }
        mtds.add(mtd);
      }
    }
  }
  return mtds;
}
