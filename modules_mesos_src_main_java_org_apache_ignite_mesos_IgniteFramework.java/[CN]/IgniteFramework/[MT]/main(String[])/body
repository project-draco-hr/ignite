{
  final int frameworkFailoverTimeout=0;
  Protos.FrameworkInfo.Builder frameworkBuilder=Protos.FrameworkInfo.newBuilder().setName(IGNITE_FRAMEWORK_NAME).setUser("").setFailoverTimeout(frameworkFailoverTimeout);
  if (System.getenv("MESOS_CHECKPOINT") != null) {
    log.info("Enabling checkpoint for the framework");
    frameworkBuilder.setCheckpoint(true);
  }
  ClusterProperties clusterProps=ClusterProperties.from(args.length >= 1 ? args[0] : null);
  String baseUrl=String.format("http://%s:%d",clusterProps.httpServerHost(),clusterProps.httpServerPort());
  JettyServer httpSrv=new JettyServer();
  httpSrv.start(new ResourceHandler(clusterProps.userLibs(),clusterProps.igniteCfg(),clusterProps.igniteWorkDir()),clusterProps);
  ResourceProvider provider=new ResourceProvider();
  IgniteProvider igniteProvider=new IgniteProvider(clusterProps.igniteWorkDir());
  provider.init(clusterProps,igniteProvider,baseUrl);
  Scheduler scheduler=new IgniteScheduler(clusterProps,provider);
  MesosSchedulerDriver driver;
  if (System.getenv("MESOS_AUTHENTICATE") != null) {
    log.info("Enabling authentication for the framework");
    if (System.getenv("DEFAULT_PRINCIPAL") == null) {
      log.log(Level.SEVERE,"Expecting authentication principal in the environment");
      System.exit(1);
    }
    if (System.getenv("DEFAULT_SECRET") == null) {
      log.log(Level.SEVERE,"Expecting authentication secret in the environment");
      System.exit(1);
    }
    Protos.Credential cred=Protos.Credential.newBuilder().setPrincipal(System.getenv("DEFAULT_PRINCIPAL")).setSecret(ByteString.copyFrom(System.getenv("DEFAULT_SECRET").getBytes())).build();
    frameworkBuilder.setPrincipal(System.getenv("DEFAULT_PRINCIPAL"));
    driver=new MesosSchedulerDriver(scheduler,frameworkBuilder.build(),clusterProps.masterUrl(),cred);
  }
 else {
    frameworkBuilder.setPrincipal("ignite-framework-java");
    driver=new MesosSchedulerDriver(scheduler,frameworkBuilder.build(),clusterProps.masterUrl());
  }
  int status=driver.run() == Protos.Status.DRIVER_STOPPED ? 0 : 1;
  httpSrv.stop();
  driver.stop();
  System.exit(status);
}
