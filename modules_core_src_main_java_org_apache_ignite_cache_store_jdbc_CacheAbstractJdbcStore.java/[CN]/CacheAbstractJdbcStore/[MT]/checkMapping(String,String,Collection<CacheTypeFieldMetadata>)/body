{
  try {
    Class<?> cls=Class.forName(clsName);
    if (simpleType(cls)) {
      if (fields.size() != 1)       throw new CacheException("More than one field for simple type [cache name=" + cacheName + ", type="+ clsName+ " ]");
      CacheTypeFieldMetadata field=F.first(fields);
      if (field.getDatabaseName() == null)       throw new CacheException("Missing database name in mapping description [cache name=" + cacheName + ", type="+ clsName+ " ]");
      if (field.getJavaName() != null)       throw new CacheException("Missing field name in mapping description [cache name=" + cacheName + ", type="+ clsName+ " ]");
      field.setJavaType(cls);
    }
 else     for (    CacheTypeFieldMetadata field : fields) {
      if (field.getDatabaseName() == null)       throw new CacheException("Missing database name in mapping description [cache name=" + cacheName + ", type="+ clsName+ " ]");
      if (field.getJavaName() == null)       throw new CacheException("Missing field name in mapping description [cache name=" + cacheName + ", type="+ clsName+ " ]");
      if (field.getJavaType() == null)       throw new CacheException("Missing field type in mapping description [cache name=" + cacheName + ", type="+ clsName+ " ]");
    }
  }
 catch (  ClassNotFoundException e) {
    throw new CacheException("Failed to find class: " + clsName,e);
  }
}
