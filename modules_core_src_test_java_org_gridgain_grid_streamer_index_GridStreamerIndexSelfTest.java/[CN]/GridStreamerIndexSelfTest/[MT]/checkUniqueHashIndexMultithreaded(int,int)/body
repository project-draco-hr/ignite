{
  GridStreamerIndexProvider<String,String,Integer> idxProvider=indexProvider(false,"idx",new IndexUpdater(),EVENT_TRACKING_ON_DEDUP,true);
  for (int i=0; i < iters && !Thread.currentThread().isInterrupted(); i++) {
    final StreamerBoundedSizeWindow<String> win=new StreamerBoundedSizeWindow<>();
    win.setMaximumSize(threadCnt * 2);
    win.setIndexes(idxProvider);
    win.start();
    final String evt="evt" + i;
    final AtomicInteger nIdxErrors=new AtomicInteger();
    runMultiThreaded(new CAX(){
      @Override public void applyx() throws GridException {
        try {
          win.enqueue(evt);
        }
 catch (        GridException e) {
          if (e.getMessage().contains("Index unique key violation"))           nIdxErrors.incrementAndGet();
 else           throw e;
        }
      }
    }
,threadCnt,"put");
    assertEquals(threadCnt - 1,nIdxErrors.get());
    GridStreamerIndex<String,String,Integer> idx=win.index("idx");
    assertEquals(1,idx.entries(0).size());
    assertEquals((Integer)1,idx.entry(evt).value());
  }
}
