{
  GridDhtAtomicDeferredUpdateResponse msg=new GridDhtAtomicDeferredUpdateResponse(ctx.cacheId(),respVers);
  try {
    ctx.kernalContext().gateway().readLock();
    try {
      ctx.io().send(nodeId,msg,ctx.ioPolicy());
    }
  finally {
      ctx.kernalContext().gateway().readUnlock();
    }
  }
 catch (  IllegalStateException ignored) {
    if (log.isDebugEnabled())     log.debug("Failed to send deferred dht update response to remote node (grid is stopping) " + "[nodeId=" + nodeId + ", msg="+ msg+ ']');
  }
catch (  ClusterTopologyCheckedException ignored) {
    if (log.isDebugEnabled())     log.debug("Failed to send deferred dht update response to remote node (did node leave grid?) " + "[nodeId=" + nodeId + ", msg="+ msg+ ']');
  }
catch (  IgniteCheckedException e) {
    U.error(log,"Failed to send deferred dht update response to remote node [nodeId=" + nodeId + ", msg="+ msg+ ']',e);
  }
  pendingResponses.remove(nodeId,this);
}
