{
  IgniteInternalFuture<T> fail=asyncOpAcquire();
  if (fail != null)   return fail;
  FutureHolder holder=lastFut.get();
  holder.lock();
  try {
    IgniteInternalFuture fut=holder.future();
    if (fut != null && !fut.isDone()) {
      IgniteInternalFuture<T> f=new GridEmbeddedFuture(fut,new IgniteOutClosure<IgniteInternalFuture>(){
        @Override public IgniteInternalFuture<T> apply(){
          if (ctx.kernalContext().isStopping())           return new GridFinishedFuture<>(new IgniteCheckedException("Operation has been cancelled (node is stopping)."));
          return op.apply();
        }
      }
);
      saveFuture(holder,f);
      return f;
    }
    IgniteInternalFuture<T> f=op.apply();
    saveFuture(holder,f);
    return f;
  }
  finally {
    holder.unlock();
  }
}
