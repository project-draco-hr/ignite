{
  GridHadoopV2Job job=(GridHadoopV2Job)taskCtx.job();
  JobConf jobConf=job.hadoopJobContext().getJobConf();
  Mapper mapper=U.newInstance(jobConf.getMapperClass());
  InputFormat inFormat=jobConf.getInputFormat();
  GridHadoopFileBlock block=info().fileBlock();
  InputSplit split=new FileSplit(new Path(block.file().toString()),block.start(),block.length(),block.hosts());
  OutputCollector collector=new OutputCollector(){
    @Override public void collect(    Object key,    Object val) throws IOException {
      try {
        taskCtx.output().write(key,val);
      }
 catch (      GridException e) {
        throw new IOException(e);
      }
    }
  }
;
  Reporter reporter=Reporter.NULL;
  try {
    RecordReader reader=inFormat.getRecordReader(split,jobConf,reporter);
    Object key=reader.createKey();
    Object val=reader.createValue();
    mapper.configure(jobConf);
    while (reader.next(key,val))     mapper.map(key,val,collector,reporter);
    mapper.close();
  }
 catch (  IOException e) {
    throw new GridException(e);
  }
}
