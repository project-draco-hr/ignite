{
  VisorCacheStoreConfiguration cfg=new VisorCacheStoreConfiguration();
  IgniteCacheProxy<Object,Object> c=ignite.context().cache().jcache(ccfg.getName());
  CacheStore store=c != null && c.context().started() ? c.context().store().configuredStore() : null;
  cfg.jdbcStore=store instanceof CacheAbstractJdbcStore;
  cfg.store=compactClass(store);
  cfg.storeFactory=compactClass(ccfg.getCacheStoreFactory());
  cfg.storeKeepBinary=ccfg.isStoreKeepBinary();
  cfg.readThrough=ccfg.isReadThrough();
  cfg.writeThrough=ccfg.isWriteThrough();
  cfg.writeBehindEnabled=ccfg.isWriteBehindEnabled();
  cfg.batchSz=ccfg.getWriteBehindBatchSize();
  cfg.flushFreq=ccfg.getWriteBehindFlushFrequency();
  cfg.flushSz=ccfg.getWriteBehindFlushSize();
  cfg.flushThreadCnt=ccfg.getWriteBehindFlushThreadCount();
  return cfg;
}
