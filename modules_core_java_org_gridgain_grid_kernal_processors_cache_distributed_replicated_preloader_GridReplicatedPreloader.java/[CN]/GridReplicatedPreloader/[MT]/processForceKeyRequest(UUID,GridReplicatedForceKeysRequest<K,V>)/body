{
  if (!enterBusy())   return;
  try {
    GridReplicatedForceKeysResponse<K,V> res=new GridReplicatedForceKeysResponse<>(req.futureId());
    for (    K key : req.keys()) {
      GridCacheEntryEx<K,V> entry=cctx.cache().peekEx(key);
      if (entry != null) {
        GridCacheEntryInfo<K,V> info=entry.info();
        if (info != null && !info.isNew())         res.addInfo(info);
      }
 else       if (log.isDebugEnabled())       log.debug("Key is not present in replicated cache: " + key);
    }
    if (log.isDebugEnabled())     log.debug("Sending force key response [node=" + nodeId + ", res="+ res+ ']');
    try {
      cctx.io().send(nodeId,res);
    }
 catch (    GridTopologyException ignore) {
      if (log.isDebugEnabled())       log.debug("Received force key request form failed node (will ignore) [nodeId=" + nodeId + ", req="+ req+ ']');
    }
catch (    GridException e) {
      U.error(log,"Failed to reply to force key request [nodeId=" + nodeId + ", req="+ req+ ']',e);
    }
  }
  finally {
    leaveBusy();
  }
}
