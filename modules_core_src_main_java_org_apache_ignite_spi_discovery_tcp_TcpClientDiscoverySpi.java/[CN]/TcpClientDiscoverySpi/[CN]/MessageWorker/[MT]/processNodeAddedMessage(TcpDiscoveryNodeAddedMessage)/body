{
  if (leaveLatch != null)   return;
  TcpDiscoveryNode node=msg.node();
  UUID newNodeId=node.id();
  if (getLocalNodeId().equals(newNodeId)) {
    if (joinLatch.getCount() > 0) {
      Collection<TcpDiscoveryNode> top=msg.topology();
      if (top != null) {
        for (        TcpDiscoveryNode n : top) {
          if (n.order() > 0)           n.visible(true);
          rmtNodes.put(n.id(),n);
        }
        topHist.clear();
        if (msg.topologyHistory() != null)         topHist.putAll(msg.topologyHistory());
        Map<UUID,Map<Integer,byte[]>> dataMap=msg.oldNodesDiscoveryData();
        if (dataMap != null) {
          for (          Map.Entry<UUID,Map<Integer,byte[]>> entry : dataMap.entrySet()) {
            exchange.onExchange(newNodeId,entry.getKey(),entry.getValue(),exchangeClassLoader(newNodeId));
          }
        }
        locNode.setAttributes(node.attributes());
        locNode.visible(true);
      }
 else       if (log.isDebugEnabled())       log.debug("Discarding node added message with empty topology: " + msg);
    }
 else     if (log.isDebugEnabled())     log.debug("Discarding node added message (this message has already been processed) " + "[msg=" + msg + ", locNode="+ locNode+ ']');
  }
 else {
    boolean topChanged=rmtNodes.putIfAbsent(newNodeId,node) == null;
    if (topChanged) {
      if (log.isDebugEnabled())       log.debug("Added new node to topology: " + node);
      Map<Integer,byte[]> data=msg.newNodeDiscoveryData();
      if (data != null)       exchange.onExchange(newNodeId,newNodeId,data,exchangeClassLoader(newNodeId));
    }
  }
}
