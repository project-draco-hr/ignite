{
  final Ignite ignite=G.ignite(getTestGridName());
  final long end=getTestDurationInMinutes() * 60 * 1000 + System.currentTimeMillis();
  ignite.compute().withTimeout(5000).execute(SingleSplitTestTask.class.getName(),3);
  info("Load test will be executed for '" + getTestDurationInMinutes() + "' mins.");
  info("Thread count: " + getThreadCount());
  final GridLoadTestStatistics stats=new GridLoadTestStatistics();
  GridTestUtils.runMultiThreaded(new Runnable(){
    /** 
 * {@inheritDoc} 
 */
    @Override public void run(){
      while (end - System.currentTimeMillis() > 0) {
        long start=System.currentTimeMillis();
        try {
          int levels=20;
          IgniteCompute comp=ignite.compute().withAsync();
          comp.execute(new SingleSplitTestTask(),levels);
          ComputeTaskFuture<Integer> fut=comp.future();
          int res=fut.get();
          if (res != levels)           fail("Received wrong result [expected=" + levels + ", actual="+ res+ ']');
          long taskCnt=stats.onTaskCompleted(fut,levels,System.currentTimeMillis() - start);
          if (taskCnt % 500 == 0)           info(stats.toString());
        }
 catch (        IgniteException e) {
          error("Failed to execute grid task.",e);
          fail();
        }
      }
    }
  }
,getThreadCount(),"grid-notaop-load-test");
  info("Final test statistics: " + stats);
}
