{
  final Configuration cfg=new Configuration();
  setupFileSytems(cfg);
  cfg.set(GridHadoopFileSystemsUtils.LOCAL_FS_WORKDIR_PROPERTY,new Path(new Path(uri),"user/" + System.getProperty("user.name")).toString());
  final CountDownLatch changeUserPhase=new CountDownLatch(THREAD_COUNT);
  final CountDownLatch changeDirPhase=new CountDownLatch(THREAD_COUNT);
  final CountDownLatch changeAbsDirPhase=new CountDownLatch(THREAD_COUNT);
  final CountDownLatch finishPhase=new CountDownLatch(THREAD_COUNT);
  final Path[] newUserInitWorkDir=new Path[THREAD_COUNT];
  final Path[] newWorkDir=new Path[THREAD_COUNT];
  final Path[] newAbsWorkDir=new Path[THREAD_COUNT];
  final Path[] newInstanceWorkDir=new Path[THREAD_COUNT];
  for (int i=0; i < THREAD_COUNT; i++) {
    final int threadNum=i;
    new Thread(){
      @Override public void run(){
        try {
          FileSystem fs=FileSystem.get(uri,cfg);
          GridHadoopFileSystemsUtils.setUser(fs,"user" + threadNum);
          if ("file".equals(uri.getScheme()))           FileSystem.get(uri,cfg).setWorkingDirectory(new Path("file:///user/user" + threadNum));
          changeUserPhase.countDown();
          changeUserPhase.await();
          newUserInitWorkDir[threadNum]=FileSystem.get(uri,cfg).getWorkingDirectory();
          FileSystem.get(uri,cfg).setWorkingDirectory(new Path("folder" + threadNum));
          changeDirPhase.countDown();
          changeDirPhase.await();
          newWorkDir[threadNum]=FileSystem.get(uri,cfg).getWorkingDirectory();
          FileSystem.get(uri,cfg).setWorkingDirectory(new Path("/folder" + threadNum));
          changeAbsDirPhase.countDown();
          changeAbsDirPhase.await();
          newAbsWorkDir[threadNum]=FileSystem.get(uri,cfg).getWorkingDirectory();
          newInstanceWorkDir[threadNum]=FileSystem.newInstance(uri,cfg).getWorkingDirectory();
          finishPhase.countDown();
        }
 catch (        InterruptedException|IOException e) {
          e.printStackTrace();
        }
      }
    }
.start();
  }
  finishPhase.await();
  for (int i=0; i < THREAD_COUNT; i++) {
    cfg.set(MRJobConfig.USER_NAME,"user" + i);
    Path workDir=new Path(new Path(uri),"user/user" + i);
    cfg.set(GridHadoopFileSystemsUtils.LOCAL_FS_WORKDIR_PROPERTY,workDir.toString());
    assertEquals(workDir,FileSystem.newInstance(uri,cfg).getWorkingDirectory());
    assertEquals(workDir,newUserInitWorkDir[i]);
    assertEquals(new Path(new Path(uri),"user/user" + i + "/folder"+ i),newWorkDir[i]);
    assertEquals(new Path("/folder" + i),newAbsWorkDir[i]);
    assertEquals(new Path(new Path(uri),"user/" + System.getProperty("user.name")),newInstanceWorkDir[i]);
  }
  System.out.println(System.getProperty("user.dir"));
}
