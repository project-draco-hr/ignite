{
  long topVer=updateReq.topologyVersion();
  Collection<GridNode> dhtNodes=cctx.dht().topology().nodes(entry.partition(),topVer);
  if (log.isDebugEnabled())   log.debug("Mapping entry to DHT nodes [nodes=" + U.nodeIds(dhtNodes) + ", entry="+ entry+ ']');
  GridCacheWriteSynchronizationMode syncMode=updateReq.writeSynchronizationMode();
  keys.add(entry.key());
  for (  GridNode node : dhtNodes) {
    UUID nodeId=node.id();
    if (!nodeId.equals(ctx.localNodeId())) {
      boolean supportsForceTransformBackup=node.version().compareTo(FORCE_TRANSFORM_BACKUP_SINCE) >= 0;
      GridDhtAtomicUpdateRequest<K,V> updateReq=mappings.get(nodeId);
      if (updateReq == null) {
        updateReq=new GridDhtAtomicUpdateRequest<>(cctx.cacheId(),nodeId,futVer,writeVer,syncMode,topVer,ttl,forceTransformBackups && supportsForceTransformBackup,this.updateReq.subjectId(),this.updateReq.taskNameHash());
        mappings.put(nodeId,updateReq);
      }
      updateReq.addWriteValue(entry.key(),entry.keyBytes(),val,valBytes,transformC,drTtl,drExpireTime,drVer);
    }
  }
}
