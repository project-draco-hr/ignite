{
  if (!busyLock.enterBusy()) {
    if (log.isDebugEnabled())     log.debug("Ignoring data load request (node is stopping): " + req);
    return;
  }
  try {
    if (log.isDebugEnabled())     log.debug("Processing data load request: " + req);
    Object topic;
    try {
      topic=marsh.unmarshal(req.responseTopicBytes(),null);
    }
 catch (    IgniteCheckedException e) {
      U.error(log,"Failed to unmarshal topic from request: " + req,e);
      return;
    }
    ClassLoader clsLdr;
    if (req.forceLocalDeployment())     clsLdr=U.gridClassLoader();
 else {
      GridDeployment dep=ctx.deploy().getGlobalDeployment(req.deploymentMode(),req.sampleClassName(),req.sampleClassName(),req.userVersion(),nodeId,req.classLoaderId(),req.participants(),null);
      if (dep == null) {
        sendResponse(nodeId,topic,req.requestId(),new IgniteCheckedException("Failed to get deployment for request [sndId=" + nodeId + ", req="+ req+ ']'),false);
        return;
      }
      clsLdr=dep.classLoader();
    }
    Collection<Map.Entry<K,V>> col;
    IgniteDataStreamer.Updater<K,V> updater;
    try {
      col=marsh.unmarshal(req.collectionBytes(),clsLdr);
      updater=marsh.unmarshal(req.updaterBytes(),clsLdr);
    }
 catch (    IgniteCheckedException e) {
      U.error(log,"Failed to unmarshal message [nodeId=" + nodeId + ", req="+ req+ ']',e);
      sendResponse(nodeId,topic,req.requestId(),e,false);
      return;
    }
    IgniteDataStreamerUpdateJob<K,V> job=new IgniteDataStreamerUpdateJob<>(ctx,log,req.cacheName(),col,req.ignoreDeploymentOwnership(),req.skipStore(),updater);
    Exception err=null;
    try {
      job.call();
    }
 catch (    Exception e) {
      U.error(log,"Failed to finish update job.",e);
      err=e;
    }
    sendResponse(nodeId,topic,req.requestId(),err,req.forceLocalDeployment());
  }
  finally {
    busyLock.leaveBusy();
  }
}
