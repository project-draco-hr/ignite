{
  VisorCacheConfiguration cfg=new VisorCacheConfiguration();
  cfg.name=ccfg.getName();
  cfg.mode=ccfg.getCacheMode();
  cfg.distributionMode=ccfg.getDistributionMode();
  cfg.atomicityMode=ccfg.getAtomicityMode();
  cfg.atomicWriteOrderMode=ccfg.getAtomicWriteOrderMode();
  cfg.eagerTtl=ccfg.isEagerTtl();
  cfg.writeSynchronizationMode=ccfg.getWriteSynchronizationMode();
  cfg.swapEnabled=ccfg.isSwapEnabled();
  cfg.qryIdxEnabled=ccfg.isQueryIndexEnabled();
  cfg.invalidate=ccfg.isInvalidate();
  cfg.startSize=ccfg.getStartSize();
  cfg.tmLookupClsName=ccfg.getTransactionManagerLookupClassName();
  cfg.offHeapMaxMemory=ccfg.getOffHeapMaxMemory();
  cfg.maxQryIterCnt=ccfg.getMaximumQueryIteratorCount();
  cfg.maxConcurrentAsyncOps=ccfg.getMaxConcurrentAsyncOperations();
  cfg.memoryMode=ccfg.getMemoryMode();
  cfg.interceptor=compactClass(ccfg.getInterceptor());
  cfg.valBytes=ccfg.isStoreValueBytes();
  cfg.typeMeta=VisorCacheTypeMetadata.list(ccfg.getTypeMetadata());
  cfg.statisticsEnabled=ccfg.isStatisticsEnabled();
  cfg.mgmtEnabled=ccfg.isManagementEnabled();
  cfg.ldrFactory=compactClass(ccfg.getCacheLoaderFactory());
  cfg.writerFactory=compactClass(ccfg.getCacheWriterFactory());
  cfg.expiryPlcFactory=compactClass(ccfg.getExpiryPolicyFactory());
  cfg.affinityCfg=VisorCacheAffinityConfiguration.from(ccfg);
  cfg.preloadCfg=VisorCachePreloadConfiguration.from(ccfg);
  cfg.evictCfg=VisorCacheEvictionConfiguration.from(ccfg);
  cfg.nearCfg=VisorCacheNearConfiguration.from(ccfg);
  cfg.dfltCfg=VisorCacheDefaultConfiguration.from(ccfg);
  cfg.storeCfg=VisorCacheStoreConfiguration.from(ignite,ccfg);
  cfg.qryCfg=VisorCacheQueryConfiguration.from(ccfg.getQueryConfiguration());
  return cfg;
}
