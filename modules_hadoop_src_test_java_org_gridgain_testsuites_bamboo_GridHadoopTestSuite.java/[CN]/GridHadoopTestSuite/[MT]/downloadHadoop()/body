{
  String hadoopHome=GridSystemProperties.getString("HADOOP_HOME");
  if (!F.isEmpty(hadoopHome) && new File(hadoopHome).isDirectory()) {
    X.println("HADOOP_HOME is set to: " + hadoopHome);
    return;
  }
  String ver=GridSystemProperties.getString("hadoop.version","2.4.1");
  X.println("Will use Hadoop version: " + ver);
  String path="hadoop-" + ver + "/hadoop-"+ ver+ ".tar.gz";
  List<String> urls=F.asList("http://apache-mirror.rbc.ru/pub/apache/hadoop/common/","http://www.eu.apache.org/dist/hadoop/common/","http://www.us.apache.org/dist/hadoop/common/");
  String tmpPath=System.getProperty("java.io.tmpdir");
  X.println("tmp: " + tmpPath);
  File install=new File(tmpPath + File.separatorChar + "__hadoop");
  File home=new File(install,"hadoop-" + ver);
  X.println("Setting HADOOP_HOME to " + home.getAbsolutePath());
  System.setProperty("HADOOP_HOME",home.getAbsolutePath());
  if (home.exists()) {
    X.println("Destination directory already exists.");
    return;
  }
  for (  String url : urls) {
    if (!install.mkdirs())     throw new IOException("Failed to create directory: " + install.getAbsolutePath());
    URL u=new URL(url + path);
    X.println("Attempting to download from: " + u);
    try {
      URLConnection c=u.openConnection();
      c.connect();
      try (TarArchiveInputStream in=new TarArchiveInputStream(new GzipCompressorInputStream(new BufferedInputStream(c.getInputStream(),32 * 1024)))){
        TarArchiveEntry entry;
        while ((entry=in.getNextTarEntry()) != null) {
          File dest=new File(install,entry.getName());
          if (entry.isDirectory()) {
            if (!dest.mkdirs())             throw new IllegalStateException();
          }
 else {
            X.print(" [" + dest);
            try (BufferedOutputStream out=new BufferedOutputStream(new FileOutputStream(dest,false),128 * 1024)){
              U.copy(in,out);
              out.flush();
            }
             X.println("]");
          }
        }
      }
       return;
    }
 catch (    Exception e) {
      e.printStackTrace();
      U.delete(install);
    }
  }
  throw new IllegalStateException("Failed to install Hadoop.");
}
