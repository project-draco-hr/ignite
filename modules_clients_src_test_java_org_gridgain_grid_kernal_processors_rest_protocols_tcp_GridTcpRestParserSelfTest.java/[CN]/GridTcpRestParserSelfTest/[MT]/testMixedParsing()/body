{
  GridNioSession ses1=new GridMockNioSession();
  GridNioSession ses2=new GridMockNioSession();
  GridTcpRestParser parser=new GridTcpRestParser(new GridClientOptimizedMarshaller());
  GridClientCacheRequest req=new GridClientCacheRequest(CAS);
  req.key("key");
  String val="value";
  req.value(val);
  req.value2(val);
  req.clientId(UUID.randomUUID());
  byte[] opaque=new byte[]{0x01,0x02,0x03,(byte)0xFF};
  String key="key";
  ByteBuffer raw1=rawPacket(MEMCACHE_REQ_FLAG,(byte)0x01,opaque,key.getBytes(),val.getBytes(),EXTRAS);
  ByteBuffer raw2=clientRequestPacket(req);
  raw1.mark();
  raw2.mark();
  int splits=Math.min(raw1.remaining(),raw2.remaining());
  for (int i=1; i < splits; i++) {
    ByteBuffer[] packet1=split(raw1,i);
    ByteBuffer[] packet2=split(raw2,i);
    GridClientMessage msg=parser.decode(ses1,packet1[0]);
    assertNull(msg);
    msg=parser.decode(ses2,packet2[0]);
    assertNull(msg);
    msg=parser.decode(ses1,packet1[1]);
    assertTrue(msg instanceof GridMemcachedMessage);
    assertEquals(key,((GridMemcachedMessage)msg).key());
    assertEquals(val,((GridMemcachedMessage)msg).value());
    msg=parser.decode(ses2,packet2[1]);
    assertTrue(msg instanceof GridClientCacheRequest);
    assertEquals(val,((GridClientCacheRequest)msg).value());
    assertEquals(val,((GridClientCacheRequest)msg).value2());
    raw1.reset();
    raw2.reset();
  }
}
