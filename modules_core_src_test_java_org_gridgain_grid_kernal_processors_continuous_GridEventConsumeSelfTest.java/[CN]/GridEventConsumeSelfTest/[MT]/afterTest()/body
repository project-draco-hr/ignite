{
  assertEquals(GRID_CNT,grid(0).nodes().size());
  for (int i=0; i < GRID_CNT; i++) {
    GridContinuousProcessor proc=((GridKernal)grid(i)).context().continuous();
    if (noAutoUnsubscribe) {
      U.<Map>field(proc,"locInfos").clear();
      U.<Map>field(proc,"rmtInfos").clear();
    }
    assertEquals(0,U.<Map>field(proc,"locInfos").size());
    assertEquals(0,U.<Map>field(proc,"rmtInfos").size());
    assertEquals(0,U.<Map>field(proc,"startFuts").size());
    assertEquals(0,U.<Map>field(proc,"waitForStartAck").size());
    assertEquals(0,U.<Map>field(proc,"stopFuts").size());
    assertEquals(0,U.<Map>field(proc,"waitForStopAck").size());
    assertEquals(0,U.<Map>field(proc,"pending").size());
  }
}
