{
  ctx.checkSecurity(SecurityPermission.CACHE_READ);
  if (F.isEmpty(keys))   return new GridFinishedFuture<>(Collections.<K,V>emptyMap());
  if (keyCheck)   validateCacheKeys(keys);
  IgniteTxLocalAdapter tx=ctx.tm().threadLocalTx(ctx);
  CacheOperationContext opCtx=ctx.operationContextPerCall();
  final boolean skipStore=opCtx != null && opCtx.skipStore();
  if (tx != null && !tx.implicit() && !skipTx) {
    return asyncOp(tx,new AsyncOp<Map<K,V>>(keys){
      @Override public IgniteInternalFuture<Map<K,V>> op(      IgniteTxLocalAdapter tx){
        return tx.getAllAsync(ctx,ctx.cacheKeysView(keys),deserializeBinary,skipVals,false,skipStore,needVer);
      }
    }
,opCtx);
  }
  subjId=ctx.subjectIdPerCall(subjId,opCtx);
  return loadAsync(null,ctx.cacheKeysView(keys),forcePrimary,subjId,taskName,deserializeBinary,skipVals ? null : opCtx != null ? opCtx.expiry() : null,skipVals,skipStore,canRemap,needVer);
}
