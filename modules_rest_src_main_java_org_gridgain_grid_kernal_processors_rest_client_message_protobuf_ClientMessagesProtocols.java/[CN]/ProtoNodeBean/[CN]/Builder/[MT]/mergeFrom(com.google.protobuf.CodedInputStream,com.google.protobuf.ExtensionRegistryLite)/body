{
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
  while (true) {
    int tag=input.readTag();
switch (tag) {
case 0:
      this.setUnknownFields(unknownFields.build());
    onChanged();
  return this;
default :
{
  if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
    this.setUnknownFields(unknownFields.build());
    onChanged();
    return this;
  }
  break;
}
case 10:
{
bitField0_|=0x00000001;
nodeId_=input.readBytes();
break;
}
case 18:
{
ensureTcpAddressIsMutable();
tcpAddress_.add(input.readBytes());
break;
}
case 26:
{
ensureJettyAddressIsMutable();
jettyAddress_.add(input.readBytes());
break;
}
case 32:
{
bitField0_|=0x00000008;
tcpPort_=input.readInt32();
break;
}
case 40:
{
bitField0_|=0x00000010;
jettyPort_=input.readInt32();
break;
}
case 50:
{
org.gridgain.grid.kernal.processors.rest.client.message.protobuf.ClientMessagesProtocols.ProtoNodeMetricsBean.Builder subBuilder=org.gridgain.grid.kernal.processors.rest.client.message.protobuf.ClientMessagesProtocols.ProtoNodeMetricsBean.newBuilder();
if (hasMetrics()) {
subBuilder.mergeFrom(getMetrics());
}
input.readMessage(subBuilder,extensionRegistry);
setMetrics(subBuilder.buildPartial());
break;
}
case 58:
{
org.gridgain.grid.kernal.processors.rest.client.message.protobuf.ClientMessagesProtocols.Map.Builder subBuilder=org.gridgain.grid.kernal.processors.rest.client.message.protobuf.ClientMessagesProtocols.Map.newBuilder();
if (hasAttributes()) {
subBuilder.mergeFrom(getAttributes());
}
input.readMessage(subBuilder,extensionRegistry);
setAttributes(subBuilder.buildPartial());
break;
}
case 74:
{
org.gridgain.grid.kernal.processors.rest.client.message.protobuf.ClientMessagesProtocols.Map.Builder subBuilder=org.gridgain.grid.kernal.processors.rest.client.message.protobuf.ClientMessagesProtocols.Map.newBuilder();
if (hasCaches()) {
subBuilder.mergeFrom(getCaches());
}
input.readMessage(subBuilder,extensionRegistry);
setCaches(subBuilder.buildPartial());
break;
}
case 82:
{
ensureTcpHostNameIsMutable();
tcpHostName_.add(input.readBytes());
break;
}
case 90:
{
ensureJettyHostNameIsMutable();
jettyHostName_.add(input.readBytes());
break;
}
case 104:
{
bitField0_|=0x00000400;
replicaCount_=input.readInt32();
break;
}
case 114:
{
org.gridgain.grid.kernal.processors.rest.client.message.protobuf.ClientMessagesProtocols.ObjectWrapper.Builder subBuilder=org.gridgain.grid.kernal.processors.rest.client.message.protobuf.ClientMessagesProtocols.ObjectWrapper.newBuilder();
if (hasConsistentId()) {
subBuilder.mergeFrom(getConsistentId());
}
input.readMessage(subBuilder,extensionRegistry);
setConsistentId(subBuilder.buildPartial());
break;
}
}
}
}
