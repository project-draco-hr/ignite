{
  CacheMetrics[] ms=new CacheMetrics[GRID_CNT];
  for (int i=0; i < GRID_CNT; i++) {
    CacheMetrics metrics=cache.metrics(grid(i).cluster().forCacheNodes(cache.getName()));
    for (int j=0; j < GRID_CNT; j++)     ms[j]=grid(j).cache(cache.getName()).metrics();
    for (int j=0; j < GRID_CNT; j++)     assertEquals(metrics.name(),ms[j].name());
    assertEquals(metrics.getCacheGets(),sum(ms,new IgniteClosure<CacheMetrics,Long>(){
      @Override public Long apply(      CacheMetrics input){
        return input.getCacheGets();
      }
    }
));
    assertEquals(metrics.getCachePuts(),sum(ms,new IgniteClosure<CacheMetrics,Long>(){
      @Override public Long apply(      CacheMetrics input){
        return input.getCachePuts();
      }
    }
));
    assertEquals(metrics.getCacheHits(),sum(ms,new IgniteClosure<CacheMetrics,Long>(){
      @Override public Long apply(      CacheMetrics input){
        return input.getCacheHits();
      }
    }
));
  }
}
