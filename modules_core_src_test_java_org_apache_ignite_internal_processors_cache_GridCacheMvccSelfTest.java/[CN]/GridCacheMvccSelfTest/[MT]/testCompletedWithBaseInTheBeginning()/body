{
  GridCacheAdapter<String,String> cache=grid.internalCache();
  GridCacheTestEntryEx entry=new GridCacheTestEntryEx(cache.context(),"1");
  UUID node1=UUID.randomUUID();
  UUID node2=UUID.randomUUID();
  GridCacheVersion ver1=version(1);
  GridCacheVersion ver2=version(2);
  GridCacheVersion ver3=version(3);
  GridCacheVersion ver4=version(4);
  GridCacheVersion ver5=version(5);
  GridCacheVersion ver6=version(6);
  GridCacheVersion ver7=version(7);
  entry.addRemote(node1,1,ver1,0,false,false);
  entry.addRemote(node2,2,ver2,0,false,false);
  entry.addRemote(node1,3,ver3,0,false,false);
  entry.addRemote(node2,4,ver4,0,false,false);
  entry.addRemote(node1,5,ver5,0,false,false);
  entry.addRemote(node2,6,ver6,0,false,false);
  entry.addRemote(node2,7,ver7,0,false,false);
  List<GridCacheVersion> committed=Arrays.asList(ver4,ver6,ver3);
  entry.orderCompleted(ver1,committed,Collections.<GridCacheVersion>emptyList());
  checkOrder(entry.remoteMvccSnapshot(),ver3,ver4,ver6,ver1,ver2,ver5,ver7);
  checkRemote(entry.candidate(ver1),ver1,false,false);
  checkRemote(entry.candidate(ver2),ver2,false,false);
  checkRemote(entry.candidate(ver3),ver3,true,false);
  checkRemote(entry.candidate(ver4),ver4,true,false);
  checkRemote(entry.candidate(ver5),ver5,false,false);
  checkRemote(entry.candidate(ver6),ver6,true,false);
  checkRemote(entry.candidate(ver7),ver7,false,false);
}
