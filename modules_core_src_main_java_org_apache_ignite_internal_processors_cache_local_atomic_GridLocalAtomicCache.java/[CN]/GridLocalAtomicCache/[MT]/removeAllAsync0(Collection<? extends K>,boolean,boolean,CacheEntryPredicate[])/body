{
  final boolean writeThrough=ctx.writeThrough();
  final boolean readThrough=ctx.readThrough();
  final boolean statsEnabled=ctx.config().isStatisticsEnabled();
  final long start=statsEnabled ? System.nanoTime() : 0L;
  final ExpiryPolicy expiryPlc=expiryPerCall();
  CacheOperationContext opCtx=ctx.operationContextPerCall();
  final boolean keepPortable=opCtx != null && opCtx.isKeepBinary();
  IgniteInternalFuture fut=asyncOp(new Callable<Object>(){
    @Override public Object call() throws Exception {
      return updateAllInternal(DELETE,keys,null,null,expiryPlc,retval,rawRetval,filter,writeThrough,readThrough,keepPortable);
    }
  }
);
  if (statsEnabled)   fut.listen(new UpdateRemoveTimeStatClosure<>(metrics0(),start));
  return fut;
}
