{
  if (putBefore) {
    idxSpi.forceFail(false);
    info("Put key: " + key);
    grid(0).cache(null).put(key,1);
  }
  for (int i=0; i < gridCount(); i++)   grid(i).cache(null).get(key);
  idxSpi.forceFail(true);
  info("Going to transform: " + key);
  Throwable e=GridTestUtils.assertThrows(log,new Callable<Void>(){
    @Override public Void call() throws Exception {
      grid(0).<Integer,Integer>jcache(null).invoke(key,new EntryProcessor<Integer,Integer,Void>(){
        @Override public Void process(        MutableEntry<Integer,Integer> e,        Object... args){
          e.setValue(2);
          return null;
        }
      }
);
      return null;
    }
  }
,CacheException.class,null);
  assertTrue("Unexpected cause: " + e,e.getCause() instanceof IgniteTxHeuristicCheckedException);
  checkEmpty(key);
}
