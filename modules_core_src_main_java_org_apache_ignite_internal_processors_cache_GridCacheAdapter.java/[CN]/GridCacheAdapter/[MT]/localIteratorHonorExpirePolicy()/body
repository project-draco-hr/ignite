{
  return F.iterator(iterator(),new IgniteClosure<Cache.Entry<K,V>,Cache.Entry<K,V>>(){
    private IgniteCacheExpiryPolicy expiryPlc=ctx.cache().expiryPolicy(ctx.expiry());
    @Override public Cache.Entry<K,V> apply(    Cache.Entry<K,V> lazyEntry){
      try {
        V val=localPeek(lazyEntry.getKey(),CachePeekModes.ONHEAP_ONLY,expiryPlc);
        return new CacheEntryImpl<>(lazyEntry.getKey(),val);
      }
 catch (      IgniteCheckedException e) {
        throw CU.convertToCacheException(e);
      }
    }
  }
,false);
}
