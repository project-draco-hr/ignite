{
  A.notNull(key,"key");
  boolean statsEnabled=ctx.config().isStatisticsEnabled();
  long start=statsEnabled ? System.nanoTime() : 0L;
  boolean keepBinary=ctx.keepBinary();
  if (keepBinary)   key=(K)ctx.toCacheKeyObject(key);
  T2<V,GridCacheVersion> t=(T2<V,GridCacheVersion>)get(key,!keepBinary,true);
  CacheEntry<K,V> val=t != null ? new CacheEntryImplEx<>(keepBinary ? (K)ctx.unwrapBinaryIfNeeded(key,true,false) : key,t.get1(),t.get2()) : null;
  if (ctx.config().getInterceptor() != null) {
    key=keepBinary ? (K)ctx.unwrapBinaryIfNeeded(key,true,false) : key;
    V val0=(V)ctx.config().getInterceptor().onGet(key,t != null ? val.getValue() : null);
    val=(val0 != null) ? new CacheEntryImplEx<>(key,val0,t != null ? t.get2() : null) : null;
  }
  if (statsEnabled)   metrics0().addGetTimeNanos(System.nanoTime() - start);
  return val;
}
