{
  CacheObject val=entry.innerGet(null,false,false,false,true,false,false,false,null,null,null,null,!deserializePortable);
  if (val == null)   return null;
  KeyCacheObject key=entry.key();
  Object key0=key.value(ctx.cacheObjectContext(),true);
  Object val0=val.value(ctx.cacheObjectContext(),true);
  if (deserializePortable) {
    key0=ctx.unwrapPortableIfNeeded(key0,true);
    val0=ctx.unwrapPortableIfNeeded(val0,true);
  }
  return new CacheEntryImpl<>((K)key0,(V)val0,entry.version());
}
