{
  Collection<ClusterNode> nodes=ctx.grid().cluster().forCacheNodes(name(),true,true,false).nodes();
  if (!nodes.isEmpty()) {
    IgniteInternalFuture<Object> fut=ctx.closures().callAsyncNoFailover(BROADCAST,clearCall,nodes,true);
    return fut.chain(new CX1<IgniteInternalFuture<Object>,Object>(){
      @Override public Object applyx(      IgniteInternalFuture<Object> fut) throws IgniteCheckedException {
        try {
          return fut.get();
        }
 catch (        ClusterGroupEmptyCheckedException ignore) {
          if (log.isDebugEnabled())           log.debug("All remote nodes left while cache clearLocally [cacheName=" + name() + "]");
          return null;
        }
      }
    }
);
  }
 else   return new GridFinishedFuture<>();
}
