{
  A.notNull(keys,"keys");
  for (  Object key : keys)   A.notNull(key,"key");
  if (!ctx.store().configured())   return new GridFinishedFuture<>();
  CacheOperationContext opCtx=ctx.operationContextPerCall();
  ExpiryPolicy plc=opCtx != null ? opCtx.expiry() : null;
  final boolean keepBinary=opCtx != null && opCtx.isKeepBinary();
  if (replaceExisting) {
    if (ctx.store().isLocal())     return runLoadKeysCallable(keys,plc,keepBinary,true);
 else {
      return ctx.closures().callLocalSafe(new Callable<Void>(){
        @Override public Void call() throws Exception {
          localLoadAndUpdate(keys);
          return null;
        }
      }
);
    }
  }
 else   return runLoadKeysCallable(keys,plc,keepBinary,false);
}
