{
  A.notNull(key,"key");
  if (keyCheck)   validateCacheKey(key);
  ctx.checkSecurity(GridSecurityPermission.CACHE_READ);
  GridCacheEntryEx e=null;
  try {
    KeyCacheObject cacheKey=ctx.toCacheKeyObject(key);
    e=peekEx(cacheKey);
    if (e != null) {
      GridTuple<CacheObject> peek=e.peek0(failFast,mode,filter,ctx.tm().localTxx());
      if (peek != null) {
        CacheObject v=peek.get();
        if (ctx.portableEnabled())         v=(V)ctx.unwrapPortableIfNeeded(v,ctx.keepPortable());
        return F.t(ctx.cloneOnFlag(v));
      }
    }
    IgniteInternalTx tx=ctx.tm().localTx();
    if (tx != null) {
      GridTuple<CacheObject> peek=tx.peek(ctx,failFast,cacheKey,filter);
      if (peek != null) {
        CacheObject v=peek.get();
        if (ctx.portableEnabled())         v=(V)ctx.unwrapPortableIfNeeded(v,ctx.keepPortable());
        return F.t(ctx.cloneOnFlag(v));
      }
    }
    return null;
  }
 catch (  GridCacheEntryRemovedException ignore) {
    if (log.isDebugEnabled())     log.debug("Got removed entry during 'peek': " + e);
    return null;
  }
catch (  IgniteCheckedException ex) {
    throw new IgniteException(ex);
  }
}
