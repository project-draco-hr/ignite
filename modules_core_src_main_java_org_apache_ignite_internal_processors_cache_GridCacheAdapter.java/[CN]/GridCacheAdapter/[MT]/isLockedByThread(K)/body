{
  A.notNull(key,"key");
  if (keyCheck)   validateCacheKey(key);
  try {
    KeyCacheObject cacheKey=ctx.toCacheKeyObject(key);
    GridCacheEntryEx e=entry0(cacheKey,ctx.discovery().topologyVersionEx(),false,false);
    if (e == null)     return false;
    if (e.isDht() && CU.isNearEnabled(ctx)) {
      IgniteInternalCache<K,V> near=ctx.isDht() ? ctx.dht().near() : ctx.near();
      return near.isLockedByThread(key) || e.lockedByThread();
    }
    return e.lockedByThread();
  }
 catch (  GridCacheEntryRemovedException ignore) {
    return false;
  }
}
