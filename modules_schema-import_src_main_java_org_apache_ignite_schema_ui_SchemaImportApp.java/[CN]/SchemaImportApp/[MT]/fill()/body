{
  lockUI(connLayerPnl,connPnl,nextBtn);
  final String jdbcDrvJarPath=jdbcDrvJarTf.getText().trim();
  final String jdbcDrvCls=jdbcDrvClsTf.getText();
  final String jdbcUrl=jdbcUrlTf.getText();
  String user=userTf.getText().trim();
  String pwd=pwdTf.getText().trim();
  final Properties jdbcInfo=new Properties();
  if (!user.isEmpty())   jdbcInfo.put("user",user);
  if (!pwd.isEmpty())   jdbcInfo.put("password",pwd);
  final boolean tblsOnly=parseCb.getSelectionModel().getSelectedIndex() == 0;
  Runnable task=new Task<Void>(){
    /** 
 * {@inheritDoc} 
 */
    @Override protected Void call() throws Exception {
      long started=System.currentTimeMillis();
      try (Connection conn=connect(jdbcDrvJarPath,jdbcDrvCls,jdbcUrl,jdbcInfo)){
        pojos=DatabaseMetadataParser.parse(conn,tblsOnly);
      }
       perceptualDelay(started);
      return null;
    }
    /** 
 * {@inheritDoc} 
 */
    @Override protected void succeeded(){
      super.succeeded();
      pojosTbl.setItems(pojos);
      if (!pojos.isEmpty())       pojosTbl.getSelectionModel().clearAndSelect(0);
      curTbl=pojosTbl;
      pojosTbl.requestFocus();
      unlockUI(connLayerPnl,connPnl,nextBtn);
      hdrPane.setLeft(genIcon);
      titleLb.setText("Generate XML And POJOs");
      subTitleLb.setText(jdbcUrlTf.getText());
      rootPane.setCenter(genLayerPnl);
      prevBtn.setDisable(false);
      nextBtn.setText("Generate");
      tooltip(nextBtn,"Generate XML and POJO files");
    }
    /** 
 * {@inheritDoc} 
 */
    @Override protected void cancelled(){
      super.cancelled();
      unlockUI(connLayerPnl,connPnl,nextBtn);
    }
    /** 
 * {@inheritDoc} 
 */
    @Override protected void failed(){
      super.succeeded();
      unlockUI(connLayerPnl,connPnl,nextBtn);
      MessageBox.errorDialog(owner,"Failed to get tables list from database.",getException());
    }
  }
;
  exec.submit(task);
}
