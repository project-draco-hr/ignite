{
  final List<String> selSchemas=new ArrayList<>();
  for (  SchemaDescriptor schema : schemas)   if (schema.selected().getValue())   selSchemas.add(schema.schema());
  if (selSchemas.size() == 0)   if (!MessageBox.confirmDialog(owner,"No schemas selected.\nExtract tables for all available schemas?"))   return;
  lockUI(connLayerPnl,connPnl,nextBtn);
  final String jdbcUrl=jdbcUrlTf.getText();
  final boolean tblsOnly=parseCb.getSelectionModel().getSelectedIndex() == 0;
  Runnable task=new Task<Void>(){
    /** 
 * {@inheritDoc} 
 */
    @Override protected Void call() throws Exception {
      long started=System.currentTimeMillis();
      try (Connection conn=connect()){
        pojos=DatabaseMetadataParser.parse(conn,selSchemas,tblsOnly);
      }
       perceptualDelay(started);
      return null;
    }
    /** 
 * {@inheritDoc} 
 */
    @Override protected void succeeded(){
      try {
        super.succeeded();
        pojosTbl.setItems(pojos);
        if (pojos.isEmpty()) {
          MessageBox.warningDialog(owner,"No tables found in database. Recheck JDBC URL.\n" + "JDBC URL: " + jdbcUrl);
          return;
        }
 else         pojosTbl.getSelectionModel().clearAndSelect(0);
        curTbl=pojosTbl;
        pojosTbl.requestFocus();
        hdrPane.setLeft(genIcon);
        titleLb.setText("Generate XML And POJOs");
        subTitleLb.setText(jdbcUrlTf.getText());
        rootPane.setCenter(genLayerPnl);
        prevBtn.setDisable(false);
        nextBtn.setText("Generate");
        tooltip(nextBtn,"Generate XML and POJO files");
      }
  finally {
        unlockUI(connLayerPnl,connPnl,nextBtn);
      }
    }
    /** 
 * {@inheritDoc} 
 */
    @Override protected void cancelled(){
      super.cancelled();
      unlockUI(connLayerPnl,connPnl,nextBtn);
    }
    /** 
 * {@inheritDoc} 
 */
    @Override protected void failed(){
      super.succeeded();
      unlockUI(connLayerPnl,connPnl,nextBtn);
      MessageBox.errorDialog(owner,"Failed to get tables list from database.",getException());
    }
  }
;
  exec.submit(task);
}
