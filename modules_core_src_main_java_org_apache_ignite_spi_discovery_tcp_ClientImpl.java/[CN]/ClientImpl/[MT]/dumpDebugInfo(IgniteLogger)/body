{
  StringBuilder b=new StringBuilder(U.nl());
  b.append(">>>").append(U.nl());
  b.append(">>>").append("Dumping discovery SPI debug info.").append(U.nl());
  b.append(">>>").append(U.nl());
  b.append("Local node ID: ").append(getLocalNodeId()).append(U.nl()).append(U.nl());
  b.append("Local node: ").append(locNode).append(U.nl()).append(U.nl());
  b.append("Internal threads: ").append(U.nl());
  b.append("    Message worker: ").append(threadStatus(msgWorker)).append(U.nl());
  b.append("    Socket reader: ").append(threadStatus(sockReader)).append(U.nl());
  b.append("    Socket writer: ").append(threadStatus(sockWriter)).append(U.nl());
  b.append("    Socket timeout worker: ").append(threadStatus(adapter.sockTimeoutWorker)).append(U.nl());
  b.append(U.nl());
  b.append("Nodes: ").append(U.nl());
  for (  ClusterNode node : allVisibleNodes())   b.append("    ").append(node.id()).append(U.nl());
  b.append(U.nl());
  b.append("Stats: ").append(adapter.stats).append(U.nl());
  U.quietAndInfo(log,b.toString());
}
