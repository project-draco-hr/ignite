{
  Ignite client=grid(2);
  try {
    CacheConfiguration ccfg1=cacheConfiguration(PERSON_CACHE).setQueryEntities(F.asList(personEntity(true,false)));
    IgniteCache<Object,Object> pCache=client.createCache(ccfg1);
    ClusterNode node0=ignite(0).cluster().localNode();
    ClusterNode node1=ignite(1).cluster().localNode();
    Affinity<Object> aff=client.affinity(PERSON_CACHE);
    AtomicInteger pKey=new AtomicInteger();
    Integer pId0=keyForNode(aff,pKey,node0);
    pCache.put(pId0,new Person(0,"p0"));
    for (int i=0; i < 3; i++) {
      Integer pId=keyForNode(aff,pKey,node1);
      pCache.put(pId,new Person(0,"p"));
    }
    checkQuery("select p1._key, p1.name, p2._key, p2.name " + "from Person p1, Person p2 " + "where p2._key > p1._key",pCache,6);
    checkQuery("select p1._key, p1.name, p2._key, p2.name " + "from Person p1, Person p2 " + "where p2._key > p1._key and p1._key="+ pId0,pCache,3);
    checkQuery("select p1._key, p1.name, p2._key, p2.name " + "from Person p1, Person p2 " + "where p2._key > p1._key and p1.name='p0'",pCache,3);
    checkQuery("select p1._key, p1.name, p2._key, p2.name " + "from Person p1, Person p2 " + "where p1.name > p2.name",pCache,3);
  }
  finally {
    client.destroyCache(PERSON_CACHE);
    client.destroyCache(ORG_CACHE);
  }
}
