{
  IgniteConfiguration cfg=new IgniteConfiguration();
  cfg.setGridName(gridName);
  cfg.setGridLogger(rsrcs.getLogger());
  cfg.setMarshaller(rsrcs.getMarshaller());
  cfg.setNodeId(rsrcs.getNodeId());
  cfg.setIgniteHome(rsrcs.getIgniteHome());
  cfg.setMBeanServer(rsrcs.getMBeanServer());
  cfg.setPeerClassLoadingEnabled(true);
  cfg.setMetricsLogFrequency(0);
  cfg.setConnectorConfiguration(null);
  TcpCommunicationSpi commSpi=new TcpCommunicationSpi();
  commSpi.setLocalPort(GridTestUtils.getNextCommPort(getClass()));
  commSpi.setTcpNoDelay(true);
  cfg.setCommunicationSpi(commSpi);
  TcpDiscoverySpi discoSpi=new TestTcpDiscoverySpi();
  if (isDebug()) {
    discoSpi.setMaxMissedHeartbeats(Integer.MAX_VALUE);
    cfg.setNetworkTimeout(Long.MAX_VALUE / 3);
  }
 else {
    cfg.setNetworkTimeout(10000);
    discoSpi.setMaxMissedHeartbeats(30);
  }
  discoSpi.setHeartbeatFrequency(1000);
  String mcastAddr=GridTestUtils.getNextMulticastGroup(getClass());
  if (!F.isEmpty(mcastAddr)) {
    TcpDiscoveryMulticastIpFinder ipFinder=new TcpDiscoveryMulticastIpFinder();
    ipFinder.setMulticastGroup(mcastAddr);
    ipFinder.setMulticastPort(GridTestUtils.getNextMulticastPort(getClass()));
    discoSpi.setIpFinder(ipFinder);
  }
  cfg.setDiscoverySpi(discoSpi);
  SharedFsCheckpointSpi cpSpi=new SharedFsCheckpointSpi();
  Collection<String> paths=new ArrayList<>();
  paths.add(getDefaultCheckpointPath(cfg.getMarshaller()));
  cpSpi.setDirectoryPaths(paths);
  cfg.setCheckpointSpi(cpSpi);
  cfg.setIncludeEventTypes(EventType.EVTS_ALL);
  return cfg;
}
