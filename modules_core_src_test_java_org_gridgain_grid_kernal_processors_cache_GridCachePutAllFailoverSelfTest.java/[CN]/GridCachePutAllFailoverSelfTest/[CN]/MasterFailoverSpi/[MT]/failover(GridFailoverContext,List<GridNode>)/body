{
  failedOverJobs.add(ctx.getJobResult().getJobContext());
  ctx.getJobResult().getJobContext().setAttribute(FAILED_NODE_LIST_ATTR,null);
  Integer failoverCnt=ctx.getJobResult().getJobContext().getAttribute(FAILOVER_NUMBER_ATTR);
  if (failoverCnt == null)   ctx.getJobResult().getJobContext().setAttribute(FAILOVER_NUMBER_ATTR,1);
 else {
    if (failoverCnt >= getMaximumFailoverAttempts()) {
      U.warn(log,"Job failover failed because number of maximum failover attempts is exceeded " + "[failedJob=" + ctx.getJobResult().getJob() + ", maxFailoverAttempts="+ getMaximumFailoverAttempts()+ ']');
      return null;
    }
    ctx.getJobResult().getJobContext().setAttribute(FAILOVER_NUMBER_ATTR,failoverCnt + 1);
  }
  List<GridNode> cp=new ArrayList<>(top);
  F.retain(cp,false,new GridPredicate<GridNode>(){
    @Override public boolean apply(    GridNode node){
      return F.isAll(node,filter);
    }
  }
);
  return super.failover(ctx,cp);
}
