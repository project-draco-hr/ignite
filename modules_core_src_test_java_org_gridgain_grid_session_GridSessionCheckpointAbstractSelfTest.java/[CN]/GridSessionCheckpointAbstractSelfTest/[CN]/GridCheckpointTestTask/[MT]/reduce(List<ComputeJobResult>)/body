{
  int res=0;
  for (  ComputeJobResult result : results) {
    res+=(Integer)result.getData();
  }
  for (int i=0; i < SPLIT_COUNT; i++) {
    ses.saveCheckpoint("reduce:session:key:" + i,"reduce:session:testval:" + i);
    ses.saveCheckpoint("reduce:global:key:" + i,"reduce:global:testval:" + i,ComputeTaskSessionScope.GLOBAL_SCOPE,0);
  }
  try {
    Thread.sleep(200);
  }
 catch (  InterruptedException e) {
    throw new IgniteCheckedException("Got interrupted during reducing.",e);
  }
  try {
    for (int i=0; i < SPLIT_COUNT; i++) {
      checkRunningState("map:session:key:" + i,"map:session:testval:" + i,"map:global:key:" + i,"map:global:testval:" + i,marshaller,getClass().getClassLoader());
      checkRunningState("reduce:session:key:" + i,"reduce:session:testval:" + i,"reduce:global:key:" + i,"reduce:global:testval:" + i,marshaller,getClass().getClassLoader());
      checkRunningState("job:session:key:" + i,"job:session:testval:" + i,"job:global:key:" + i,"job:global:testval:" + i,marshaller,getClass().getClassLoader());
    }
  }
 catch (  Exception e) {
    throw new IgniteCheckedException("Running state check failure.",e);
  }
  return res;
}
