{
  try {
    testAttribute=false;
    startGrid(nodeCount());
    final IgniteEx kernal=grid(0);
    CacheConfiguration ccfg=new CacheConfiguration();
    ccfg.setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC);
    ccfg.setName(DYNAMIC_CACHE_NAME);
    ccfg.setNodeFilter(NODE_FILTER);
    kernal.createCache(ccfg);
    GridTestUtils.assertThrows(log,new Callable<Object>(){
      @Override public Object call() throws Exception {
        IgniteKernal ignite=(IgniteKernal)grid(nodeCount());
        return ignite.getCache(DYNAMIC_CACHE_NAME);
      }
    }
,IllegalArgumentException.class,null);
    IgniteCache<Object,Object> clientCache=ignite(nodeCount()).jcache(DYNAMIC_CACHE_NAME);
    clientCache.put("1","1");
    for (int g=0; g < nodeCount() + 1; g++)     assertEquals("1",ignite(g).jcache(DYNAMIC_CACHE_NAME).get("1"));
    kernal.context().cache().dynamicStopCache(DYNAMIC_CACHE_NAME).get();
  }
  finally {
    stopGrid(nodeCount());
  }
}
