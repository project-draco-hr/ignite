{
  final Collection<IgniteInternalFuture<?>> futs=new ConcurrentLinkedDeque<>();
  final IgniteKernal kernal=(IgniteKernal)grid(0);
  int threadNum=20;
  GridTestUtils.runMultiThreaded(new Callable<Object>(){
    @Override public Object call() throws Exception {
      CacheConfiguration ccfg=new CacheConfiguration();
      ccfg.setName("TestCacheName");
      futs.add(kernal.context().cache().startCache(ccfg,F.<ClusterNode>alwaysTrue()));
      return null;
    }
  }
,threadNum,"cache-starter");
  assertEquals(threadNum,futs.size());
  int succeeded=0;
  int failed=0;
  for (  IgniteInternalFuture<?> fut : futs) {
    try {
      fut.get();
      succeeded++;
    }
 catch (    IgniteCheckedException e) {
      info(e.getMessage());
      failed++;
    }
  }
  assertEquals(1,succeeded);
  assertEquals(threadNum - 1,failed);
}
