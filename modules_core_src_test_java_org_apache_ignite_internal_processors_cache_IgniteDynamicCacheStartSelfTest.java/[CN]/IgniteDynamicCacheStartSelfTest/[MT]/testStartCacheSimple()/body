{
  final IgniteKernal kernal=(IgniteKernal)grid(0);
  CacheConfiguration ccfg=new CacheConfiguration();
  ccfg.setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC);
  String cacheName="TestCacheName3";
  ccfg.setName(cacheName);
  kernal.context().cache().dynamicStartCache(ccfg,F.<ClusterNode>alwaysTrue()).get();
  for (int g=0; g < nodeCount(); g++) {
    IgniteKernal kernal0=(IgniteKernal)grid(g);
    for (    IgniteInternalFuture f : kernal0.context().cache().context().exchange().exchangeFutures())     f.get();
    assertNotNull(grid(g).jcache(cacheName));
  }
  grid(0).jcache(cacheName).put("1","1");
  for (int g=0; g < nodeCount(); g++)   assertEquals("1",grid(g).jcache(cacheName).get("1"));
}
