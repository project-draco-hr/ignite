{
  IgniteLogger log=ignite.log();
  log.info("Waiting for finishing of a partition exchange on node: " + ignite);
  IgniteKernal kernal=(IgniteKernal)ignite;
  while (true) {
    boolean partitionsExchangeFinished=true;
    for (    IgniteInternalCache<?,?> cache : kernal.cachesx(null)) {
      log.info("Checking cache: " + cache.name());
      GridCacheAdapter<?,?> c=kernal.internalCache(cache.name());
      if (!(c instanceof GridDhtCacheAdapter))       break;
      GridDhtCacheAdapter<?,?> dht=(GridDhtCacheAdapter<?,?>)c;
      GridDhtPartitionFullMap partMap=dht.topology().partitionMap(true);
      for (      Map.Entry<UUID,GridDhtPartitionMap> e : partMap.entrySet()) {
        log.info("Checking node: " + e.getKey());
        for (        Map.Entry<Integer,GridDhtPartitionState> e1 : e.getValue().entrySet()) {
          if (e1.getValue() != GridDhtPartitionState.OWNING) {
            log.info("Undesired state [id=" + e1.getKey() + ", state="+ e1.getValue()+ ']');
            partitionsExchangeFinished=false;
            break;
          }
        }
        if (!partitionsExchangeFinished)         break;
      }
      if (!partitionsExchangeFinished)       break;
    }
    if (partitionsExchangeFinished)     return;
    Thread.sleep(100);
  }
}
