{
  final Collection<Integer> keys=new LinkedList<>();
  for (int j=0; j < QUEUE_CAPACITY; j++) {
    for (int i=0; i < QUEUE_CAPACITY; i++) {
      int key=cntr.getAndIncrement();
      keys.add(key);
      grid().cache(null).put(key,"123");
    }
    multithreaded(new Callable<String>(){
      @Override public String call() throws Exception {
        info("Removing all keys: " + keys);
        grid().cache(null).removeAll(keys);
        info("Thread finished for keys: " + keys);
        return "";
      }
    }
,THREAD_NUM);
  }
}
