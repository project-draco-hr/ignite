{
  Collection<String> cols=F.concat(false,keyCols,uniqCols);
  String colsLst=mkString(cols,", ");
  String selCols=mkString(cols,new C1<String,String>(){
    @Override public String apply(    String col){
      return String.format("? AS %s",col);
    }
  }
,"",", ","");
  String match=mkString(keyCols,new C1<String,String>(){
    @Override public String apply(    String col){
      return String.format("t.%s=v.%s",col,col);
    }
  }
,"("," AND ",")");
  String setCols=mkString(uniqCols,new C1<String,String>(){
    @Override public String apply(    String col){
      return String.format("t.%s = v.%s",col,col);
    }
  }
,"",", ","");
  String valuesCols=mkString(cols,new C1<String,String>(){
    @Override public String apply(    String col){
      return "v." + col;
    }
  }
,"",", ","");
  return String.format("MERGE INTO %s.%s t" + " USING (SELECT %s FROM dual) v" + "  ON %s"+ " WHEN MATCHED THEN"+ "  UPDATE SET %s"+ " WHEN NOT MATCHED THEN"+ "  INSERT (%s) VALUES (%s)",schema,tblName,selCols,match,setCols,colsLst,valuesCols);
}
