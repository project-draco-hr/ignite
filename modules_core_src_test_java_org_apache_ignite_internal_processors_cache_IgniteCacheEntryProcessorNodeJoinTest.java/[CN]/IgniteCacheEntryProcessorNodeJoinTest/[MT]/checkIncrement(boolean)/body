{
  for (int k=0; k < 100; k++) {
    if (invokeAll) {
      IgniteCache<String,Set<String>> cache=ignite(0).cache(null);
      Map<String,Processor> procs=new LinkedHashMap<>();
      for (int i=0; i < NUM_SETS; i++) {
        String key="set-" + i;
        String val="value-" + k;
        procs.put(key,new Processor(val));
      }
      Map<String,EntryProcessorResult<Integer>> resMap=cache.invokeAll(procs);
      for (      String key : procs.keySet()) {
        EntryProcessorResult<Integer> res=resMap.get(key);
        assertNotNull(res);
        assertEquals(k + 1,(Object)res.get());
      }
    }
 else {
      IgniteCache<String,Set<String>> cache=ignite(0).cache(null);
      for (int i=0; i < NUM_SETS; i++) {
        String key="set-" + i;
        String val="value-" + k;
        Integer valsCnt=cache.invoke(key,new Processor(val));
        assertEquals(k + 1,(Object)valsCnt);
      }
    }
  }
}
