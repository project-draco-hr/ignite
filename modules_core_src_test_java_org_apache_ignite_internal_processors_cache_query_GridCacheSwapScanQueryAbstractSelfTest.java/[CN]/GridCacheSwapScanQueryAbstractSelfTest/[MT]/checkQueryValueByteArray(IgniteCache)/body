{
  final int ENTRY_CNT=100;
  for (int i=0; i < ENTRY_CNT; i++)   cache.getAndPut(i,new byte[i]);
  try {
    ScanQuery<Integer,byte[]> qry=new ScanQuery<>(new IgniteBiPredicate<Integer,byte[]>(){
      @Override public boolean apply(      Integer key,      byte[] val){
        assertEquals(key,(Integer)val.length);
        return key % 2 == 0;
      }
    }
);
    Collection<Cache.Entry<Integer,byte[]>> res=cache.query(qry).getAll();
    assertEquals(ENTRY_CNT / 2,res.size());
    for (    Cache.Entry<Integer,byte[]> e : res) {
      Integer key=e.getKey();
      byte[] val=e.getValue();
      assertEquals(key,(Integer)val.length);
      assertEquals(0,key % 2);
    }
    qry=new ScanQuery<>();
    res=cache.query(qry).getAll();
    assertEquals(ENTRY_CNT,res.size());
  }
  finally {
    for (int i=0; i < ENTRY_CNT; i++)     assertTrue(cache.remove(i));
  }
}
