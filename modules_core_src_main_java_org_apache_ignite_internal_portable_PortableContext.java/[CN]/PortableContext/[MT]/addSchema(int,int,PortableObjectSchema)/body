{
synchronized (this) {
    if (schemas == null) {
      Map<Integer,Object> newSchemas=new HashMap<>();
      newSchemas.put(typeId,new IgniteBiTuple<>(schemaId,newTypeSchema));
      schemas=newSchemas;
    }
 else {
      Object typeSchemas=schemas.get(typeId);
      if (typeSchemas == null) {
        Map<Integer,Object> newSchemas=new HashMap<>(schemas);
        newSchemas.put(typeId,new IgniteBiTuple<>(schemaId,newTypeSchema));
        schemas=newSchemas;
      }
 else       if (typeSchemas instanceof IgniteBiTuple) {
        IgniteBiTuple<Integer,PortableObjectSchema> typeSchema=(IgniteBiTuple<Integer,PortableObjectSchema>)typeSchemas;
        if (typeSchema.get1() != schemaId) {
          Map<Integer,PortableObjectSchema> newTypeSchemas=new HashMap();
          newTypeSchemas.put(typeSchema.get1(),typeSchema.get2());
          newTypeSchemas.put(schemaId,newTypeSchema);
          Map<Integer,Object> newSchemas=new HashMap<>(schemas);
          newSchemas.put(typeId,newTypeSchemas);
          schemas=newSchemas;
        }
      }
 else {
        Map<Integer,PortableObjectSchema> newTypeSchemas=new HashMap((Map<Integer,PortableObjectSchema>)typeSchemas);
        newTypeSchemas.put(schemaId,newTypeSchema);
        Map<Integer,Object> newSchemas=new HashMap<>(schemas);
        newSchemas.put(typeId,newTypeSchemas);
        schemas=newSchemas;
      }
    }
  }
}
