{
  execStartTs=U.currentTimeMillis();
  stats.onTaskSubmit(info,submitTs);
  stats.onTaskPrepare(info,execStartTs);
  Throwable err=null;
  GridHadoopTaskState state=GridHadoopTaskState.COMPLETED;
  try {
    ctx=job.getTaskContext(info);
    ctx.prepareTaskEnvironment();
    runTask();
    if (info.type() == MAP && job.info().hasCombiner()) {
      ctx.taskInfo(new GridHadoopTaskInfo(COMBINE,info.jobId(),info.taskNumber(),info.attempt(),null));
      try {
        runTask();
      }
  finally {
        ctx.taskInfo(info);
      }
    }
  }
 catch (  GridHadoopTaskCancelledException ignored) {
    state=GridHadoopTaskState.CANCELED;
  }
catch (  Throwable e) {
    state=GridHadoopTaskState.FAILED;
    err=e;
    U.error(log,"Task execution failed.",e);
  }
 finally {
    execEndTs=U.currentTimeMillis();
    stats.onTaskFinish(info,execEndTs);
    GridHadoopCounters counters=ctx.counters();
    counters.counter(GridHadoopStatCounter.GROUP_NAME,GridHadoopStatCounter.COUNTER_NAME,GridHadoopStatCounter.class).merge(stats);
    onTaskFinished(new GridHadoopTaskStatus(state,err,counters));
    if (local != null)     local.close();
    if (ctx != null)     ctx.cleanupTaskEnvironment();
  }
  return null;
}
