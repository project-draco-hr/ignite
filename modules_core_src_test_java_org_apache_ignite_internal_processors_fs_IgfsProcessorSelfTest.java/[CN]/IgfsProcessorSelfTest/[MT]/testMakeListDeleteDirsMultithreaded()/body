{
  assertListDir("/");
  final int max=2 * 1000;
  final int threads=50;
  final AtomicInteger cnt=new AtomicInteger();
  info("Create directories: " + max);
  GridTestUtils.runMultiThreaded(new Callable<Object>(){
    @Override public Object call() throws Exception {
      for (int cur=cnt.incrementAndGet(); cur < max; cur=cnt.incrementAndGet())       ggfs.mkdirs(path(cur));
      return null;
    }
  }
,threads,"grid-test-make-directories");
  info("Validate directories were created.");
  cnt.set(0);
  GridTestUtils.runMultiThreaded(new Callable<Object>(){
    @Override public Object call() throws Exception {
      for (int cur=cnt.incrementAndGet(); cur < max; cur=cnt.incrementAndGet()) {
        IgfsFile info=ggfs.info(path(cur));
        assertNotNull("Expects file exist: " + cur,info);
        assertTrue("Expects file is a directory: " + cur,info.isDirectory());
      }
      return null;
    }
  }
,threads,"grid-test-check-directories-exist");
  info("Validate directories removing.");
  cnt.set(0);
  GridTestUtils.runMultiThreaded(new Callable<Object>(){
    @Override public Object call() throws Exception {
      for (int cur=cnt.incrementAndGet(); cur < max; cur=cnt.incrementAndGet())       ggfs.delete(path(cur),true);
      return null;
    }
  }
,threads,"grid-test-delete-directories");
}
