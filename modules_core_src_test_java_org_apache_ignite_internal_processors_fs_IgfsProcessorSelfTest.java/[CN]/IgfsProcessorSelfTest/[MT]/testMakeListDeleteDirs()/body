{
  assertListDir("/");
  ggfs.mkdirs(path("/ab/cd/ef"));
  assertListDir("/","ab");
  assertListDir("/ab","cd");
  assertListDir("/ab/cd","ef");
  ggfs.mkdirs(path("/ab/ef"));
  ggfs.mkdirs(path("/cd/ef"));
  ggfs.mkdirs(path("/cd/gh"));
  ggfs.mkdirs(path("/ef"));
  ggfs.mkdirs(path("/ef/1"));
  ggfs.mkdirs(path("/ef/2"));
  ggfs.mkdirs(path("/ef/3"));
  assertListDir("/","ef","ab","cd");
  assertListDir("/ab","cd","ef");
  assertListDir("/ab/cd","ef");
  assertListDir("/ab/cd/ef");
  assertListDir("/cd","ef","gh");
  assertListDir("/cd/ef");
  assertListDir("/ef","1","2","3");
  ggfs.delete(path("/ef/2"),false);
  assertListDir("/","ef","ab","cd");
  assertListDir("/ef","1","3");
  assertFalse(ggfs.delete(path("/ef/2"),false));
  assertListDir("/","ef","ab","cd");
  assertListDir("/ef","1","3");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      ggfs.delete(path("/ef"),false);
      return null;
    }
  }
,IgfsDirectoryNotEmptyException.class,null);
  assertListDir("/","ef","ab","cd");
  assertListDir("/ef","1","3");
  ggfs.delete(path("/ef"),true);
  assertListDir("/","ab","cd");
}
