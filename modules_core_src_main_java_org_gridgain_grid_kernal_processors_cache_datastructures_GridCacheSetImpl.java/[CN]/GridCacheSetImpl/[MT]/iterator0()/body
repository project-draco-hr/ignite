{
  try {
    GridCacheQuery qry=new GridCacheQueryAdapter<>(ctx,SET,null,null,null,new GridSetQueryPredicate<>(id,collocated),false,false);
    Collection<ClusterNode> nodes=dataNodes(ctx.affinity().affinityTopologyVersion());
    qry.projection(ctx.grid().forNodes(nodes));
    GridCacheQueryFuture<Map.Entry<T,?>> fut=qry.execute();
    CacheWeakQueryIteratorsHolder.WeakQueryFutureIterator it=ctx.itHolder().iterator(fut,new CacheIteratorConverter<T,Map.Entry<T,?>>(){
      @Override protected T convert(      Map.Entry<T,?> e){
        return e.getKey();
      }
      @Override protected void remove(      T item){
        GridCacheSetImpl.this.remove(item);
      }
    }
);
    if (rmvd) {
      ctx.itHolder().removeIterator(it);
      checkRemoved();
    }
    return it;
  }
 catch (  IgniteCheckedException e) {
    throw new IgniteException(e);
  }
}
