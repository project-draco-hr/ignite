{
  int numThreads=Runtime.getRuntime().availableProcessors() * 2;
  ExecutorCompletionService<Object> execSvc=new ExecutorCompletionService<>(Executors.newFixedThreadPool(numThreads));
  try (IgniteDataStreamer<GridTestKey,Long> ldr=G.ignite().dataStreamer("partitioned")){
    for (int i=0; i < numThreads; i++) {
      final int threadId=i;
      final int perThreadKeys=GridTestConstants.ENTRY_COUNT / numThreads;
      execSvc.submit(new Callable<Object>(){
        @Override public Object call() throws Exception {
          int start=threadId * perThreadKeys;
          int end=start + perThreadKeys;
          for (long i=start; i < end; i++)           ldr.addData(new GridTestKey(i),i);
          return null;
        }
      }
);
    }
    for (int i=0; i < numThreads; i++)     execSvc.take().get();
  }
 }
