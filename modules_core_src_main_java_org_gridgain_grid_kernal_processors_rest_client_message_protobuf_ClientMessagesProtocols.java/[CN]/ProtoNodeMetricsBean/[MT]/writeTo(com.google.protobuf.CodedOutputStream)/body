{
  getSerializedSize();
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeInt64(1,lastUpdateTime_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeInt32(2,maximumActiveJobs_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeInt32(3,currentActiveJobs_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    output.writeFloat(4,averageActiveJobs_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    output.writeInt32(5,maximumWaitingJobs_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    output.writeInt32(6,currentWaitingJobs_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    output.writeFloat(7,averageWaitingJobs_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    output.writeInt32(8,maximumRejectedJobs_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    output.writeInt32(9,currentRejectedJobs_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    output.writeFloat(10,averageRejectedJobs_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    output.writeInt32(11,maximumCancelledJobs_);
  }
  if (((bitField0_ & 0x00000800) == 0x00000800)) {
    output.writeInt32(12,currentCancelledJobs_);
  }
  if (((bitField0_ & 0x00001000) == 0x00001000)) {
    output.writeFloat(13,averageCancelledJobs_);
  }
  if (((bitField0_ & 0x00002000) == 0x00002000)) {
    output.writeInt32(14,totalRejectedJobs_);
  }
  if (((bitField0_ & 0x00004000) == 0x00004000)) {
    output.writeInt32(15,totalCancelledJobs_);
  }
  if (((bitField0_ & 0x00008000) == 0x00008000)) {
    output.writeInt32(16,totalExecutedJobs_);
  }
  if (((bitField0_ & 0x00010000) == 0x00010000)) {
    output.writeInt64(17,maximumJobWaitTime_);
  }
  if (((bitField0_ & 0x00020000) == 0x00020000)) {
    output.writeInt64(18,currentJobWaitTime_);
  }
  if (((bitField0_ & 0x00040000) == 0x00040000)) {
    output.writeDouble(19,averageJobWaitTime_);
  }
  if (((bitField0_ & 0x00080000) == 0x00080000)) {
    output.writeInt64(20,maximumJobExecuteTime_);
  }
  if (((bitField0_ & 0x00100000) == 0x00100000)) {
    output.writeInt64(21,currentJobExecuteTime_);
  }
  if (((bitField0_ & 0x00200000) == 0x00200000)) {
    output.writeDouble(22,averageJobExecuteTime_);
  }
  if (((bitField0_ & 0x00400000) == 0x00400000)) {
    output.writeInt64(23,totalIdleTime_);
  }
  if (((bitField0_ & 0x00800000) == 0x00800000)) {
    output.writeInt64(24,currentIdleTime_);
  }
  if (((bitField0_ & 0x01000000) == 0x01000000)) {
    output.writeInt32(25,totalCpus_);
  }
  if (((bitField0_ & 0x02000000) == 0x02000000)) {
    output.writeDouble(26,currentCpuLoad_);
  }
  if (((bitField0_ & 0x04000000) == 0x04000000)) {
    output.writeDouble(27,averageCpuLoad_);
  }
  if (((bitField0_ & 0x08000000) == 0x08000000)) {
    output.writeInt64(28,heapMemoryInitialized_);
  }
  if (((bitField0_ & 0x10000000) == 0x10000000)) {
    output.writeInt64(29,heapMemoryUsed_);
  }
  if (((bitField0_ & 0x20000000) == 0x20000000)) {
    output.writeInt64(30,heapMemoryCommitted_);
  }
  if (((bitField0_ & 0x40000000) == 0x40000000)) {
    output.writeInt64(31,heapMemoryMaximum_);
  }
  if (((bitField0_ & 0x80000000) == 0x80000000)) {
    output.writeInt64(32,nonHeapMemoryInitialized_);
  }
  if (((bitField1_ & 0x00000001) == 0x00000001)) {
    output.writeInt64(33,nonHeapMemoryUsed_);
  }
  if (((bitField1_ & 0x00000002) == 0x00000002)) {
    output.writeInt64(34,nonHeapMemoryCommitted_);
  }
  if (((bitField1_ & 0x00000004) == 0x00000004)) {
    output.writeInt64(35,nonHeapMemoryMaximum_);
  }
  if (((bitField1_ & 0x00000008) == 0x00000008)) {
    output.writeInt64(36,upTime_);
  }
  if (((bitField1_ & 0x00000010) == 0x00000010)) {
    output.writeInt64(37,startTime_);
  }
  if (((bitField1_ & 0x00000020) == 0x00000020)) {
    output.writeInt64(38,nodeStartTime_);
  }
  if (((bitField1_ & 0x00000040) == 0x00000040)) {
    output.writeInt32(39,currentThreadCount_);
  }
  if (((bitField1_ & 0x00000080) == 0x00000080)) {
    output.writeInt32(40,maximumThreadCount_);
  }
  if (((bitField1_ & 0x00000100) == 0x00000100)) {
    output.writeInt64(41,totalStartedThreadCount_);
  }
  if (((bitField1_ & 0x00000200) == 0x00000200)) {
    output.writeInt32(42,currentDaemonThreadCount_);
  }
  if (((bitField1_ & 0x00000400) == 0x00000400)) {
    output.writeInt64(43,fileSystemFreeSpace_);
  }
  if (((bitField1_ & 0x00000800) == 0x00000800)) {
    output.writeInt64(44,fileSystemTotalSpace_);
  }
  if (((bitField1_ & 0x00001000) == 0x00001000)) {
    output.writeInt64(45,fileSystemUsableSpace_);
  }
  if (((bitField1_ & 0x00002000) == 0x00002000)) {
    output.writeInt64(46,lastDataVersion_);
  }
  if (((bitField1_ & 0x00004000) == 0x00004000)) {
    output.writeDouble(47,currentGcCpuLoad_);
  }
  if (((bitField1_ & 0x00008000) == 0x00008000)) {
    output.writeInt32(48,totalExecutedTasks_);
  }
  if (((bitField1_ & 0x00010000) == 0x00010000)) {
    output.writeInt32(49,sentMessagesCount_);
  }
  if (((bitField1_ & 0x00020000) == 0x00020000)) {
    output.writeInt64(50,sentBytesCount_);
  }
  if (((bitField1_ & 0x00040000) == 0x00040000)) {
    output.writeInt32(51,receivedMessagesCount_);
  }
  if (((bitField1_ & 0x00080000) == 0x00080000)) {
    output.writeInt64(52,receivedBytesCount_);
  }
  getUnknownFields().writeTo(output);
}
