{
  if (other == org.gridgain.grid.kernal.processors.rest.client.message.protobuf.ClientMessagesProtocols.ProtoNodeMetricsBean.getDefaultInstance())   return this;
  if (other.hasLastUpdateTime()) {
    setLastUpdateTime(other.getLastUpdateTime());
  }
  if (other.hasMaximumActiveJobs()) {
    setMaximumActiveJobs(other.getMaximumActiveJobs());
  }
  if (other.hasCurrentActiveJobs()) {
    setCurrentActiveJobs(other.getCurrentActiveJobs());
  }
  if (other.hasAverageActiveJobs()) {
    setAverageActiveJobs(other.getAverageActiveJobs());
  }
  if (other.hasMaximumWaitingJobs()) {
    setMaximumWaitingJobs(other.getMaximumWaitingJobs());
  }
  if (other.hasCurrentWaitingJobs()) {
    setCurrentWaitingJobs(other.getCurrentWaitingJobs());
  }
  if (other.hasAverageWaitingJobs()) {
    setAverageWaitingJobs(other.getAverageWaitingJobs());
  }
  if (other.hasMaximumRejectedJobs()) {
    setMaximumRejectedJobs(other.getMaximumRejectedJobs());
  }
  if (other.hasCurrentRejectedJobs()) {
    setCurrentRejectedJobs(other.getCurrentRejectedJobs());
  }
  if (other.hasAverageRejectedJobs()) {
    setAverageRejectedJobs(other.getAverageRejectedJobs());
  }
  if (other.hasMaximumCancelledJobs()) {
    setMaximumCancelledJobs(other.getMaximumCancelledJobs());
  }
  if (other.hasCurrentCancelledJobs()) {
    setCurrentCancelledJobs(other.getCurrentCancelledJobs());
  }
  if (other.hasAverageCancelledJobs()) {
    setAverageCancelledJobs(other.getAverageCancelledJobs());
  }
  if (other.hasTotalRejectedJobs()) {
    setTotalRejectedJobs(other.getTotalRejectedJobs());
  }
  if (other.hasTotalCancelledJobs()) {
    setTotalCancelledJobs(other.getTotalCancelledJobs());
  }
  if (other.hasTotalExecutedJobs()) {
    setTotalExecutedJobs(other.getTotalExecutedJobs());
  }
  if (other.hasMaximumJobWaitTime()) {
    setMaximumJobWaitTime(other.getMaximumJobWaitTime());
  }
  if (other.hasCurrentJobWaitTime()) {
    setCurrentJobWaitTime(other.getCurrentJobWaitTime());
  }
  if (other.hasAverageJobWaitTime()) {
    setAverageJobWaitTime(other.getAverageJobWaitTime());
  }
  if (other.hasMaximumJobExecuteTime()) {
    setMaximumJobExecuteTime(other.getMaximumJobExecuteTime());
  }
  if (other.hasCurrentJobExecuteTime()) {
    setCurrentJobExecuteTime(other.getCurrentJobExecuteTime());
  }
  if (other.hasAverageJobExecuteTime()) {
    setAverageJobExecuteTime(other.getAverageJobExecuteTime());
  }
  if (other.hasTotalIdleTime()) {
    setTotalIdleTime(other.getTotalIdleTime());
  }
  if (other.hasCurrentIdleTime()) {
    setCurrentIdleTime(other.getCurrentIdleTime());
  }
  if (other.hasTotalCpus()) {
    setTotalCpus(other.getTotalCpus());
  }
  if (other.hasCurrentCpuLoad()) {
    setCurrentCpuLoad(other.getCurrentCpuLoad());
  }
  if (other.hasAverageCpuLoad()) {
    setAverageCpuLoad(other.getAverageCpuLoad());
  }
  if (other.hasHeapMemoryInitialized()) {
    setHeapMemoryInitialized(other.getHeapMemoryInitialized());
  }
  if (other.hasHeapMemoryUsed()) {
    setHeapMemoryUsed(other.getHeapMemoryUsed());
  }
  if (other.hasHeapMemoryCommitted()) {
    setHeapMemoryCommitted(other.getHeapMemoryCommitted());
  }
  if (other.hasHeapMemoryMaximum()) {
    setHeapMemoryMaximum(other.getHeapMemoryMaximum());
  }
  if (other.hasNonHeapMemoryInitialized()) {
    setNonHeapMemoryInitialized(other.getNonHeapMemoryInitialized());
  }
  if (other.hasNonHeapMemoryUsed()) {
    setNonHeapMemoryUsed(other.getNonHeapMemoryUsed());
  }
  if (other.hasNonHeapMemoryCommitted()) {
    setNonHeapMemoryCommitted(other.getNonHeapMemoryCommitted());
  }
  if (other.hasNonHeapMemoryMaximum()) {
    setNonHeapMemoryMaximum(other.getNonHeapMemoryMaximum());
  }
  if (other.hasUpTime()) {
    setUpTime(other.getUpTime());
  }
  if (other.hasStartTime()) {
    setStartTime(other.getStartTime());
  }
  if (other.hasNodeStartTime()) {
    setNodeStartTime(other.getNodeStartTime());
  }
  if (other.hasCurrentThreadCount()) {
    setCurrentThreadCount(other.getCurrentThreadCount());
  }
  if (other.hasMaximumThreadCount()) {
    setMaximumThreadCount(other.getMaximumThreadCount());
  }
  if (other.hasTotalStartedThreadCount()) {
    setTotalStartedThreadCount(other.getTotalStartedThreadCount());
  }
  if (other.hasCurrentDaemonThreadCount()) {
    setCurrentDaemonThreadCount(other.getCurrentDaemonThreadCount());
  }
  if (other.hasFileSystemFreeSpace()) {
    setFileSystemFreeSpace(other.getFileSystemFreeSpace());
  }
  if (other.hasFileSystemTotalSpace()) {
    setFileSystemTotalSpace(other.getFileSystemTotalSpace());
  }
  if (other.hasFileSystemUsableSpace()) {
    setFileSystemUsableSpace(other.getFileSystemUsableSpace());
  }
  if (other.hasLastDataVersion()) {
    setLastDataVersion(other.getLastDataVersion());
  }
  if (other.hasCurrentGcCpuLoad()) {
    setCurrentGcCpuLoad(other.getCurrentGcCpuLoad());
  }
  if (other.hasTotalExecutedTasks()) {
    setTotalExecutedTasks(other.getTotalExecutedTasks());
  }
  if (other.hasSentMessagesCount()) {
    setSentMessagesCount(other.getSentMessagesCount());
  }
  if (other.hasSentBytesCount()) {
    setSentBytesCount(other.getSentBytesCount());
  }
  if (other.hasReceivedMessagesCount()) {
    setReceivedMessagesCount(other.getReceivedMessagesCount());
  }
  if (other.hasReceivedBytesCount()) {
    setReceivedBytesCount(other.getReceivedBytesCount());
  }
  this.mergeUnknownFields(other.getUnknownFields());
  return this;
}
