{
  V val;
  GridCacheMvccCandidate<K> prev;
  GridCacheMvccCandidate<K> owner;
synchronized (this) {
    cand.parent(this);
    checkRemoved(cand.version());
    checkObsolete();
    GridCacheMvcc<K> mvcc=mvccExtras();
    if (mvcc == null) {
      mvcc=new GridCacheMvcc<>(cctx);
      mvccExtras(mvcc);
    }
    boolean emptyBefore=mvcc.isEmpty();
    prev=mvcc.anyOwner();
    mvcc.addRemote(cand);
    owner=mvcc.anyOwner();
    boolean emptyAfter=mvcc.isEmpty();
    checkCallbacks(emptyBefore,emptyAfter);
    val=this.val;
    refreshRemotes();
    if (emptyAfter)     mvccExtras(null);
  }
  checkOwnerChanged(prev,owner,val);
}
