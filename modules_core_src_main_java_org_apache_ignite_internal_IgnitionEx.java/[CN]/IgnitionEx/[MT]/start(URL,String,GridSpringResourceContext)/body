{
  A.notNull(springCfgUrl,"springCfgUrl");
  boolean isLog4jUsed=U.gridClassLoader().getResource("org/apache/log4j/Appender.class") != null;
  IgniteBiTuple<Object,Object> t=null;
  if (isLog4jUsed) {
    try {
      t=U.addLog4jNoOpLogger();
    }
 catch (    IgniteCheckedException ignore) {
      isLog4jUsed=false;
    }
  }
  Collection<Handler> savedHnds=null;
  if (!isLog4jUsed)   savedHnds=U.addJavaNoOpLogger();
  IgniteBiTuple<Collection<IgniteConfiguration>,? extends GridSpringResourceContext> cfgMap;
  try {
    cfgMap=loadConfigurations(springCfgUrl);
  }
  finally {
    if (isLog4jUsed && t != null)     U.removeLog4jNoOpLogger(t);
    if (!isLog4jUsed)     U.removeJavaNoOpLogger(savedHnds);
  }
  return startConfigurations(cfgMap,springCfgUrl,gridName,springCtx);
}
