{
  try {
    doInvoke(new IgniteInClosureX<BinaryRawWriterEx>(){
      @Override public void applyx(      BinaryRawWriterEx writer) throws IgniteCheckedException {
        Map<K,V> map=new AbstractMap<K,V>(){
          @Override public int size(){
            return entries.size();
          }
          @Override public Set<Entry<K,V>> entrySet(){
            return new AbstractSet<Entry<K,V>>(){
              @Override public Iterator<Entry<K,V>> iterator(){
                return F.iteratorReadOnly(entries,new C1<Cache.Entry<? extends K,? extends V>,Entry<K,V>>(){
                  private static final long serialVersionUID=0L;
                  @Override public Entry<K,V> apply(                  Cache.Entry<? extends K,? extends V> entry){
                    return new GridMapEntry<>(entry.getKey(),entry.getValue());
                  }
                }
);
              }
              @Override public int size(){
                return entries.size();
              }
            }
;
          }
        }
;
        writer.writeByte(OP_PUT_ALL);
        writer.writeLong(session());
        writer.writeString(ses.cacheName());
        writer.writeMap(map);
      }
    }
,null);
  }
 catch (  IgniteCheckedException e) {
    throw new CacheWriterException(U.convertExceptionNoWrap(e));
  }
}
