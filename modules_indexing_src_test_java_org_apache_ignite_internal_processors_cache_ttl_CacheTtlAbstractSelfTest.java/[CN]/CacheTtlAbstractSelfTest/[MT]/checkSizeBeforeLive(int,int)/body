{
  for (int i=0; i < gridCnt; ++i) {
    IgniteCache<Integer,Integer> cache=jcache(i);
    log.info("Size [node=" + i + ", heap="+ cache.localSize(PRIMARY,BACKUP,NEAR,ONHEAP)+ ", offheap="+ cache.localSize(PRIMARY,BACKUP,NEAR,OFFHEAP)+ ", swap="+ cache.localSize(PRIMARY,BACKUP,NEAR,SWAP)+ ']');
    if (memoryMode() == CacheMemoryMode.OFFHEAP_TIERED) {
      assertEquals("Unexpected size, node: " + i,0,cache.localSize(PRIMARY,BACKUP,NEAR,ONHEAP));
      assertEquals("Unexpected size, node: " + i,size,cache.localSize(PRIMARY,BACKUP,NEAR,OFFHEAP));
    }
 else {
      assertEquals("Unexpected size, node: " + i,size > MAX_CACHE_SIZE ? MAX_CACHE_SIZE : size,cache.localSize(PRIMARY,BACKUP,NEAR,ONHEAP));
      assertEquals("Unexpected size, node: " + i,size > MAX_CACHE_SIZE ? size - MAX_CACHE_SIZE : 0,cache.localSize(PRIMARY,BACKUP,NEAR,OFFHEAP));
    }
    for (int key=0; key < size; key++)     assertNotNull(cache.localPeek(key));
    assertFalse(cache.query(new SqlQuery<>(Integer.class,"_val >= 0")).getAll().isEmpty());
  }
}
