{
  long startIdx=range.startOffset() / fileInfo.blockSize();
  long endIdx=range.endOffset() / fileInfo.blockSize();
  if (log.isDebugEnabled())   log.debug("Cleaning blocks [fileInfo=" + fileInfo + ", range="+ range+ ", cleanNonColocated="+ cleanNonColocated+ ", startIdx="+ startIdx+ ", endIdx="+ endIdx+ ']');
  try {
    try (IgniteDataLoader<GridGgfsBlockKey,byte[]> ldr=dataLoader()){
      for (long idx=startIdx; idx <= endIdx; idx++) {
        ldr.removeData(new GridGgfsBlockKey(fileInfo.id(),range.affinityKey(),fileInfo.evictExclude(),idx));
        if (cleanNonColocated)         ldr.removeData(new GridGgfsBlockKey(fileInfo.id(),null,fileInfo.evictExclude(),idx));
      }
    }
   }
 catch (  IgniteCheckedException e) {
    log.error("Failed to clean up file range [fileInfo=" + fileInfo + ", range="+ range+ ']',e);
  }
}
