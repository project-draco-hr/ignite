{
  long startIdx=range.startOffset() / fileInfo.blockSize();
  long endIdx=range.endOffset() / fileInfo.blockSize();
  try {
    try (GridDataLoader<GridGgfsBlockKey,byte[]> ldr=dataLoader()){
      long bytesProcessed=0;
      for (long idx=startIdx; idx <= endIdx; idx++) {
        GridGgfsBlockKey colocatedKey=new GridGgfsBlockKey(fileInfo.id(),range.affinityKey(),fileInfo.evictExclude(),idx);
        GridGgfsBlockKey key=new GridGgfsBlockKey(fileInfo.id(),null,fileInfo.evictExclude(),idx);
        byte[] block=dataCachePrj.get(colocatedKey);
        if (block != null) {
          if (block.length != fileInfo.blockSize()) {
            try (GridCacheTx tx=dataCachePrj.txStart(PESSIMISTIC,REPEATABLE_READ)){
              Map<GridGgfsBlockKey,byte[]> vals=dataCachePrj.getAll(F.asList(colocatedKey,key));
              byte[] val=vals.get(colocatedKey);
              if (val != null) {
                dataCachePrj.putx(key,val);
                tx.commit();
              }
 else {
                if (log.isDebugEnabled())                 log.debug("Failed to find colocated file block for spread (will ignore) " + "[fileInfo=" + fileInfo + ", range="+ range+ ", startIdx="+ startIdx+ ", endIdx="+ endIdx+ ", idx="+ idx+ ']');
              }
            }
           }
 else           ldr.addData(key,block);
          bytesProcessed+=block.length;
          if (bytesProcessed >= ggfsCtx.configuration().getFragmentizerThrottlingBlockLength()) {
            ldr.flush();
            bytesProcessed=0;
            U.sleep(ggfsCtx.configuration().getFragmentizerThrottlingDelay());
          }
        }
 else         if (log.isDebugEnabled())         log.debug("Failed to find colocated file block for spread (will ignore) " + "[fileInfo=" + fileInfo + ", range="+ range+ ", startIdx="+ startIdx+ ", endIdx="+ endIdx+ ", idx="+ idx+ ']');
      }
    }
   }
 catch (  GridException e) {
    log.error("Failed to clean up file range [fileInfo=" + fileInfo + ", range="+ range+ ']',e);
  }
}
