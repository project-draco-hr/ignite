{
  JSch ssh=new JSch();
  Session ses=null;
  try {
    if (spec.key() != null)     ssh.addIdentity(spec.key().getAbsolutePath());
    ses=ssh.getSession(spec.username(),spec.host(),spec.port());
    if (spec.password() != null)     ses.setPassword(spec.password());
    ses.setConfig("StrictHostKeyChecking","no");
    ses.connect(timeout);
    boolean win=isWindows(ses);
    char separator=win ? '\\' : '/';
    spec.fixPaths(separator);
    String ggHome=spec.ggHome();
    if (ggHome == null)     ggHome=win ? DFLT_GG_HOME_WIN : DFLT_GG_HOME_LINUX;
    String script=spec.script();
    if (script == null)     script=win ? DFLT_SCRIPT_WIN : DFLT_SCRIPT_LINUX;
    String cfg=spec.configuration();
    if (cfg == null)     cfg="";
    String startNodeCmd;
    String scriptOutputFileName=FILE_NAME_DATE_FORMAT.format(new Date()) + '-' + UUID.randomUUID().toString().substring(0,8)+ ".log";
    if (win) {
      String logDir=ggHome + '\\' + LOG_DIR_WIN;
      String tmpDir=env(ses,"%TMP%",logDir);
      String scriptOutputDir=tmpDir + "\\gridgain-startNodes";
      shell(ses,"mkdir " + logDir);
      shell(ses,"mkdir " + scriptOutputDir);
      UUID id=UUID.randomUUID();
      String svcName="GridGain-" + id;
      String svcPath=ggHome + '\\' + SVC_EXE;
      startNodeCmd=new SB().a("cmd /c if exist \"").a(svcPath).a("\"").a(" sc create ").a(svcName).a(" binPath= \"").a(svcPath).a("\"").a(" && ").a("sc start ").a(svcName).a(" ").a(svcName).a(" \"").a(ggHome).a('\\').a(script).a(" ").a(cfg).a("\"").a(" \"").a(logDir).a("\\gridgain.").a(id).a(".log\" > ").a(scriptOutputDir).a("\\").a(scriptOutputFileName).toString();
    }
 else {
      int spaceIdx=script.indexOf(' ');
      String scriptPath=spaceIdx > -1 ? script.substring(0,spaceIdx) : script;
      String scriptArgs=spaceIdx > -1 ? script.substring(spaceIdx + 1) : "";
      String rmtLogArgs=buildRemoteLogArguments(spec.username(),spec.host());
      String tmpDir=env(ses,"$TMPDIR","/tmp/");
      String scriptOutputDir=tmpDir + "gridgain-startNodes";
      shell(ses,"mkdir " + scriptOutputDir);
      if (ggHome.startsWith("~")) {
        String homeDir=env(ses,"$HOME","~");
        ggHome=ggHome.replaceFirst("~",homeDir);
      }
      startNodeCmd=new SB().a("nohup ").a("\"").a(ggHome).a('/').a(scriptPath).a("\"").a(" ").a(scriptArgs).a(!cfg.isEmpty() ? " \"" : "").a(cfg).a(!cfg.isEmpty() ? "\"" : "").a(rmtLogArgs).a(" > ").a(scriptOutputDir).a("/").a(scriptOutputFileName).a(" 2>& 1 &").toString();
    }
    info("Starting remote node with SSH command: " + startNodeCmd,spec.logger(),log);
    shell(ses,startNodeCmd);
    return new GridTuple3<>(spec.host(),true,null);
  }
 catch (  IgniteInterruptedException e) {
    return new GridTuple3<>(spec.host(),false,e.getMessage());
  }
catch (  Exception e) {
    return new GridTuple3<>(spec.host(),false,X.getFullStackTrace(e));
  }
 finally {
    if (ses != null && ses.isConnected())     ses.disconnect();
  }
}
