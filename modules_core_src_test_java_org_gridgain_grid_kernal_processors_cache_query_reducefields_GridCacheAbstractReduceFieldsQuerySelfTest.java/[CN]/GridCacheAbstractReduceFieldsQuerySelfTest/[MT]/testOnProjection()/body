{
  P2<GridCacheAffinityKey<String>,Person> p=new P2<GridCacheAffinityKey<String>,Person>(){
    @Override public boolean apply(    GridCacheAffinityKey<String> key,    Person val){
      return val.orgId == 1;
    }
  }
;
  GridCacheProjection<GridCacheAffinityKey<String>,Person> cachePrj=grid(0).<GridCacheAffinityKey<String>,Person>cache(null).projection(p);
  GridCacheQuery<List<?>> qry=cachePrj.queries().createSqlFieldsQuery("select age from Person");
  Collection<IgniteBiTuple<Integer,Integer>> res=qry.execute(new AverageRemoteReducer()).get();
  assertEquals("Average",30,F.reduce(res,new AverageLocalReducer()).intValue());
}
