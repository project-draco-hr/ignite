{
  try {
    startGrid();
    GridCacheEvictionAbstractTest.MockEntry e1=new GridCacheEvictionAbstractTest.MockEntry("1");
    GridCacheEvictionAbstractTest.MockEntry e2=new GridCacheEvictionAbstractTest.MockEntry("2");
    GridCacheEvictionAbstractTest.MockEntry e3=new GridCacheEvictionAbstractTest.MockEntry("3");
    GridCacheEvictionAbstractTest.MockEntry e4=new GridCacheEvictionAbstractTest.MockEntry("4");
    GridCacheEvictionAbstractTest.MockEntry e5=new GridCacheEvictionAbstractTest.MockEntry("5");
    SortedEvictionPolicy<String,String> p=policy();
    p.setBatchSize(2);
    p.onEntryAccessed(false,e1);
    assertFalse(e1.isEvicted());
    p.onEntryAccessed(false,e2);
    assertFalse(e1.isEvicted());
    assertFalse(e2.isEvicted());
    p.onEntryAccessed(false,e3);
    assertFalse(e1.isEvicted());
    assertFalse(e3.isEvicted());
    p.onEntryAccessed(false,e4);
    assertFalse(e1.isEvicted());
    assertFalse(e3.isEvicted());
    assertFalse(e4.isEvicted());
    p.onEntryAccessed(false,e5);
    assertFalse(e1.isEvicted());
    assertFalse(e3.isEvicted());
    assertFalse(e5.isEvicted());
  }
  finally {
    stopAllGrids();
  }
}
