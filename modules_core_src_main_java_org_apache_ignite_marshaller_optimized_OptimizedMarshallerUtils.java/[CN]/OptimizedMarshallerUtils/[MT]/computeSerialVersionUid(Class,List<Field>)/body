{
  if (Serializable.class.isAssignableFrom(cls) && !Enum.class.isAssignableFrom(cls)) {
    try {
      Field field=cls.getDeclaredField("serialVersionUID");
      if (field.getType() == long.class) {
        int mod=field.getModifiers();
        if (Modifier.isStatic(mod) && Modifier.isFinal(mod)) {
          field.setAccessible(true);
          return (short)field.getLong(null);
        }
      }
    }
 catch (    NoSuchFieldException e) {
    }
catch (    IllegalAccessException e) {
      throw new IOException(e);
    }
    if (OptimizedMarshaller.USE_DFLT_SUID)     return (short)ObjectStreamClass.lookup(cls).getSerialVersionUID();
  }
  MessageDigest md;
  try {
    md=MessageDigest.getInstance("SHA");
  }
 catch (  NoSuchAlgorithmException e) {
    throw new IOException("Failed to get digest for SHA.",e);
  }
  md.update(cls.getName().getBytes(UTF_8));
  if (!F.isEmpty(fields)) {
    for (int i=0; i < fields.size(); i++) {
      Field f=fields.get(i);
      md.update(f.getName().getBytes(UTF_8));
      md.update(f.getType().getName().getBytes(UTF_8));
    }
  }
  byte[] hashBytes=md.digest();
  long hash=0;
  for (int i=Math.min(hashBytes.length,8) - 1; i >= 0; i--)   hash=(hash << 8) | (hashBytes[i] & 0xFF);
  return (short)hash;
}
