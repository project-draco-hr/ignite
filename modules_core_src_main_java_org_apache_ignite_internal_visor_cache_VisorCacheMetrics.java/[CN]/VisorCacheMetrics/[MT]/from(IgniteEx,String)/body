{
  GridCacheProcessor cacheProcessor=ignite.context().cache();
  IgniteCache<Object,Object> c=cacheProcessor.jcache(cacheName);
  name=cacheName;
  mode=cacheProcessor.cacheMode(cacheName);
  sys=cacheProcessor.systemCache(cacheName);
  CacheMetrics m=c.metrics();
  size=m.getSize();
  keySize=m.getKeySize();
  reads=m.getCacheGets();
  writes=m.getCachePuts() + m.getCacheRemovals();
  hits=m.getCacheHits();
  misses=m.getCacheMisses();
  txCommits=m.getCacheTxCommits();
  txRollbacks=m.getCacheTxRollbacks();
  avgTxCommitTime=m.getAverageTxCommitTime();
  avgTxRollbackTime=m.getAverageTxRollbackTime();
  puts=m.getCachePuts();
  removals=m.getCacheRemovals();
  evictions=m.getCacheEvictions();
  avgReadTime=m.getAverageGetTime();
  avgPutTime=m.getAveragePutTime();
  avgRemovalTime=m.getAverageRemoveTime();
  readsPerSec=perSecond(m.getAverageGetTime());
  putsPerSec=perSecond(m.getAveragePutTime());
  removalsPerSec=perSecond(m.getAverageRemoveTime());
  commitsPerSec=perSecond(m.getAverageTxCommitTime());
  rollbacksPerSec=perSecond(m.getAverageTxRollbackTime());
  qryMetrics=VisorCacheQueryMetrics.from(c.queryMetrics());
  dhtEvictQueueCurrSize=m.getDhtEvictQueueCurrentSize();
  txThreadMapSize=m.getTxThreadMapSize();
  txXidMapSize=m.getTxXidMapSize();
  txCommitQueueSize=m.getTxCommitQueueSize();
  txPrepareQueueSize=m.getTxPrepareQueueSize();
  txStartVerCountsSize=m.getTxStartVersionCountsSize();
  txCommittedVersionsSize=m.getTxCommittedVersionsSize();
  txRolledbackVersionsSize=m.getTxRolledbackVersionsSize();
  txDhtThreadMapSize=m.getTxDhtThreadMapSize();
  txDhtXidMapSize=m.getTxDhtXidMapSize();
  txDhtCommitQueueSize=m.getTxDhtCommitQueueSize();
  txDhtPrepareQueueSize=m.getTxDhtPrepareQueueSize();
  txDhtStartVerCountsSize=m.getTxDhtStartVersionCountsSize();
  txDhtCommittedVersionsSize=m.getTxDhtCommittedVersionsSize();
  txDhtRolledbackVersionsSize=m.getTxDhtRolledbackVersionsSize();
  return this;
}
