{
  if (atomicityMode() != TRANSACTIONAL)   return;
  IgniteCache<Integer,TestObject> c=jcache(0);
  IgniteCache<Integer,TestObject> cacheAsync=c.withAsync();
  for (int i=0; i < ENTRY_CNT; i++)   c.put(i,new TestObject(i));
  for (int i=0; i < ENTRY_CNT; i++) {
    try (Transaction tx=grid(0).transactions().txStart(PESSIMISTIC,REPEATABLE_READ)){
      cacheAsync.get(i);
      TestObject obj=cacheAsync.<TestObject>future().get();
      assertEquals(i,obj.val);
      tx.commit();
    }
   }
  IgniteCache<Integer,PortableObject> kpc=keepPortableCache();
  IgniteCache<Integer,PortableObject> cachePortableAsync=kpc.withAsync();
  for (int i=0; i < ENTRY_CNT; i++) {
    try (Transaction tx=grid(0).transactions().txStart(PESSIMISTIC,REPEATABLE_READ)){
      cachePortableAsync.get(i);
      PortableObject po=cachePortableAsync.<PortableObject>future().get();
      assertEquals(i,(int)po.field("val"));
      tx.commit();
    }
   }
}
