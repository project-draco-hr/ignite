{
  IgniteCache<Integer,Map<Integer,TestObject>> c=jcache(0);
  for (int i=0; i < ENTRY_CNT; i++) {
    Map<Integer,TestObject> map=U.newHashMap(3);
    for (int j=0; j < 3; j++) {
      int idx=i * 10 + j;
      map.put(idx,new TestObject(idx));
    }
    c.put(i,map);
  }
  for (int i=0; i < ENTRY_CNT; i++) {
    Map<Integer,TestObject> map=c.get(i);
    assertEquals(3,map.size());
    for (int j=0; j < 3; j++) {
      int idx=i * 10 + j;
      assertEquals(idx,map.get(idx).val);
    }
  }
  IgniteCache<Integer,Map<Integer,PortableObject>> kpc=keepPortableCache();
  for (int i=0; i < ENTRY_CNT; i++) {
    Map<Integer,PortableObject> map=kpc.get(i);
    assertEquals(3,map.size());
    for (int j=0; j < 3; j++) {
      int idx=i * 10 + j;
      assertEquals(idx,(int)map.get(idx).field("val"));
    }
  }
}
