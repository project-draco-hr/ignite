{
  Collection<String> futs=F.viewReadOnly(futures(),new C1<IgniteInternalFuture<?>,String>(){
    @SuppressWarnings("unchecked") @Override public String apply(    IgniteInternalFuture<?> f){
      if (f.getClass() == FinishMiniFuture.class) {
        FinishMiniFuture fut=(FinishMiniFuture)f;
        ClusterNode node=fut.node();
        if (node != null) {
          return "FinishFuture[node=" + node.id() + ", loc="+ node.isLocal()+ ", done="+ fut.isDone()+ ']';
        }
 else {
          return "FinishFuture[node=null, done=" + fut.isDone() + ']';
        }
      }
 else       if (f.getClass() == CheckBackupMiniFuture.class) {
        CheckBackupMiniFuture fut=(CheckBackupMiniFuture)f;
        ClusterNode node=fut.node();
        if (node != null) {
          return "CheckBackupFuture[node=" + node.id() + ", loc="+ node.isLocal()+ ", done="+ f.isDone()+ "]";
        }
 else {
          return "CheckBackupFuture[node=null, done=" + f.isDone() + "]";
        }
      }
 else       if (f.getClass() == CheckRemoteTxMiniFuture.class) {
        CheckRemoteTxMiniFuture fut=(CheckRemoteTxMiniFuture)f;
        return "CheckRemoteTxMiniFuture[nodes=" + fut.nodes() + ", done="+ f.isDone()+ "]";
      }
 else       return "[loc=true, done=" + f.isDone() + "]";
    }
  }
);
  return S.toString(GridNearTxFinishFuture.class,this,"innerFuts",futs,"super",super.toString());
}
