{
  Logger log=Logger.getLogger("");
  log.setLevel(Level.FINE);
  for (  Handler h : log.getHandlers())   log.removeHandler(h);
  FileHandler h=new FileHandler(args.out + File.separator + args.childProcId+ ".log",true);
  h.setFormatter(new Formatter(){
    @Override public String format(    LogRecord record){
      StringBuilder sb=new StringBuilder();
      sb.append("[").append(record.getMillis()).append("][").append(record.getLevel()).append("][").append(record.getLoggerName()).append("] ").append(record.getMessage()).append("\n");
      if (record.getThrown() != null) {
        StringWriter sw=new StringWriter();
        PrintWriter pw=new PrintWriter(sw);
        record.getThrown().printStackTrace(pw);
        pw.flush();
        sb.append(sw.toString());
      }
      return sb.toString();
    }
  }
);
  log.addHandler(h);
  Logger.getLogger(GridIpcSharedMemorySpace.class.toString()).setLevel(Level.WARNING);
  Logger.getLogger(GridIpcSharedMemorySpace.class.getName()).setLevel(Level.WARNING);
  return new GridJavaLogger(log);
}
