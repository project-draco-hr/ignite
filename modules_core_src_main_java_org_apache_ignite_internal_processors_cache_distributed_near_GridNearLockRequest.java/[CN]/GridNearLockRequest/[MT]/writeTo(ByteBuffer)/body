{
  MessageWriteState state=MessageWriteState.get();
  MessageWriter writer=state.writer();
  writer.setBuffer(buf);
  if (!super.writeTo(buf))   return false;
  if (!state.isTypeWritten()) {
    if (!writer.writeByte(null,directType()))     return false;
    state.setTypeWritten();
  }
switch (state.index()) {
case 24:
    if (!writer.writeLong("accessTtl",accessTtl))     return false;
  state.increment();
case 25:
if (!writer.writeObjectArray("dhtVers",dhtVers,GridCacheVersion.class)) return false;
state.increment();
case 26:
if (!writer.writeObjectArray("filterBytes",filterBytes,byte[].class)) return false;
state.increment();
case 27:
if (!writer.writeBoolean("hasTransforms",hasTransforms)) return false;
state.increment();
case 28:
if (!writer.writeBoolean("implicitSingleTx",implicitSingleTx)) return false;
state.increment();
case 29:
if (!writer.writeBoolean("implicitTx",implicitTx)) return false;
state.increment();
case 30:
if (!writer.writeIgniteUuid("miniId",miniId)) return false;
state.increment();
case 31:
if (!writer.writeBoolean("onePhaseCommit",onePhaseCommit)) return false;
state.increment();
case 32:
if (!writer.writeUuid("subjId",subjId)) return false;
state.increment();
case 33:
if (!writer.writeBoolean("syncCommit",syncCommit)) return false;
state.increment();
case 34:
if (!writer.writeInt("taskNameHash",taskNameHash)) return false;
state.increment();
case 35:
if (!writer.writeLong("topVer",topVer)) return false;
state.increment();
}
return true;
}
