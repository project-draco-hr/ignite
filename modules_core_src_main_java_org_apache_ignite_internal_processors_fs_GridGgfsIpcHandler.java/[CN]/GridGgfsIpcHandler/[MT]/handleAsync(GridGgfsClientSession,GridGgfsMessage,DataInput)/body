{
  if (!mgmt)   GridLicenseUseRegistry.onUsage(HADOOP,getClass());
  try {
    if (stopping)     return null;
    final GridGgfsIpcCommand cmd=msg.command();
    IgniteInternalFuture<GridGgfsMessage> fut;
switch (cmd) {
case WRITE_BLOCK:
case MAKE_DIRECTORIES:
case LIST_FILES:
case LIST_PATHS:
{
        GridGgfsMessage res=execute(ses,cmd,msg,in);
        fut=res == null ? null : new GridFinishedFuture<>(ctx,res);
        break;
      }
default :
{
      fut=ctx.closure().callLocalSafe(new GridPlainCallable<GridGgfsMessage>(){
        @Override public GridGgfsMessage call() throws Exception {
          return execute(ses,cmd,msg,null);
        }
      }
,GridClosurePolicy.GGFS_POOL);
    }
}
return fut;
}
 catch (Exception e) {
return new GridFinishedFuture<>(ctx,e);
}
}
