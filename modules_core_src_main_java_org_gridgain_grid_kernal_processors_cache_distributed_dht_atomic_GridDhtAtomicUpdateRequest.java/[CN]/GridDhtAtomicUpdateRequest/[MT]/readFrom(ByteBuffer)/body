{
  commState.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (commState.idx) {
case 2:
    GridLongList drExpireTimes0=commState.getLongList();
  if (drExpireTimes0 == LONG_LIST_NOT_READ)   return false;
drExpireTimes=drExpireTimes0;
commState.idx++;
case 3:
GridLongList drTtls0=commState.getLongList();
if (drTtls0 == LONG_LIST_NOT_READ) return false;
drTtls=drTtls0;
commState.idx++;
case 4:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt();
}
if (commState.readSize >= 0) {
if (drVers == null) drVers=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
GridCacheVersion _val=commState.getCacheVersion();
if (_val == CACHE_VER_NOT_READ) return false;
drVers.add((GridCacheVersion)_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 5:
GridCacheVersion futVer0=commState.getCacheVersion();
if (futVer0 == CACHE_VER_NOT_READ) return false;
futVer=futVer0;
commState.idx++;
case 6:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt();
}
if (commState.readSize >= 0) {
if (keyBytes == null) keyBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
byte[] _val=commState.getByteArray();
if (_val == BYTE_ARR_NOT_READ) return false;
keyBytes.add((byte[])_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 7:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt();
}
if (commState.readSize >= 0) {
if (nearKeyBytes == null) nearKeyBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
byte[] _val=commState.getByteArray();
if (_val == BYTE_ARR_NOT_READ) return false;
nearKeyBytes.add((byte[])_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 8:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt();
}
if (commState.readSize >= 0) {
if (nearValBytes == null) nearValBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
GridCacheValueBytes _val=commState.getValueBytes();
if (_val == VAL_BYTES_NOT_READ) return false;
nearValBytes.add((GridCacheValueBytes)_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 9:
UUID nodeId0=commState.getUuid();
if (nodeId0 == UUID_NOT_READ) return false;
nodeId=nodeId0;
commState.idx++;
case 10:
Object syncMode0=commState.getEnum(GridCacheWriteSynchronizationMode.class);
if (syncMode0 == ENUM_NOT_READ) return false;
syncMode=(GridCacheWriteSynchronizationMode)syncMode0;
commState.idx++;
case 11:
if (buf.remaining() < 8) return false;
topVer=commState.getLong();
commState.idx++;
case 12:
if (buf.remaining() < 8) return false;
ttl=commState.getLong();
commState.idx++;
case 13:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt();
}
if (commState.readSize >= 0) {
if (valBytes == null) valBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
GridCacheValueBytes _val=commState.getValueBytes();
if (_val == VAL_BYTES_NOT_READ) return false;
valBytes.add((GridCacheValueBytes)_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 14:
GridCacheVersion writeVer0=commState.getCacheVersion();
if (writeVer0 == CACHE_VER_NOT_READ) return false;
writeVer=writeVer0;
commState.idx++;
}
return true;
}
