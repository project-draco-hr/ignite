{
  Grid grid=startGrid();
  try {
    grid.compute().execute(SharedResourceTask1.class,null).get();
    checkUsageCount(createClss,UserResource1.class,2);
    checkUsageCount(createClss,UserResource2.class,2);
    checkUsageCount(deployClss,UserResource1.class,2);
    checkUsageCount(deployClss,UserResource2.class,2);
    ClassLoader tstClsLdr=new GridTestClassLoader(null,getClass().getClassLoader(),SharedResourceTask1.class.getName(),GridResourceIsolatedTaskSelfTest.SharedResourceTask1.GridSharedJob1.class.getName(),GridResourceIsolatedTaskSelfTest.class.getName());
    Class<? extends GridComputeTask<Object,Object>> taskCls=(Class<? extends GridComputeTask<Object,Object>>)tstClsLdr.loadClass(SharedResourceTask1.class.getName());
    grid.compute().execute(taskCls,null).get();
    checkUsageCount(undeployClss,UserResource1.class,2);
    checkUsageCount(undeployClss,UserResource2.class,2);
    checkUsageCount(createClss,UserResource1.class,4);
    checkUsageCount(createClss,UserResource2.class,4);
    checkUsageCount(deployClss,UserResource1.class,4);
    checkUsageCount(deployClss,UserResource2.class,4);
  }
  finally {
    GridTestUtils.close(grid,log());
  }
  checkUsageCount(undeployClss,UserResource1.class,4);
  checkUsageCount(undeployClss,UserResource2.class,4);
}
