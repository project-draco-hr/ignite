{
  Path fsHome=new Path(primaryFsUri);
  Path dir=new Path(fsHome,"/someDir1/someDir2/someDir3");
  final Path file=new Path(dir,"someFile");
  FSDataOutputStream out=fs.create(file,FsPermission.getDefault(),false,64 * 1024,fs.getDefaultReplication(),fs.getDefaultBlockSize(),null);
  out.close();
  assertEquals(FsPermission.getDefault(),fs.getFileStatus(dir).getPermission());
  assertEquals(FsPermission.getDefault(),fs.getFileStatus(dir.getParent()).getPermission());
  assertEquals(FsPermission.getDefault(),fs.getFileStatus(dir.getParent().getParent()).getPermission());
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      return fs.create(file,FsPermission.getDefault(),false,1024,(short)1,2048,null);
    }
  }
,IOException.class,"Failed to create the file [path=" + convertPath(file) + ", permission=rwxrwxrwx, bufferSize=1024, replication=1, blockSize=2048]");
  FSDataOutputStream out1=fs.create(file,true);
  out1.close();
}
