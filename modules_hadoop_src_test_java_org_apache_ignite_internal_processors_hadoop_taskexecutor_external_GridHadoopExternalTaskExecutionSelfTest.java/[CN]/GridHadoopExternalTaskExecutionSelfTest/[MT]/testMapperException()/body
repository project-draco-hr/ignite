{
  String testInputFile="/test";
  prepareTestFile(testInputFile);
  Configuration cfg=new Configuration();
  setupFileSystems(cfg);
  Job job=Job.getInstance(cfg);
  job.setMapperClass(TestFailingMapper.class);
  job.setCombinerClass(TestReducer.class);
  job.setReducerClass(TestReducer.class);
  job.setMapOutputKeyClass(Text.class);
  job.setMapOutputValueClass(IntWritable.class);
  job.setOutputKeyClass(Text.class);
  job.setOutputValueClass(IntWritable.class);
  job.setNumReduceTasks(1);
  FileInputFormat.setInputPaths(job,new Path("ggfs://:" + getTestGridName(0) + "@/"+ testInputFile));
  FileOutputFormat.setOutputPath(job,new Path("ggfs://:" + getTestGridName(0) + "@/output"));
  job.setJarByClass(getClass());
  IgniteInternalFuture<?> fut=grid(0).hadoop().submit(new GridHadoopJobId(UUID.randomUUID(),1),createJobInfo(job.getConfiguration()));
  try {
    fut.get();
  }
 catch (  IgniteCheckedException e) {
    IOException exp=X.cause(e,IOException.class);
    assertNotNull(exp);
    assertEquals("Test failure",exp.getMessage());
  }
}
