{
  try {
    Boolean scan=arg.queryTxt().toUpperCase().startsWith("SCAN");
    String qryId=(scan ? VisorQueryUtils.SCAN_QRY_NAME : VisorQueryUtils.SQL_QRY_NAME) + "-" + UUID.randomUUID();
    GridCache<Object,Object> c=g.cachex(arg.cacheName());
    if (c == null)     return new IgniteBiTuple<>(new IgniteCheckedException("Cache not found: " + escapeName(arg.cacheName())),null);
    GridCacheProjection<Object,Object> cp=c.keepPortable();
    if (scan) {
      GridCacheQueryFuture<Map.Entry<Object,Object>> fut=cp.queries().createScanQuery(null).pageSize(arg.pageSize()).projection(g.forNodeIds(arg.proj())).execute();
      long start=U.currentTimeMillis();
      IgniteBiTuple<List<Object[]>,Map.Entry<Object,Object>> rows=VisorQueryUtils.fetchScanQueryRows(fut,null,arg.pageSize());
      long fetchDuration=U.currentTimeMillis() - start;
      long duration=fut.duration() + fetchDuration;
      Map.Entry<Object,Object> next=rows.get2();
      g.<String,VisorFutureResultSetHolder>nodeLocalMap().put(qryId,new VisorFutureResultSetHolder<>(fut,next,false));
      scheduleResultSetHolderRemoval(qryId);
      return new IgniteBiTuple<>(null,new VisorQueryResultEx(g.localNode().id(),qryId,VisorQueryUtils.SCAN_COL_NAMES,rows.get1(),next != null,duration));
    }
 else {
      GridCacheQueryFuture<List<?>> fut=((GridCacheQueriesEx<?,?>)cp.queries()).createSqlFieldsQuery(arg.queryTxt(),true).pageSize(arg.pageSize()).projection(g.forNodeIds(arg.proj())).execute();
      List<Object> firstRow=(List<Object>)fut.next();
      List<GridQueryFieldMetadata> meta=((GridCacheQueryMetadataAware)fut).metadata().get();
      if (meta == null)       return new IgniteBiTuple<Exception,VisorQueryResultEx>(new SQLException("Fail to execute query. No metadata available."),null);
 else {
        VisorQueryField[] names=new VisorQueryField[meta.size()];
        for (int i=0; i < meta.size(); i++) {
          GridQueryFieldMetadata col=meta.get(i);
          names[i]=new VisorQueryField(col.typeName(),col.fieldName());
        }
        long start=U.currentTimeMillis();
        IgniteBiTuple<List<Object[]>,List<?>> rows=VisorQueryUtils.fetchSqlQueryRows(fut,firstRow,arg.pageSize());
        long fetchDuration=U.currentTimeMillis() - start;
        long duration=fut.duration() + fetchDuration;
        g.<String,VisorFutureResultSetHolder>nodeLocalMap().put(qryId,new VisorFutureResultSetHolder<>(fut,rows.get2(),false));
        scheduleResultSetHolderRemoval(qryId);
        return new IgniteBiTuple<>(null,new VisorQueryResultEx(g.localNode().id(),qryId,names,rows.get1(),rows.get2() != null,duration));
      }
    }
  }
 catch (  Exception e) {
    return new IgniteBiTuple<>(e,null);
  }
}
