{
  gridCnt=2;
  startGridsMultiThreaded(gridCnt);
  try {
    final int cnt=100;
    grid(0).compute().broadcast(new Callable<Object>(){
      @IgniteInstanceResource private Ignite ignite;
      @Override public Object call() throws Exception {
        Cache<Integer,String> c=ignite.cache(null);
        for (int i=0; i < cnt; i++)         c.putx(i,Integer.toString(i));
        return true;
      }
    }
);
    for (int i=0; i < gridCnt; i++) {
      assertEquals(cnt,grid(i).cache(null).size());
      assertEquals(cnt,grid(i).cache(null).size());
      assertEquals(0,near(i).nearSize());
    }
  }
  finally {
    stopAllGrids();
  }
}
