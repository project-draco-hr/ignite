{
  try {
    startGridsMultiThreaded(3);
    final AtomicReference<GridException> err=new AtomicReference<>();
    for (int i=0; i < 3; i++) {
      Ignite g=grid(i);
      g.events().localListen(new IgnitePredicate<GridEvent>(){
        @Override public boolean apply(        GridEvent evt){
          GridDiscoveryEvent discoEvt=(GridDiscoveryEvent)evt;
          if (discoEvt.topologyNodes().size() != 3)           err.compareAndSet(null,new GridException("Invalid discovery event [evt=" + discoEvt + ", nodes="+ discoEvt.topologyNodes()+ ']'));
          return true;
        }
      }
,GridEventType.EVT_NODE_JOINED);
    }
    daemon=true;
    GridKernal daemon=(GridKernal)startGrid(3);
    GridDiscoveryEvent join=daemon.context().discovery().localJoinEvent();
    assertEquals(3,join.topologyNodes().size());
    U.sleep(100);
    if (err.get() != null)     throw err.get();
  }
  finally {
    stopAllGrids();
  }
}
