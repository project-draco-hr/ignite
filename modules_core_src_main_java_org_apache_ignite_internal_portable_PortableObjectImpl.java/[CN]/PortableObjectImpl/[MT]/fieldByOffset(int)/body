{
  Object val;
  int schemaOffset=PRIM.readInt(arr,start + GridPortableMarshaller.SCHEMA_OR_RAW_OFF_POS);
  int fieldPos=PRIM.readInt(arr,start + schemaOffset + fieldOffset);
  byte hdr=PRIM.readByte(arr,fieldPos);
switch (hdr) {
case INT:
    val=PRIM.readInt(arr,fieldPos + 1);
  break;
case LONG:
val=PRIM.readLong(arr,fieldPos + 1);
break;
case BOOLEAN:
val=PRIM.readBoolean(arr,fieldPos + 1);
break;
case SHORT:
val=PRIM.readShort(arr,fieldPos + 1);
break;
case BYTE:
val=PRIM.readByte(arr,fieldPos + 1);
break;
case CHAR:
val=PRIM.readChar(arr,fieldPos + 1);
break;
case FLOAT:
val=PRIM.readFloat(arr,fieldPos + 1);
break;
case DOUBLE:
val=PRIM.readDouble(arr,fieldPos + 1);
break;
default :
{
PortableReaderExImpl reader=new PortableReaderExImpl(ctx,arr,start,null);
val=reader.unmarshalFieldByOffset(fieldOffset);
}
}
return (F)val;
}
