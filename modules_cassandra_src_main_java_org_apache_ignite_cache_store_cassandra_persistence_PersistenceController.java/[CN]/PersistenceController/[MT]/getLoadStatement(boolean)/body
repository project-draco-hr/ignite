{
  if (loadStatement != null && loadStatementWithKeyFields != null)   return includeKeyFields ? loadStatementWithKeyFields : loadStatement;
  List<String> valCols=getValueColumns();
  List<String> keyCols=getKeyColumns();
  StringBuilder hdrWithKeyFields=new StringBuilder("select ");
  for (int i=0; i < keyCols.size(); i++) {
    if (i > 0)     hdrWithKeyFields.append(", ");
    hdrWithKeyFields.append(keyCols.get(i));
  }
  StringBuilder hdr=new StringBuilder("select ");
  for (int i=0; i < valCols.size(); i++) {
    if (i > 0)     hdr.append(", ");
    hdrWithKeyFields.append(",");
    hdr.append(valCols.get(i));
    hdrWithKeyFields.append(valCols.get(i));
  }
  StringBuilder statement=new StringBuilder();
  statement.append(" from ");
  statement.append(persistenceSettings.getKeyspace());
  statement.append(".").append(persistenceSettings.getTable());
  statement.append(" where ");
  for (int i=0; i < keyCols.size(); i++) {
    if (i > 0)     statement.append(" and ");
    statement.append(keyCols.get(i)).append("=?");
  }
  statement.append(";");
  loadStatement=hdr.toString() + statement.toString();
  loadStatementWithKeyFields=hdrWithKeyFields.toString() + statement.toString();
  return includeKeyFields ? loadStatementWithKeyFields : loadStatement;
}
