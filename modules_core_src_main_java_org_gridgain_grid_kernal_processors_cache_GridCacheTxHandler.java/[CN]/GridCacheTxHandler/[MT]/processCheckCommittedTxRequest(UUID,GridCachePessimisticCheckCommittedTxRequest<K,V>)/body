{
  if (log.isDebugEnabled())   log.debug("Processing check committed transaction request [nodeId=" + nodeId + ", req="+ req+ ']');
  IgniteFuture<GridCacheCommittedTxInfo<K,V>> infoFut=ctx.tm().checkPessimisticTxCommitted(req);
  infoFut.listenAsync(new CI1<IgniteFuture<GridCacheCommittedTxInfo<K,V>>>(){
    @Override public void apply(    IgniteFuture<GridCacheCommittedTxInfo<K,V>> infoFut){
      GridCacheCommittedTxInfo<K,V> info=null;
      try {
        info=infoFut.get();
      }
 catch (      GridException e) {
        U.error(log,"Failed to obtain committed info for transaction (will rollback): " + req,e);
      }
      GridCachePessimisticCheckCommittedTxResponse<K,V> res=new GridCachePessimisticCheckCommittedTxResponse<>(req.version(),req.futureId(),req.miniId(),info);
      if (log.isDebugEnabled())       log.debug("Finished waiting for tx committed info [req=" + req + ", res="+ res+ ']');
      sendCheckCommittedResponse(nodeId,res);
    }
  }
);
}
