{
  final AtomicBoolean flag=new AtomicBoolean();
  final LongAdder8 cnt=new LongAdder8();
  try (IgniteDataStreamer<Object,Object> ldr=grid(0).dataStreamer(null)){
    IgniteInternalFuture<?> f=multithreadedAsync(new Callable<Object>(){
      @Override public Object call() throws Exception {
        ThreadLocalRandom rnd=ThreadLocalRandom.current();
        while (!flag.get()) {
          ldr.addData(rnd.nextInt(10000),new TestObject(rnd.nextInt(10000)));
          cnt.add(1);
        }
        return null;
      }
    }
,THREAD_CNT);
    for (int i=0; i < 30 && !f.isDone(); i++)     Thread.sleep(1000);
    flag.set(true);
    f.get();
  }
   info("Operations in 30 sec: " + cnt.sum());
}
