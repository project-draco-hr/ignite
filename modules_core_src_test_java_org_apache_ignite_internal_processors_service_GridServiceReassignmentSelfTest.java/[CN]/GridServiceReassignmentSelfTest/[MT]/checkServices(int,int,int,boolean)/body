{
  IgniteEx grid=grid(gridIdx);
  CacheProjection<GridServiceAssignmentsKey,GridServiceAssignments> cache=grid.utilityCache();
  GridServiceAssignments assignments=cache.get(new GridServiceAssignmentsKey("testService"));
  Collection<UUID> nodes=F.viewReadOnly(grid.cluster().nodes(),F.node2id());
  assertNotNull("Grid assignments object is null",assignments);
  int sum=0;
  for (  Map.Entry<UUID,Integer> entry : assignments.assigns().entrySet()) {
    UUID nodeId=entry.getKey();
    if (!lastTry && !nodes.contains(nodeId))     return false;
    assertTrue("Dead node is in assignments: " + nodeId,nodes.contains(nodeId));
    Integer nodeCnt=entry.getValue();
    if (maxPerNode > 0)     assertTrue("Max per node limit exceeded [nodeId=" + nodeId + ", max="+ maxPerNode+ ", actual="+ nodeCnt,nodeCnt <= maxPerNode);
    sum+=nodeCnt;
  }
  if (total > 0)   assertTrue("Total number of services limit exceeded [sum=" + sum + ", assigns="+ assignments.assigns()+ ']',sum <= total);
  if (!lastTry && proxy(grid).get() != 10)   return false;
  assertEquals(10,proxy(grid).get());
  return true;
}
