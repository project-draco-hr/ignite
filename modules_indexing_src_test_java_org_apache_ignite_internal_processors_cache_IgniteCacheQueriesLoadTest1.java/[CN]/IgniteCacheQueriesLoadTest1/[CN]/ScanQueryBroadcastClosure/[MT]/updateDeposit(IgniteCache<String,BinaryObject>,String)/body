{
  final IgniteCache histCache=node.cache(DEPOSIT_HISTORY_CACHE).withKeepBinary();
  doInTransaction(node,PESSIMISTIC,REPEATABLE_READ,new IgniteCallable<Object>(){
    @Override public Object call() throws Exception {
      BinaryObject deposit=depositCache.get(depositKey);
      BigDecimal amount=deposit.field(BALANCE);
      BigDecimal rate=deposit.field(MARGIN_RATE);
      BigDecimal newBalance=amount.multiply(rate.add(BigDecimal.ONE));
      deposit=deposit.toBuilder().setField(BALANCE,newBalance).build();
      SqlFieldsQuery findDepositHist=new SqlFieldsQuery(LAST_HISTORY_ROW_SQL).setLocal(true);
      try (QueryCursor cursor1=histCache.query(findDepositHist.setArgs(depositKey))){
        for (        Object o : cursor1) {
        }
      }
       String depositHistKey=depositKey + "&histId=" + System.nanoTime();
      BinaryObject depositHistRow=node.binary().builder(OPERATION).setField(ID,depositHistKey).setField(DEPOSIT_ID,depositKey).setField(BUSINESS_DAY,new Date()).setField(BALANCE,newBalance).build();
      histCache.put(depositHistKey,depositHistRow);
      depositCache.put(depositKey,deposit);
      return null;
    }
  }
);
}
