{
  IgniteLogger log=this.log;
  if (log != null) {
    StringBuilder sb=new StringBuilder("Communication SPI recovery descriptors: ").append(U.nl());
    for (    Map.Entry<ClientKey,GridNioRecoveryDescriptor> entry : recoveryDescs.entrySet()) {
      GridNioRecoveryDescriptor desc=entry.getValue();
      sb.append("    [key=").append(entry.getKey()).append(", msgsSent=").append(desc.sent()).append(", msgsAckedByRmt=").append(desc.acked()).append(", msgsRcvd=").append(desc.received()).append(", lastAcked=").append(desc.lastAcknowledged()).append(", reserveCnt=").append(desc.reserveCount()).append(", descIdHash=").append(System.identityHashCode(desc)).append(']').append(U.nl());
    }
    sb.append("Communication SPI clients: ").append(U.nl());
    for (    Map.Entry<UUID,GridCommunicationClient> entry : clients.entrySet()) {
      sb.append("    [node=").append(entry.getKey()).append(", client=").append(entry.getValue()).append(']').append(U.nl());
    }
    U.warn(log,sb.toString());
  }
  GridNioServer<Message> nioSrvr=this.nioSrvr;
  if (nioSrvr != null)   nioSrvr.dumpStats();
}
