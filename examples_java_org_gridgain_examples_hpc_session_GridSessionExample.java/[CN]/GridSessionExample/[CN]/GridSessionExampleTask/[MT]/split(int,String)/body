{
  String[] words=arg.split(" ");
  Collection<GridComputeJobAdapter> jobs=new ArrayList<>(words.length);
  for (  String word : words) {
    jobs.add(new GridComputeJobAdapter(word){
      /** 
 * Job context will be injected. 
 */
      @GridJobContextResource private GridComputeJobContext jobCtx;
      /** 
 * Prints out all session attributes concatenated into string
 * and runs {@link GridSessionExample#sayIt(CharSequence)}method passing a word from split arg.
 */
      @Override public Object execute() throws GridException {
        String word=argument(0);
        ses.setAttribute(jobCtx.getJobId(),word);
        try {
          for (          GridComputeJobSibling sibling : ses.getJobSiblings()) {
            if (ses.waitForAttribute(sibling.getJobId()) == null)             throw new GridException("Failed to get session attribute from job: " + sibling.getJobId());
          }
        }
 catch (        InterruptedException e) {
          throw new GridException("Got interrupted while waiting for session attributes.",e);
        }
        StringBuilder msg=new StringBuilder();
        msg.append("All session attributes [ ");
        for (        Object jobArg : ses.getAttributes().values())         msg.append(jobArg).append(' ');
        msg.append(']');
        System.out.println(msg.toString());
        return sayIt(word);
      }
    }
);
  }
  return jobs;
}
