{
  final long topVer=ctx.affinity().affinityTopologyVersion();
  Collection<Cache.Entry<K,V>> entries=F.flatCollections(F.viewReadOnly(dht().topology().currentLocalPartitions(),new C1<GridDhtLocalPartition,Collection<Cache.Entry<K,V>>>(){
    @Override public Collection<Cache.Entry<K,V>> apply(    GridDhtLocalPartition p){
      return F.viewReadOnly(p.entries(),new C1<GridDhtCacheEntry,Cache.Entry<K,V>>(){
        @Override public Cache.Entry<K,V> apply(        GridDhtCacheEntry e){
          return e.wrapLazyValue();
        }
      }
,new P1<GridDhtCacheEntry>(){
        @Override public boolean apply(        GridDhtCacheEntry e){
          return !e.obsoleteOrDeleted();
        }
      }
);
    }
  }
,new P1<GridDhtLocalPartition>(){
    @Override public boolean apply(    GridDhtLocalPartition p){
      return p.primary(topVer);
    }
  }
));
  return new GridCacheEntrySet<>(ctx,entries,filter);
}
