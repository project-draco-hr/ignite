{
  SetIteratorKey key=new SetIteratorKey(req.id(),nodeId);
  Iterator<GridCacheSetItemKey> it=locSetIterMap.get(key);
  if (it == null) {
    GridConcurrentHashSet<GridCacheSetItemKey> data=setData.get(req.setId());
    if (data == null) {
      if (log.isDebugEnabled())       log.debug("Received request for unknown set [req=" + req + ", nodeId="+ nodeId+ ']');
      sendResponse(nodeId,new GridCacheSetDataResponse<K,V>(req.id(),Collections.emptyList(),true));
      return;
    }
    it=data.iterator();
    locSetIterMap.put(key,it);
  }
  List<Object> data=new ArrayList<>(req.pageSize());
  boolean last=false;
  boolean filterBackup=cctx.config().getBackups() > 0 || CU.isNearEnabled(cctx);
  GridCacheAffinityManager aff=cctx.affinity();
  while (data.size() < req.pageSize()) {
    GridCacheSetItemKey next=it.hasNext() ? it.next() : null;
    if (next == null) {
      last=true;
      break;
    }
    if (filterBackup && !aff.primary(cctx.localNode(),next,req.topologyVersion()))     continue;
    data.add(next.item());
  }
  if (last)   locSetIterMap.remove(key);
  sendResponse(nodeId,new GridCacheSetDataResponse<K,V>(req.id(),data,last));
}
