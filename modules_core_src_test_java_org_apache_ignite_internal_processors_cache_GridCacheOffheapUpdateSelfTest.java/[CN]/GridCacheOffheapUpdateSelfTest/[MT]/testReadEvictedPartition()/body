{
  try {
    Ignite grid=startGrid(0);
    IgniteCache<Object,Object> cache=grid.cache(null);
    for (int i=0; i < 30; i++)     cache.put(i,0);
    startGrid(1);
    awaitPartitionMapExchange();
    for (int i=0; i < 30; i++)     grid(1).cache(null).put(i,10);
    int key=0;
    ClusterNode locNode=grid.cluster().localNode();
    for (; key < 30; key++) {
      if (!grid.affinity(null).isPrimary(locNode,key) && !grid.affinity(null).isBackup(locNode,key))       break;
    }
    assertEquals(10,cache.get(key));
    try (Transaction ignored=grid.transactions().txStart(OPTIMISTIC,REPEATABLE_READ)){
      assertEquals(10,cache.get(key));
    }
     try (Transaction ignored=grid.transactions().txStart(PESSIMISTIC,READ_COMMITTED)){
      assertEquals(10,cache.get(key));
    }
   }
  finally {
    stopAllGrids();
  }
}
