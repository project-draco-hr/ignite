{
  reader.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (readState) {
case 3:
    all=reader.readBoolean("all");
  if (!reader.isLastRead())   return false;
readState++;
case 4:
argsBytes=reader.readByteArray("argsBytes");
if (!reader.isLastRead()) return false;
readState++;
case 5:
cacheName=reader.readString("cacheName");
if (!reader.isLastRead()) return false;
readState++;
case 6:
cancel=reader.readBoolean("cancel");
if (!reader.isLastRead()) return false;
readState++;
case 7:
clause=reader.readString("clause");
if (!reader.isLastRead()) return false;
readState++;
case 8:
clsName=reader.readString("clsName");
if (!reader.isLastRead()) return false;
readState++;
case 9:
fields=reader.readBoolean("fields");
if (!reader.isLastRead()) return false;
readState++;
case 10:
id=reader.readLong("id");
if (!reader.isLastRead()) return false;
readState++;
case 11:
incBackups=reader.readBoolean("incBackups");
if (!reader.isLastRead()) return false;
readState++;
case 12:
incMeta=reader.readBoolean("incMeta");
if (!reader.isLastRead()) return false;
readState++;
case 13:
keepPortable=reader.readBoolean("keepPortable");
if (!reader.isLastRead()) return false;
readState++;
case 14:
keyValFilterBytes=reader.readByteArray("keyValFilterBytes");
if (!reader.isLastRead()) return false;
readState++;
case 15:
pageSize=reader.readInt("pageSize");
if (!reader.isLastRead()) return false;
readState++;
case 16:
prjFilterBytes=reader.readByteArray("prjFilterBytes");
if (!reader.isLastRead()) return false;
readState++;
case 17:
rdcBytes=reader.readByteArray("rdcBytes");
if (!reader.isLastRead()) return false;
readState++;
case 18:
subjId=reader.readUuid("subjId");
if (!reader.isLastRead()) return false;
readState++;
case 19:
taskHash=reader.readInt("taskHash");
if (!reader.isLastRead()) return false;
readState++;
case 20:
transBytes=reader.readByteArray("transBytes");
if (!reader.isLastRead()) return false;
readState++;
case 21:
type=reader.readEnum("type",GridCacheQueryType.class);
if (!reader.isLastRead()) return false;
readState++;
}
return true;
}
