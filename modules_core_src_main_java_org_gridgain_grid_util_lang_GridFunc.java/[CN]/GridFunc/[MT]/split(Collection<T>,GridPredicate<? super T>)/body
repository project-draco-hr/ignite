{
  if (c == null)   return pair(null,null);
  if (c.isEmpty())   return F.<Collection<T>>pair(Collections.<T>emptyList(),Collections.<T>emptyList());
  if (isEmpty(p))   return pair(c,Collections.<T>emptyList());
  if (isAlwaysTrue(p))   return pair(c,Collections.<T>emptyList());
  if (isAlwaysFalse(p))   return pair(Collections.<T>emptyList(),c);
  Collection<T> c1=new LinkedList<>();
  Collection<T> c2=new LinkedList<>();
  for (  T t : c) {
    if (isAll(t,p))     c1.add(t);
 else     c2.add(t);
  }
  return pair(c1,c2);
}
