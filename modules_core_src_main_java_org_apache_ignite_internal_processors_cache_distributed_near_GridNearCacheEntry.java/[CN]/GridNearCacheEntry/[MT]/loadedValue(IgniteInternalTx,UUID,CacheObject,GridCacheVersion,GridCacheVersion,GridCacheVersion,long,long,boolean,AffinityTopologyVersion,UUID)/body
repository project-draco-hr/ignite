{
  boolean valid=valid(tx != null ? tx.topologyVersion() : cctx.affinity().affinityTopologyVersion());
  GridCacheVersion enqueueVer=null;
  try {
synchronized (this) {
      checkObsolete();
      if (cctx.cache().configuration().isStatisticsEnabled())       cctx.cache().metrics0().onRead(false);
      boolean ret=false;
      CacheObject old=this.val;
      boolean hasVal=hasValueUnlocked();
      if (isNew() || !valid || expVer == null || expVer.equals(this.dhtVer)) {
        primaryNode(primaryNodeId,topVer);
        if (!dhtVer.equals(dhtVersion())) {
          update(val,expireTime,ttl,ver);
          if (cctx.deferredDelete()) {
            boolean deleted=val == null;
            if (deleted != deletedUnlocked()) {
              deletedUnlocked(deleted);
              if (deleted)               enqueueVer=ver;
            }
          }
          recordDhtVersion(dhtVer);
          ret=true;
        }
      }
      if (evt && cctx.events().isRecordable(EVT_CACHE_OBJECT_READ))       cctx.events().addEvent(partition(),key,tx,null,EVT_CACHE_OBJECT_READ,val,val != null,old,hasVal,subjId,null,null);
      return ret;
    }
  }
  finally {
    if (enqueueVer != null)     cctx.onDeferredDelete(this,enqueueVer);
  }
}
