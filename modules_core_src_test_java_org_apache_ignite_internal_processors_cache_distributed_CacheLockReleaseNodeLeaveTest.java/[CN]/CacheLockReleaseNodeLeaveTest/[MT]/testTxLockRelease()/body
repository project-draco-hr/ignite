{
  startGrids(2);
  final Ignite ignite0=ignite(0);
  final Ignite ignite1=ignite(1);
  final Integer key=primaryKey(ignite1.cache(null));
  IgniteInternalFuture<?> fut1=GridTestUtils.runAsync(new Callable<Void>(){
    @Override public Void call() throws Exception {
      Transaction tx=ignite0.transactions().txStart(PESSIMISTIC,REPEATABLE_READ);
      ignite0.cache(null).get(key);
      return null;
    }
  }
,"lock-thread1");
  fut1.get();
  IgniteInternalFuture<?> fut2=GridTestUtils.runAsync(new Callable<Void>(){
    @Override public Void call() throws Exception {
      try (Transaction tx=ignite1.transactions().txStart(PESSIMISTIC,REPEATABLE_READ)){
        log.info("Start tx lock.");
        ignite1.cache(null).get(key);
        log.info("Tx locked key.");
        tx.commit();
      }
       return null;
    }
  }
,"lock-thread2");
  U.sleep(1000);
  log.info("Stop node.");
  ignite0.close();
  fut2.get(5,SECONDS);
}
