{
  Ignite client=grid(serverCount());
  assertTrue(client.cluster().localNode().isClient());
  final IgniteServices services=client.services();
  final Ignite srv=clientRouter(client);
  services.deployClusterSingleton("testReconnectInProgress",new TestServiceImpl());
  final TestService srvc=services.serviceProxy("testReconnectInProgress",TestService.class,false);
  assertNotNull(srvc);
  BlockTcpCommunicationSpi commSpi=commSpi(srv);
  commSpi.blockMessage(GridJobExecuteResponse.class);
  final IgniteInternalFuture<Object> fut=GridTestUtils.runAsync(new Callable<Object>(){
    @Override public Object call() throws Exception {
      try {
        srvc.test();
      }
 catch (      IgniteClientDisconnectedException e) {
        checkAndWait(e);
        return true;
      }
      return false;
    }
  }
);
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      return fut.get(200);
    }
  }
,IgniteFutureTimeoutCheckedException.class,null);
  assertNotDone(fut);
  commSpi.unblockMessage();
  reconnectClientNode(client,srv,null);
  assertTrue((Boolean)fut.get(2,TimeUnit.SECONDS));
}
