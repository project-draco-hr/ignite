{
  JavaSparkContext sc=new JavaSparkContext("local[*]","test");
  final int cnt=100;
  try {
    JavaIgniteContext<String,EntityTestAllTypeFields> ic=new JavaIgniteContext<>(sc,new IgniteConfigProvider());
    JavaIgniteRDD<String,EntityTestAllTypeFields> cache=ic.fromCache(PARTITIONED_CACHE_NAME);
    cache.savePairs(sc.parallelize(F.range(0,cnt),2).mapToPair(INT_TO_ENTITY_ALL_FIELDS_F));
    EntityTestAllTypeFields e=new EntityTestAllTypeFields(cnt / 2);
    for (    Field f : EntityTestAllTypeFields.class.getDeclaredFields()) {
      String fieldName=f.getName();
      Object val=GridTestUtils.getFieldValue(e,fieldName);
      DataFrame df=cache.sql(String.format("select %s from EntityTestAllTypeFields where %s = ?",fieldName,fieldName),val);
      if (val instanceof BigDecimal) {
        Object res=df.collect()[0].get(0);
        assertTrue(String.format("+++ Fail on %s field",fieldName),((Comparable<BigDecimal>)val).compareTo((BigDecimal)res) == 0);
      }
 else       if (val.getClass().isArray())       assertTrue(String.format("+++ Fail on %s field",fieldName),1 <= df.count());
 else       assertEquals(String.format("+++ Fail on %s field",fieldName),val,df.collect()[0].get(0));
      info(String.format("+++ Query on the filed: %s : %s passed",fieldName,f.getType().getSimpleName()));
    }
  }
  finally {
    sc.stop();
  }
}
