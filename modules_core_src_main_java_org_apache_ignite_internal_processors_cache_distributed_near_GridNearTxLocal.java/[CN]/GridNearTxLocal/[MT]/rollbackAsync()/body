{
  if (log.isDebugEnabled())   log.debug("Rolling back near tx: " + this);
  GridNearTxFinishFuture fut=rollbackFut.get();
  if (fut != null)   return fut;
  if (!rollbackFut.compareAndSet(null,fut=new GridNearTxFinishFuture<>(cctx,this,false)))   return rollbackFut.get();
  cctx.mvcc().addFuture(fut);
  IgniteInternalFuture<?> prepFut=this.prepFut.get();
  if (prepFut == null || prepFut.isDone()) {
    try {
      if (prepFut != null)       prepFut.get();
    }
 catch (    IgniteCheckedException e) {
      if (log.isDebugEnabled())       log.debug("Got optimistic tx failure [tx=" + this + ", err="+ e+ ']');
    }
    fut.finish();
  }
 else {
    prepFut.listen(new CI1<IgniteInternalFuture<?>>(){
      @Override public void apply(      IgniteInternalFuture<?> f){
        try {
          f.get();
        }
 catch (        IgniteCheckedException e) {
          if (log.isDebugEnabled())           log.debug("Got optimistic tx failure [tx=" + this + ", err="+ e+ ']');
        }
        GridNearTxFinishFuture fut0=rollbackFut.get();
        fut0.finish();
      }
    }
);
  }
  return fut;
}
