{
  final GridDhtForceKeysFuture<K,V> fut=new GridDhtForceKeysFuture<>(cctx,topVer,keys,this);
  IgniteInternalFuture<?> topReadyFut=cctx.affinity().affinityReadyFuturex(topVer);
  if (startFut.isDone() && topReadyFut == null)   fut.init();
 else {
    if (topReadyFut == null)     startFut.listenAsync(new CI1<IgniteInternalFuture<?>>(){
      @Override public void apply(      IgniteInternalFuture<?> syncFut){
        fut.init();
      }
    }
);
 else {
      GridCompoundFuture<Object,Object> compound=new GridCompoundFuture<>(cctx.kernalContext());
      compound.add((IgniteInternalFuture<Object>)startFut);
      compound.add((IgniteInternalFuture<Object>)topReadyFut);
      compound.markInitialized();
      compound.listenAsync(new CI1<IgniteInternalFuture<?>>(){
        @Override public void apply(        IgniteInternalFuture<?> syncFut){
          fut.init();
        }
      }
);
    }
  }
  return (GridDhtFuture)fut;
}
