{
  VisorGgfsConfig cfg=new VisorGgfsConfig();
  cfg.name(ggfs.getName());
  cfg.metaCacheName(ggfs.getMetaCacheName());
  cfg.dataCacheName(ggfs.getDataCacheName());
  cfg.blockSize(ggfs.getBlockSize());
  cfg.prefetchBlocks(ggfs.getPrefetchBlocks());
  cfg.streamBufferSize(ggfs.getStreamBufferSize());
  cfg.perNodeBatchSize(ggfs.getPerNodeBatchSize());
  cfg.perNodeParallelBatchCount(ggfs.getPerNodeParallelBatchCount());
  cfg.secondaryHadoopFileSystemUri(ggfs.getSecondaryHadoopFileSystemUri());
  cfg.secondaryHadoopFileSystemConfigPath(ggfs.getSecondaryHadoopFileSystemConfigPath());
  cfg.defaultMode(ggfs.getDefaultMode());
  cfg.pathModes(ggfs.getPathModes());
  cfg.dualModePutExecutorService(compactClass(ggfs.getDualModePutExecutorService()));
  cfg.dualModePutExecutorServiceShutdown(ggfs.getDualModePutExecutorServiceShutdown());
  cfg.dualModeMaxPendingPutsSize(ggfs.getDualModeMaxPendingPutsSize());
  cfg.maxTaskRangeLength(ggfs.getMaximumTaskRangeLength());
  cfg.fragmentizerConcurrentFiles(ggfs.getFragmentizerConcurrentFiles());
  cfg.fragmentizerLocalWritesRatio(ggfs.getFragmentizerLocalWritesRatio());
  cfg.fragmentizerEnabled(ggfs.isFragmentizerEnabled());
  cfg.fragmentizerThrottlingBlockLength(ggfs.getFragmentizerThrottlingBlockLength());
  cfg.fragmentizerThrottlingDelay(ggfs.getFragmentizerThrottlingDelay());
  cfg.ipcEndpointConfiguration("TODO");
  cfg.ipcEndpointEnabled(ggfs.isIpcEndpointEnabled());
  cfg.maxSpace(ggfs.getMaxSpaceSize());
  cfg.managementPort(ggfs.getManagementPort());
  cfg.sequenceReadsBeforePrefetch(ggfs.getSequentialReadsBeforePrefetch());
  cfg.trashPurgeTimeout(ggfs.getTrashPurgeTimeout());
  return cfg;
}
