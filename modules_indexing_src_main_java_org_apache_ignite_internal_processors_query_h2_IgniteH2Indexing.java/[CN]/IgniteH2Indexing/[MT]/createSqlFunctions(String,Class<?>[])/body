{
  if (F.isEmpty(clss))   return;
  for (  Class<?> cls : clss) {
    for (    Method m : cls.getDeclaredMethods()) {
      QuerySqlFunction ann=m.getAnnotation(QuerySqlFunction.class);
      if (ann != null) {
        int modifiers=m.getModifiers();
        if (!Modifier.isStatic(modifiers) || !Modifier.isPublic(modifiers))         throw new IgniteCheckedException("Method " + m.getName() + " must be public static.");
        String alias=ann.alias().isEmpty() ? m.getName() : ann.alias();
        String clause="CREATE ALIAS IF NOT EXISTS " + alias + (ann.deterministic() ? " DETERMINISTIC FOR \"" : " FOR \"")+ cls.getName()+ '.'+ m.getName()+ '"';
        executeStatement(schema,clause);
      }
    }
  }
}
