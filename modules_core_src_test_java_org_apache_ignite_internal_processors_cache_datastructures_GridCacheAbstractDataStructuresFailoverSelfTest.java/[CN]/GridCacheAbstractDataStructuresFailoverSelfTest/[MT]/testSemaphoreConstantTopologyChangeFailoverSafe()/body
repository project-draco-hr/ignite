{
  fail("https://issues.apache.org/jira/browse/IGNITE-1977");
  try (IgniteSemaphore s=grid(0).semaphore(STRUCTURE_NAME,TOP_CHANGE_CNT,true,true)){
    try {
      IgniteInternalFuture<?> fut=GridTestUtils.runMultiThreadedAsync(new CA(){
        @Override public void apply(){
          try {
            for (int i=0; i < TOP_CHANGE_CNT; i++) {
              String name=UUID.randomUUID().toString();
              try {
                Ignite g=startGrid(name);
                final IgniteSemaphore sem=g.semaphore(STRUCTURE_NAME,TOP_CHANGE_CNT,true,true);
                assertNotNull(sem);
                sem.acquire();
                if (i == TOP_CHANGE_CNT - 1) {
                  sem.release();
                }
              }
  finally {
                if (i != TOP_CHANGE_CNT - 1) {
                  stopGrid(name);
                }
              }
            }
          }
 catch (          Exception e) {
            throw F.wrap(e);
          }
        }
      }
,TOP_CHANGE_THREAD_CNT,"topology-change-thread");
      while (!fut.isDone()) {
        s.release();
        s.acquire();
      }
      fut.get();
      int val=s.availablePermits();
      assertEquals(val,TOP_CHANGE_CNT);
      for (      Ignite g : G.allGrids())       assertEquals(val,g.semaphore(STRUCTURE_NAME,TOP_CHANGE_CNT,true,true).availablePermits());
    }
  finally {
      grid(0).semaphore(STRUCTURE_NAME,TOP_CHANGE_CNT,true,true).close();
    }
  }
 }
