{
  IgniteClosure<Boolean,CacheContinuousQueryHandler> clsr;
  if (rmtFilterFactory != null)   clsr=new IgniteClosure<Boolean,CacheContinuousQueryHandler>(){
    @Override public CacheContinuousQueryHandler apply(    Boolean v2){
      CacheContinuousQueryHandler hnd;
      if (v2)       hnd=new CacheContinuousQueryHandlerV2(cctx.name(),TOPIC_CACHE.topic(topicPrefix,cctx.localNodeId(),seq.getAndIncrement()),locLsnr,rmtFilterFactory,true,false,true,false,null);
 else {
        CacheEntryEventFilter fltr=rmtFilterFactory.create();
        if (!(fltr instanceof CacheEntryEventSerializableFilter))         throw new IgniteException("Topology has nodes of the old versions. In this case " + "EntryEventFilter should implement " + "org.apache.ignite.cache.CacheEntryEventSerializableFilter interface. Filter: "+ fltr);
        hnd=new CacheContinuousQueryHandler(cctx.name(),TOPIC_CACHE.topic(topicPrefix,cctx.localNodeId(),seq.getAndIncrement()),locLsnr,(CacheEntryEventSerializableFilter)fltr,true,false,true,false);
      }
      return hnd;
    }
  }
;
 else   clsr=new IgniteClosure<Boolean,CacheContinuousQueryHandler>(){
    @Override public CacheContinuousQueryHandler apply(    Boolean ignore){
      return new CacheContinuousQueryHandler(cctx.name(),TOPIC_CACHE.topic(topicPrefix,cctx.localNodeId(),seq.getAndIncrement()),locLsnr,rmtFilter,true,false,true,false);
    }
  }
;
  return executeQuery0(locLsnr,clsr,bufSize,timeInterval,autoUnsubscribe,false,false,loc,keepBinary);
}
