{
  final long startEvtTime=arg.timeArgument() == null ? 0L : System.currentTimeMillis() - arg.timeArgument();
  final ConcurrentMap<String,Long> nl=ignite.cluster().nodeLocalMap();
  final Long startEvtOrder=arg.keyOrder() != null && nl.containsKey(arg.keyOrder()) ? nl.get(arg.keyOrder()) : -1L;
  Collection<Event> evts=ignite.events().localQuery(new IgnitePredicate<Event>(){
    /** 
 */
    private static final long serialVersionUID=0L;
    @Override public boolean apply(    Event evt){
      return evt.localOrder() > startEvtOrder && (arg.typeArgument() == null || F.contains(arg.typeArgument(),evt.type())) && (evt.timestamp() >= startEvtTime) && (arg.taskName() == null || filterByTaskName(evt,arg.taskName())) && (arg.taskSessionId() == null || filterByTaskSessionId(evt,arg.taskSessionId()));
    }
  }
);
  Collection<VisorGridEvent> res=new ArrayList<>(evts.size());
  Long maxOrder=startEvtOrder;
  IgniteClosure<Event,VisorGridEvent> mapper=eventMapper();
  for (  Event e : evts) {
    maxOrder=Math.max(maxOrder,e.localOrder());
    VisorGridEvent visorEvt=mapper.apply(e);
    if (visorEvt != null)     res.add(visorEvt);
 else     res.add(new VisorGridEvent(e.type(),e.id(),e.name(),e.node().id(),e.timestamp(),e.message(),e.shortDisplay()));
  }
  if (arg.keyOrder() != null && !res.isEmpty())   nl.put(arg.keyOrder(),maxOrder);
  return res;
}
