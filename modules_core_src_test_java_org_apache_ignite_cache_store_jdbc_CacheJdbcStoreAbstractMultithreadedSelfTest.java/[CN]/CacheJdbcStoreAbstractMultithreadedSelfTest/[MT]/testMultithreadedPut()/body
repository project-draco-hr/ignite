{
  IgniteInternalFuture<?> fut1=runMultiThreadedAsync(new Callable<Object>(){
    private final Random rnd=new Random();
    @Nullable @Override public Object call() throws Exception {
      for (int i=0; i < TX_CNT; i++) {
        IgniteCache<Object,Object> cache=jcache();
        int id=rnd.nextInt(1000);
        if (rnd.nextBoolean())         cache.put(new OrganizationKey(id),new Organization(id,"Name" + id,"City" + id));
 else         cache.put(new PersonKey(id),new Person(id,rnd.nextInt(),new Date(System.currentTimeMillis()),"Name" + id,1));
      }
      return null;
    }
  }
,4,"put");
  IgniteInternalFuture<?> fut2=runMultiThreadedAsync(new Callable<Object>(){
    private final Random rnd=new Random();
    @Nullable @Override public Object call() throws Exception {
      for (int i=0; i < TX_CNT; i++) {
        IgniteCache<Object,Object> cache=jcache();
        int id=rnd.nextInt(1000);
        if (rnd.nextBoolean())         cache.putIfAbsent(new OrganizationKey(id),new Organization(id,"Name" + id,"City" + id));
 else         cache.putIfAbsent(new PersonKey(id),new Person(id,rnd.nextInt(),new Date(System.currentTimeMillis()),"Name" + id,i));
      }
      return null;
    }
  }
,8,"putIfAbsent");
  fut1.get();
  fut2.get();
}
