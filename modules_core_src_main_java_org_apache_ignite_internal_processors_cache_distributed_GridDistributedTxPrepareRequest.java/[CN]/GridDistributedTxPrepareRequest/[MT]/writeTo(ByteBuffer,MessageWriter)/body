{
  writer.setBuffer(buf);
  if (!super.writeTo(buf,writer))   return false;
  if (!writer.isTypeWritten()) {
    if (!writer.writeMessageType(directType()))     return false;
    writer.onTypeWritten();
  }
switch (writer.state()) {
case 8:
    if (!writer.writeField("commitVer",commitVer,MessageFieldType.MSG))     return false;
  writer.incrementState();
case 9:
if (!writer.writeField("concurrency",concurrency != null ? (byte)concurrency.ordinal() : -1,MessageFieldType.BYTE)) return false;
writer.incrementState();
case 10:
if (!writer.writeField("dhtVersBytes",dhtVersBytes,MessageFieldType.BYTE_ARR)) return false;
writer.incrementState();
case 11:
if (!writer.writeField("grpLockKeyBytes",grpLockKeyBytes,MessageFieldType.BYTE_ARR)) return false;
writer.incrementState();
case 12:
if (!writer.writeField("invalidate",invalidate,MessageFieldType.BOOLEAN)) return false;
writer.incrementState();
case 13:
if (!writer.writeField("isolation",isolation != null ? (byte)isolation.ordinal() : -1,MessageFieldType.BYTE)) return false;
writer.incrementState();
case 14:
if (!writer.writeField("partLock",partLock,MessageFieldType.BOOLEAN)) return false;
writer.incrementState();
case 15:
if (!writer.writeCollectionField("readsBytes",readsBytes,MessageFieldType.BYTE_ARR)) return false;
writer.incrementState();
case 16:
if (!writer.writeField("sys",sys,MessageFieldType.BOOLEAN)) return false;
writer.incrementState();
case 17:
if (!writer.writeField("threadId",threadId,MessageFieldType.LONG)) return false;
writer.incrementState();
case 18:
if (!writer.writeField("timeout",timeout,MessageFieldType.LONG)) return false;
writer.incrementState();
case 19:
if (!writer.writeField("txNodesBytes",txNodesBytes,MessageFieldType.BYTE_ARR)) return false;
writer.incrementState();
case 20:
if (!writer.writeField("txSize",txSize,MessageFieldType.INT)) return false;
writer.incrementState();
case 21:
if (!writer.writeCollectionField("writesBytes",writesBytes,MessageFieldType.BYTE_ARR)) return false;
writer.incrementState();
}
return true;
}
