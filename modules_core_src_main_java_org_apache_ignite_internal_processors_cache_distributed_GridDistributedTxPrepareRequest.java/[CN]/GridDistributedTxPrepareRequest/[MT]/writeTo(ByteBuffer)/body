{
  writer.setBuffer(buf);
  if (!super.writeTo(buf))   return false;
  if (!typeWritten) {
    if (!writer.writeByte(null,directType()))     return false;
    typeWritten=true;
  }
switch (state) {
case 8:
    if (!writer.writeEnum("concurrency",concurrency))     return false;
  state++;
case 9:
if (!writer.writeByteArray("dhtVersBytes",dhtVersBytes)) return false;
state++;
case 10:
if (!writer.writeByteArray("grpLockKeyBytes",grpLockKeyBytes)) return false;
state++;
case 11:
if (!writer.writeBoolean("invalidate",invalidate)) return false;
state++;
case 12:
if (!writer.writeEnum("isolation",isolation)) return false;
state++;
case 13:
if (!writer.writeBoolean("onePhaseCommit",onePhaseCommit)) return false;
state++;
case 14:
if (!writer.writeBoolean("partLock",partLock)) return false;
state++;
case 15:
if (!writer.writeCollection("readsBytes",readsBytes,byte[].class)) return false;
state++;
case 16:
if (!writer.writeBoolean("sys",sys)) return false;
state++;
case 17:
if (!writer.writeLong("threadId",threadId)) return false;
state++;
case 18:
if (!writer.writeLong("timeout",timeout)) return false;
state++;
case 19:
if (!writer.writeByteArray("txNodesBytes",txNodesBytes)) return false;
state++;
case 20:
if (!writer.writeInt("txSize",txSize)) return false;
state++;
case 21:
if (!writer.writeMessage("writeVer",writeVer)) return false;
state++;
case 22:
if (!writer.writeCollection("writesBytes",writesBytes,byte[].class)) return false;
state++;
}
return true;
}
