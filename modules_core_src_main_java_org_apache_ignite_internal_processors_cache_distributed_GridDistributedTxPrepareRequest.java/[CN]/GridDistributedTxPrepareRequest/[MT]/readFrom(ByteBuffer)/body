{
  reader.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (readState) {
case 8:
    commitVer=reader.readMessage("commitVer");
  if (!reader.isLastRead())   return false;
readState++;
case 9:
byte concurrencyOrd;
concurrencyOrd=reader.readByte("concurrency");
if (!reader.isLastRead()) return false;
concurrency=IgniteTxConcurrency.fromOrdinal(concurrencyOrd);
readState++;
case 10:
dhtVersBytes=reader.readByteArray("dhtVersBytes");
if (!reader.isLastRead()) return false;
readState++;
case 11:
grpLockKeyBytes=reader.readByteArray("grpLockKeyBytes");
if (!reader.isLastRead()) return false;
readState++;
case 12:
invalidate=reader.readBoolean("invalidate");
if (!reader.isLastRead()) return false;
readState++;
case 13:
byte isolationOrd;
isolationOrd=reader.readByte("isolation");
if (!reader.isLastRead()) return false;
isolation=IgniteTxIsolation.fromOrdinal(isolationOrd);
readState++;
case 14:
partLock=reader.readBoolean("partLock");
if (!reader.isLastRead()) return false;
readState++;
case 15:
readsBytes=reader.readCollection("readsBytes",byte[].class);
if (!reader.isLastRead()) return false;
readState++;
case 16:
sys=reader.readBoolean("sys");
if (!reader.isLastRead()) return false;
readState++;
case 17:
threadId=reader.readLong("threadId");
if (!reader.isLastRead()) return false;
readState++;
case 18:
timeout=reader.readLong("timeout");
if (!reader.isLastRead()) return false;
readState++;
case 19:
txNodesBytes=reader.readByteArray("txNodesBytes");
if (!reader.isLastRead()) return false;
readState++;
case 20:
txSize=reader.readInt("txSize");
if (!reader.isLastRead()) return false;
readState++;
case 21:
writesBytes=reader.readCollection("writesBytes",byte[].class);
if (!reader.isLastRead()) return false;
readState++;
}
return true;
}
