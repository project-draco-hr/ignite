{
  stopGridErr=false;
  clsLdr=Thread.currentThread().getContextClassLoader();
  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());
  LT.clear();
  GridLicenseUseRegistry.clear();
  TestCounters cntrs=getTestCounters();
  if (isDebug())   info("Test counters [numOfTests=" + cntrs.getNumberOfTests() + ", started="+ cntrs.getStarted()+ ", stopped="+ cntrs.getStopped()+ ']');
  if (cntrs.isReset()) {
    info("Resetting test counters.");
    int started=cntrs.getStarted() % cntrs.getNumberOfTests();
    int stopped=cntrs.getStopped() % cntrs.getNumberOfTests();
    cntrs.reset();
    cntrs.setStarted(started);
    cntrs.setStopped(stopped);
  }
  if (isFirstTest()) {
    info(">>> Starting test class: " + getClass().getSimpleName() + " <<<");
    if (startGrid) {
      GridConfiguration cfg=optimize(getConfiguration());
      G.start(cfg);
    }
    try {
      beforeTestsStarted();
    }
 catch (    Exception|Error t) {
      t.printStackTrace();
      getTestCounters().setStopped(getTestCounters().getNumberOfTests() - 1);
      try {
        tearDown();
      }
 catch (      Exception e) {
        log.error("Failed to tear down test after exception was thrown in beforeTestsStarted (will " + "ignore)",e);
      }
      throw t;
    }
  }
  info(">>> Starting test: " + getName() + " <<<");
  try {
    beforeTest();
  }
 catch (  Exception|Error t) {
    try {
      tearDown();
    }
 catch (    Exception e) {
      log.error("Failed to tear down test after exception was thrown in beforeTest (will ignore)",e);
    }
    throw t;
  }
  ts=System.currentTimeMillis();
}
