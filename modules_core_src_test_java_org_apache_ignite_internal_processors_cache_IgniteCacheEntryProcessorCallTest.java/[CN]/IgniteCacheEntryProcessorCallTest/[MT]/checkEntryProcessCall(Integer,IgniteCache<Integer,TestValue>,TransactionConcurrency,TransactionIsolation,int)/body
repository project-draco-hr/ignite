{
  Ignite ignite=cache.unwrap(Ignite.class);
  ClusterNode primary=ignite.affinity(cache.getName()).mapKeyToNode(key);
  assertNotNull(primary);
  log.info("Check call [key=" + key + ", primary="+ primary.attribute(ATTR_GRID_NAME)+ ", concurrency="+ concurrency+ ", isolation="+ isolation+ "]");
  Transaction tx;
  TestReturnValue retVal;
  log.info("Invoke: " + key);
  callCnt.set(0);
  tx=startTx(cache,concurrency,isolation);
  retVal=cache.invoke(key,new TestEntryProcessor(OP_UPDATE),new TestValue(Integer.MIN_VALUE));
  if (tx != null)   tx.commit();
  assertEquals(expCallCnt,callCnt.get());
  checkReturnValue(retVal,"null");
  checkCacheValue(cache.getName(),key,new TestValue(0));
  log.info("Invoke: " + key);
  callCnt.set(0);
  tx=startTx(cache,concurrency,isolation);
  retVal=cache.invoke(key,new TestEntryProcessor(OP_GET),new TestValue(Integer.MIN_VALUE));
  if (tx != null)   tx.commit();
  assertEquals(expCallCnt,callCnt.get());
  checkReturnValue(retVal,"0");
  checkCacheValue(cache.getName(),key,new TestValue(0));
  log.info("Invoke: " + key);
  callCnt.set(0);
  tx=startTx(cache,concurrency,isolation);
  retVal=cache.invoke(key,new TestEntryProcessor(OP_UPDATE),new TestValue(Integer.MIN_VALUE));
  if (tx != null)   tx.commit();
  assertEquals(expCallCnt,callCnt.get());
  checkReturnValue(retVal,"0");
  checkCacheValue(cache.getName(),key,new TestValue(1));
  log.info("Invoke: " + key);
  callCnt.set(0);
  tx=startTx(cache,concurrency,isolation);
  retVal=cache.invoke(key,new TestEntryProcessor(OP_REMOVE),new TestValue(Integer.MIN_VALUE));
  if (tx != null)   tx.commit();
  assertEquals(expCallCnt,callCnt.get());
  checkReturnValue(retVal,"1");
  checkCacheValue(cache.getName(),key,null);
}
