{
  try (Grid g=GridGain.start(args.length == 0 ? CONFIG : args[0])){
    Collection<String> keys=new ArrayList<>('Z' - 'A' + 1);
    for (char c='A'; c <= 'Z'; c++)     keys.add(Character.toString(c));
    populateCache(g,keys);
    Map<GridNode,Collection<String>> mappings=g.mapKeysToNodes(NAME,keys);
    for (    Map.Entry<GridNode,Collection<String>> mapping : mappings.entrySet()) {
      GridNode node=mapping.getKey();
      final Collection<String> mappedKeys=mapping.getValue();
      if (node != null) {
        g.forNode(node).compute().run(UNICAST,new GridRunnable(){
          @Override public void run(){
            info("Executing affinity job for keys: " + mappedKeys);
            GridCache<String,String> cache=g.cache(NAME);
            if (cache == null) {
              info("Cache not found [nodeId=" + g.localNode().id() + ", cacheName="+ NAME+ ']');
              return;
            }
            for (            String key : mappedKeys)             info("Peeked at: " + cache.peek(key));
          }
        }
).get();
      }
    }
  }
 }
