{
  try {
    for (int i=0; i < args.length; i++) {
      String arg=args[i];
switch (arg) {
case "-k":
        keyCnt=Integer.valueOf(args[++i]);
      break;
case "-r":
    getRmvRatio=Float.valueOf(args[++i]);
  break;
case "-pt":
putThreadCnt=Integer.valueOf(args[++i]);
break;
case "-gt":
getThreadCnt=Integer.valueOf(args[++i]);
break;
case "-rt":
rmvThreadCnt=Integer.valueOf(args[++i]);
break;
case "-dgr":
getRmvEnabled=false;
break;
default :
usage();
}
}
}
 catch (Exception e) {
e.printStackTrace();
usage();
}
X.println(">>>");
X.println(">>> Key count: " + keyCnt);
X.println(">>> Get/remove ratio: " + getRmvRatio);
X.println(">>> Put threads count: " + putThreadCnt);
X.println(">>> Get threads count: " + getThreadCnt);
X.println(">>> Remove threads count: " + rmvThreadCnt);
X.println(">>> Get/remove " + (getRmvEnabled ? "enabled" : "disabled") + ".");
X.println(">>>");
}
