{
  if (futVer != null)   cctx.mvcc().removeAtomicFuture(version());
  Collection<Object> remapKeys=new ArrayList<>(failed.size());
  Collection<Object> remapVals=vals != null ? new ArrayList<>(failed.size()) : null;
  Iterator<?> keyIt=keys.iterator();
  Iterator<?> valsIt=vals != null ? vals.iterator() : null;
  for (  Object key : failed) {
    while (keyIt.hasNext()) {
      Object nextKey=keyIt.next();
      Object nextVal=valsIt != null ? valsIt.next() : null;
      if (F.eq(key,nextKey)) {
        remapKeys.add(nextKey);
        if (remapVals != null)         remapVals.add(nextVal);
        break;
      }
    }
  }
  keys=remapKeys;
  vals=remapVals;
  mappings=new ConcurrentHashMap8<>(keys.size(),1.0f);
  single=null;
  futVer=null;
  err=null;
  opRes=null;
  topVer=AffinityTopologyVersion.ZERO;
  singleNodeId=null;
  singleReq=null;
  fastMapRemap=false;
  updVer=null;
  topLocked=false;
  map();
}
