{
  try {
    outBase=U.resolveWorkDirectory("hadoop",false);
    final Collection<URL> jars=new ArrayList<>();
    File dir=jobJarsFolder(jobId,uniqueWorkDir);
    if (!dir.exists())     return;
    Files.walkFileTree(dir.toPath(),new SimpleFileVisitor<java.nio.file.Path>(){
      @Override public FileVisitResult visitFile(      java.nio.file.Path file,      BasicFileAttributes attrs) throws IOException {
        if (file.getFileName().toString().endsWith(".jar"))         jars.add(file.toUri().toURL());
        return super.visitFile(file,attrs);
      }
    }
);
    URL[] urls=new URL[jars.size()];
    jars.toArray(urls);
    final URLClassLoader urlLdr=new URLClassLoader(urls);
    jobLdr=new ClassLoaderWrapper(urlLdr,getClass().getClassLoader());
  }
 catch (  IOException e) {
    throw new GridException(e);
  }
}
