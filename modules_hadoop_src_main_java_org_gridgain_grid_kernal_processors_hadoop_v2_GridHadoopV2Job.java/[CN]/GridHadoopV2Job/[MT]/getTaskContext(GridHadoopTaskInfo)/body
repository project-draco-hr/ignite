{
  GridFutureAdapter<GridHadoopTaskContext> fut=new GridFutureAdapter<>();
  T2<GridHadoopTaskType,Integer> locTaskId=new T2<>(info.type(),info.taskNumber());
  GridFutureAdapter<GridHadoopTaskContext> old=ctxs.putIfAbsent(locTaskId,fut);
  if (old != null)   return old.get();
  GridHadoopClassLoader ldr=new GridHadoopClassLoader(rsrcMgr.classPath());
  try {
    Class<?> cls=ldr.loadClassExplicitly(GridHadoopV2TaskContext.class.getName());
    Constructor<?> ctr=cls.getConstructor(GridHadoopTaskInfo.class,GridHadoopJob.class,GridHadoopJobId.class);
    GridHadoopTaskContext res=(GridHadoopTaskContext)ctr.newInstance(info,this,jobId);
    fut.onDone(res);
    return res;
  }
 catch (  Throwable e) {
    GridException te=transformException(e);
    fut.onDone(te);
    throw te;
  }
}
