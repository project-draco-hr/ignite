{
  long ptr=valPtr;
  int size=UNSAFE.getInt(ptr);
  ptr+=4;
  byte type=UNSAFE.getByte(ptr++);
  byte[] bytes=U.copyMemory(ptr,size);
  if (ctx.kernalContext().config().isPeerClassLoadingEnabled() && ctx.offheapTiered() && type != CacheObjectAdapter.TYPE_BYTE_ARR) {
    IgniteUuid valClsLdrId=U.readGridUuid(ptr + size);
    ClassLoader ldr=valClsLdrId != null ? ctx.deploy().getClassLoader(valClsLdrId) : ctx.deploy().localLoader();
    return toCacheObject(ctx.cacheObjectContext(),unmarshal(ctx.cacheObjectContext(),bytes,ldr));
  }
 else   return toCacheObject(ctx.cacheObjectContext(),type,bytes);
}
