{
  GridClientData dfltData=client.data();
  assertNotNull(dfltData);
  GridClientData namedData=client.data(CACHE_NAME);
  assertNotNull(namedData);
  assertFalse(dfltData.replace("key1","val1"));
  grid().jcache(null).put("key1","val1");
  assertTrue(dfltData.replace("key1","val2"));
  assertEquals("val2",grid().jcache(null).get("key1"));
  assertFalse(dfltData.replace("key2","val1"));
  grid().jcache(null).put("key2","val1");
  assertTrue(dfltData.replace("key2","val2"));
  assertEquals("val2",grid().jcache(null).get("key2"));
  grid().jcache(null).removeAll(F.asSet("key1","key2"));
  assertFalse(dfltData.replaceAsync("key1","val1").get());
  grid().jcache(null).put("key1","val1");
  assertTrue(dfltData.replaceAsync("key1","val2").get());
  assertEquals("val2",grid().jcache(null).get("key1"));
  assertFalse(dfltData.replaceAsync("key2","val1").get());
  grid().jcache(null).put("key2","val1");
  assertTrue(dfltData.replaceAsync("key2","val2").get());
  assertEquals("val2",grid().jcache(null).get("key2"));
  assertFalse(namedData.replace("key1","val1"));
  IgniteCache<Object,Object> cache=grid().jcache(CACHE_NAME);
  cache.put("key1","val1");
  assertTrue(namedData.replace("key1","val2"));
  assertEquals("val2",cache.get("key1"));
  assertFalse(namedData.replaceAsync("key2","val1").get());
  cache.put("key2","val1");
  assertTrue(namedData.replaceAsync("key2","val2").get());
  assertEquals("val2",cache.get("key2"));
  cache.removeAll(F.asSet("key1","key2"));
  assertFalse(namedData.replaceAsync("key1","val1").get());
  cache.put("key1","val1");
  assertTrue(namedData.replaceAsync("key1","val2").get());
  assertEquals("val2",cache.get("key1"));
  assertFalse(namedData.replaceAsync("key2","val1").get());
  cache.put("key2","val1");
  assertTrue(namedData.replaceAsync("key2","val2").get());
}
