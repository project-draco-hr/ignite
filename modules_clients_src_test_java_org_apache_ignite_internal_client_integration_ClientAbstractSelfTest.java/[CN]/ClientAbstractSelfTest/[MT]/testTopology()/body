{
  GridClientCompute compute=client.compute();
  List<GridClientNode> top=compute.refreshTopology(true,true);
  assertNotNull(top);
  assertEquals(1,top.size());
  GridClientNode node=F.first(top);
  assertNotNull(node);
  assertFalse(node.attributes().isEmpty());
  assertNotNull(node.tcpAddresses());
  assertEquals(grid().localNode().id(),node.nodeId());
  assertNotNull(node.metrics());
  top=compute.refreshTopology(false,false);
  node=F.first(top);
  assertNotNull(top);
  assertEquals(1,top.size());
  assertNull(node.metrics());
  assertTrue(node.attributes().isEmpty());
  node=F.first(top);
  assertNotNull(node);
  assertTrue(node.attributes().isEmpty());
  assertNull(node.metrics());
  assertNotNull(node.tcpAddresses());
  assertEquals(grid().localNode().id(),node.nodeId());
  top=compute.refreshTopologyAsync(true,true).get();
  assertNotNull(top);
  assertEquals(1,top.size());
  node=F.first(top);
  assertNotNull(node);
  assertFalse(node.attributes().isEmpty());
  assertNotNull(node.metrics());
  assertNotNull(node.tcpAddresses());
  assertEquals(grid().localNode().id(),node.nodeId());
  top=compute.refreshTopologyAsync(false,false).get();
  assertNotNull(top);
  assertEquals(1,top.size());
  node=F.first(top);
  assertNotNull(node);
  assertTrue(node.attributes().isEmpty());
  assertNull(node.metrics());
  assertNotNull(node.tcpAddresses());
  assertEquals(grid().localNode().id(),node.nodeId());
}
