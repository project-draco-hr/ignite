{
  GridClientData dfltData=client.data();
  assertNotNull(dfltData);
  GridClientData namedData=client.data(CACHE_NAME);
  assertNotNull(namedData);
  assertTrue(grid().cache(null).putx("key1","val1"));
  assertTrue(grid().cache(null).putx("key2","val2"));
  Map<String,String> map=dfltData.getAll(F.asList("key1","key2"));
  assertEquals(2,map.size());
  assertEquals("val1",map.get("key1"));
  assertEquals("val2",map.get("key2"));
  assertTrue(grid().cache(null).putx("key3","val3"));
  assertTrue(grid().cache(null).putx("key4","val4"));
  map=dfltData.getAll(F.asList("key3","key4"));
  assertEquals(2,map.size());
  assertEquals("val3",map.get("key3"));
  assertEquals("val4",map.get("key4"));
  map=dfltData.getAll(F.asList("key1"));
  assertEquals(1,map.size());
  assertEquals("val1",map.get("key1"));
  assertTrue(grid().cache(CACHE_NAME).putx("key1","val1"));
  assertTrue(grid().cache(CACHE_NAME).putx("key2","val2"));
  map=namedData.getAll(F.asList("key1","key2"));
  assertEquals(2,map.size());
  assertEquals("val1",map.get("key1"));
  assertEquals("val2",map.get("key2"));
  assertTrue(grid().cache(CACHE_NAME).putx("key3","val3"));
  assertTrue(grid().cache(CACHE_NAME).putx("key4","val4"));
  map=namedData.getAll(F.asList("key3","key4"));
  assertEquals(2,map.size());
  assertEquals("val3",map.get("key3"));
  assertEquals("val4",map.get("key4"));
  map=namedData.getAll(F.asList("key1"));
  assertEquals(1,map.size());
  assertEquals("val1",map.get("key1"));
}
