{
switch (type) {
case OP_DOTNET_DEPLOY:
{
      ServiceConfiguration cfg=new ServiceConfiguration();
      cfg.setName(reader.readString());
      cfg.setService(new PlatformDotNetServiceImpl(reader.readObjectDetached(),platformCtx,srvKeepBinary));
      cfg.setTotalCount(reader.readInt());
      cfg.setMaxPerNodeCount(reader.readInt());
      cfg.setCacheName(reader.readString());
      cfg.setAffinityKey(reader.readObjectDetached());
      Object filter=reader.readObjectDetached();
      if (filter != null)       cfg.setNodeFilter(platformCtx.createClusterNodeFilter(filter));
      services.deploy(cfg);
      return TRUE;
    }
case OP_DOTNET_DEPLOY_MULTIPLE:
{
    String name=reader.readString();
    Object svc=reader.readObjectDetached();
    int totalCnt=reader.readInt();
    int maxPerNodeCnt=reader.readInt();
    services.deployMultiple(name,new PlatformDotNetServiceImpl(svc,platformCtx,srvKeepBinary),totalCnt,maxPerNodeCnt);
    return TRUE;
  }
default :
return super.processInStreamOutLong(type,reader);
}
}
