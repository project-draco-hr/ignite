{
  for (int i=0; i < gridCount(); i++) {
    Ignite g=grid(i);
    if (F.eq(g.name(),nearOnlyGridName)) {
      for (int k=0; k < 10000; k++) {
        IgniteCache<Object,Object> cache=g.cache(null);
        String key="key" + k;
        if (cacheMode() == PARTITIONED)         assertFalse(affinity(cache).isPrimaryOrBackup(g.cluster().localNode(),key));
        assertFalse(affinity(cache).mapKeyToPrimaryAndBackups(key).contains(g.cluster().localNode()));
      }
    }
 else {
      boolean foundEntry=false;
      boolean foundAffinityNode=false;
      for (int k=0; k < 10000; k++) {
        String key="key" + k;
        if (g.affinity(null).isPrimaryOrBackup(g.cluster().localNode(),key))         foundEntry=true;
        if (g.affinity(null).mapKeyToPrimaryAndBackups(key).contains(g.cluster().localNode()))         foundAffinityNode=true;
      }
      assertTrue("Did not found primary or backup entry for grid: " + i,foundEntry);
      assertTrue("Did not found affinity node for grid: " + i,foundAffinityNode);
    }
  }
}
