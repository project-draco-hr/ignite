{
  final AtomicBoolean finish=new AtomicBoolean();
  CountDownLatch latch=new CountDownLatch(1);
  Thread[] threads=new Thread[threadCnt];
  Worker[] workers=new Worker[threadCnt];
  for (int i=0; i < threadCnt; i++) {
    workers[i]=new Worker(arrSize,finish,latch);
    threads[i]=new Thread(workers[i]);
    threads[i].start();
  }
  latch.countDown();
  Thread.sleep(5000L);
  finish.set(true);
  for (  Thread t : threads)   t.join();
  long sum=0;
  for (  Worker worker : workers)   sum+=worker.sum();
  X.println("Thread count results [sum=" + sum + ", arrSize="+ arrSize+ ", threadCnt="+ threadCnt+ ']');
}
