{
  Collection<List<?>> rows=new ArrayList<>(indexes.size());
  for (  List<Object> idx : indexes) {
    String idxSchema=(String)idx.get(0);
    String idxTbl=(String)idx.get(1);
    if ((schema == null || schema.equals(idxSchema)) && (tbl == null || tbl.equals(idxTbl))) {
      List<Object> row=new ArrayList<>(13);
      row.add(null);
      row.add(idxSchema);
      row.add(idxTbl);
      row.add(idx.get(2));
      row.add(null);
      row.add(idx.get(3));
      row.add((int)tableIndexOther);
      row.add(idx.get(4));
      row.add(idx.get(5));
      row.add((Boolean)idx.get(6) ? "D" : "A");
      row.add(0);
      row.add(0);
      row.add(null);
      rows.add(row);
    }
  }
  return new JdbcResultSet(null,conn.createStatement0(),Collections.<String>emptyList(),Arrays.asList("TABLE_CAT","TABLE_SCHEM","TABLE_NAME","NON_UNIQUE","INDEX_QUALIFIER","INDEX_NAME","TYPE","ORDINAL_POSITION","COLUMN_NAME","ASC_OR_DESC","CARDINALITY","PAGES","FILTER_CONDITION"),Arrays.asList(String.class.getName(),String.class.getName(),String.class.getName(),Boolean.class.getName(),String.class.getName(),String.class.getName(),Short.class.getName(),Short.class.getName(),String.class.getName(),String.class.getName(),Integer.class.getName(),Integer.class.getName(),String.class.getName()),rows,true);
}
