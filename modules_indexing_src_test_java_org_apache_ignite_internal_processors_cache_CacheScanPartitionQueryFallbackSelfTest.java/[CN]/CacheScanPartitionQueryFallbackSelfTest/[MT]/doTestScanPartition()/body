{
  try {
    Ignite ignite=startGrids(GRID_CNT);
    IgniteCacheProxy<Integer,Integer> cache=(IgniteCacheProxy<Integer,Integer>)ignite.<Integer,Integer>cache(null);
    Map<Integer,Map<Integer,Integer>> entries=new HashMap<>();
    for (int i=0; i < KEYS_CNT; i++) {
      cache.put(i,i);
      int part=cache.context().affinity().partition(i);
      Map<Integer,Integer> partEntries=entries.get(part);
      if (partEntries == null)       entries.put(part,partEntries=new HashMap<>());
      partEntries.put(i,i);
    }
    IgniteBiTuple<Integer,UUID> tup=remotePartition(cache.context(),true);
    int part=tup.get1();
    if (fallback)     failNodeId=tup.get2();
 else     expNodeId=tup.get2();
    if (fallback)     expNodeId=remoteBackup(part,cache.context());
    CacheQuery<Map.Entry<Integer,Integer>> qry=cache.context().queries().createScanQuery(null,part,false);
    CacheQueryFuture<Map.Entry<Integer,Integer>> fut=qry.execute();
    Collection<Map.Entry<Integer,Integer>> expEntries=fut.get();
    for (    Map.Entry<Integer,Integer> e : expEntries) {
      Map<Integer,Integer> map=entries.get(part);
      if (map == null)       assertTrue(expEntries.isEmpty());
 else       assertEquals(map.get(e.getKey()),e.getValue());
    }
  }
  finally {
    stopAllGrids();
  }
}
