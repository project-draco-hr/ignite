{
  if (!busyLock.enterBusy())   return;
  try {
    final AffinityTopologyVersion topVer;
    if (evt instanceof DiscoveryCustomEvent) {
      DiscoveryCustomMessage msg=((DiscoveryCustomEvent)evt).customMessage();
      topVer=((DiscoveryCustomEvent)evt).affinityTopologyVersion();
      if (msg instanceof CacheAffinityChangeMessage) {
        if (!((CacheAffinityChangeMessage)msg).exchangeNeeded())         return;
      }
    }
 else     topVer=new AffinityTopologyVersion(((DiscoveryEvent)evt).topologyVersion(),0);
    depExe.submit(new BusyRunnable(){
      @Override public void run0(){
        ClusterNode oldest=CU.oldestAliveCacheServerNode(cache.context().shared(),topVer);
        if (oldest != null && oldest.isLocal()) {
          final Collection<GridServiceDeployment> retries=new ConcurrentLinkedQueue<>();
          if (ctx.deploy().enabled())           ctx.cache().context().deploy().ignoreOwnership(true);
          try {
            Iterator<Cache.Entry<Object,Object>> it=serviceEntries(ServiceDeploymentPredicate.INSTANCE);
            while (it.hasNext()) {
              Cache.Entry<Object,Object> e=it.next();
              if (!(e.getKey() instanceof GridServiceDeploymentKey))               continue;
              GridServiceDeployment dep=(GridServiceDeployment)e.getValue();
              try {
                svcName.set(dep.configuration().getName());
                ctx.cache().internalCache(UTILITY_CACHE_NAME).context().affinity().affinityReadyFuture(topVer).get();
                reassign(dep,topVer);
              }
 catch (              IgniteCheckedException ex) {
                if (!(e instanceof ClusterTopologyCheckedException))                 LT.error(log,ex,"Failed to do service reassignment (will retry): " + dep.configuration().getName());
                retries.add(dep);
              }
            }
          }
  finally {
            if (ctx.deploy().enabled())             ctx.cache().context().deploy().ignoreOwnership(false);
          }
          if (!retries.isEmpty())           onReassignmentFailed(topVer,retries);
        }
        for (        Cache.Entry<Object,Object> e : cache.entrySetx(CU.cachePrimary(ctx.grid().affinity(cache.name()),ctx.grid().localNode()))) {
          if (!(e.getKey() instanceof GridServiceAssignmentsKey))           continue;
          String name=((GridServiceAssignmentsKey)e.getKey()).name();
          try {
            if (cache.get(new GridServiceDeploymentKey(name)) == null) {
              if (log.isDebugEnabled())               log.debug("Removed zombie assignments: " + e.getValue());
              cache.getAndRemove(e.getKey());
            }
          }
 catch (          IgniteCheckedException ex) {
            U.error(log,"Failed to clean up zombie assignments for service: " + name,ex);
          }
        }
      }
    }
);
  }
  finally {
    busyLock.leaveBusy();
  }
}
