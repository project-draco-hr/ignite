{
  assertEmpty(mgr.directoryListing(ROOT_ID));
  assertTrue(mgr.mkdirs(new IgfsPath("/dir"),IgfsImpl.DFLT_DIR_META));
  assertNotNull(mgr.create(new IgfsPath("/file"),null,false,400,null,false,null,null));
  IgfsListingEntry dirEntry=mgr.directoryListing(ROOT_ID).get("dir");
  assertNotNull(dirEntry);
  assertTrue(dirEntry.isDirectory());
  IgfsEntryInfo dir=mgr.info(dirEntry.fileId());
  IgfsListingEntry fileEntry=mgr.directoryListing(ROOT_ID).get("file");
  assertNotNull(fileEntry);
  assertTrue(!fileEntry.isDirectory());
  IgfsEntryInfo file=mgr.info(fileEntry.fileId());
  assertEquals(2,mgr.directoryListing(ROOT_ID).size());
  for (  IgniteBiTuple<IgniteUuid,String> tup : Arrays.asList(F.t(dir.id(),"dir"),F.t(file.id(),"file"))) {
    IgniteUuid fileId=tup.get1();
    String fileName=tup.get2();
    for (    Map<String,String> props : Arrays.asList(null,Collections.<String,String>emptyMap()))     expectsUpdatePropertiesFail(fileId,props,AssertionError.class,"Expects not-empty file's properties");
    String key1=UUID.randomUUID().toString();
    String key2=UUID.randomUUID().toString();
    IgfsEntryInfo info=mgr.info(fileId);
    assertNull("Unexpected stored properties: " + info,info.properties().get(key1));
    assertNull("Unexpected stored properties: " + info,info.properties().get(key2));
    info=mgr.updateProperties(fileId,F.asMap(key1,"1"));
    assertEquals("Unexpected stored properties: " + info,"1",info.properties().get(key1));
    info=mgr.updateProperties(fileId,F.asMap(key2,"2"));
    assertEquals("Unexpected stored properties: " + info,"1",info.properties().get(key1));
    assertEquals("Unexpected stored properties: " + info,"2",info.properties().get(key2));
    info=mgr.updateProperties(fileId,F.<String,String>asMap(key1,null));
    assertEquals("Unexpected stored properties: " + info,"2",info.properties().get(key2));
    info=mgr.updateProperties(fileId,F.<String,String>asMap(key2,null));
    assertNull("Unexpected stored properties: " + info,info.properties().get(key1));
    assertNull("Unexpected stored properties: " + info,info.properties().get(key2));
  }
  mgr.softDelete(new IgfsPath("/dir"),true,null);
  mgr.softDelete(new IgfsPath("/file"),false,null);
  assertNull(mgr.updateProperties(dir.id(),F.asMap("p","7")));
}
