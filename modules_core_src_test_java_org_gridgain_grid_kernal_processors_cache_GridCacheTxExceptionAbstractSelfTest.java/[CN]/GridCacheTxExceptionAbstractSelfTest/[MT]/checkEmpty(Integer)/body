{
  idxSpi.forceFail(false);
  info("Check key: " + key);
  for (int i=0; i < gridCount(); i++) {
    GridKernal grid=(GridKernal)grid(i);
    GridCacheAdapter cache=grid.internalCache(null);
    GridCacheMapEntry entry=cache.map().getEntry(key);
    log.info("Entry: " + entry);
    if (entry != null) {
      assertFalse("Unexpected entry for grid " + i,entry.lockedByAny());
      assertFalse("Unexpected entry for grid " + i,entry.hasValue());
    }
    if (cache.isNear()) {
      entry=((GridNearCacheAdapter)cache).dht().map().getEntry(key);
      log.info("Dht entry: " + entry);
      if (entry != null) {
        assertFalse("Unexpected entry for grid " + i,entry.lockedByAny());
        assertFalse("Unexpected entry for grid " + i,entry.hasValue());
      }
    }
  }
  for (int i=0; i < gridCount(); i++)   assertEquals("Unexpected value for grid " + i,null,grid(i).cache(null).get(key));
}
