{
  try {
    if (checkExplicitTaskMonitoring(g))     res.taskMonitoringEnabled=true;
 else {
      res.taskMonitoringEnabled=arg.taskMonitoringEnabled;
      if (arg.taskMonitoringEnabled) {
        GridNodeLocalMap<String,VisorComputeMonitoringHolder> storage=g.nodeLocalMap();
        VisorComputeMonitoringHolder holder=storage.get(COMPUTE_MONITORING_HOLDER_KEY);
        if (holder == null) {
          VisorComputeMonitoringHolder holderNew=new VisorComputeMonitoringHolder();
          VisorComputeMonitoringHolder holderOld=storage.putIfAbsent(COMPUTE_MONITORING_HOLDER_KEY,holderNew);
          holder=holderOld == null ? holderNew : holderOld;
        }
        holder.startCollect(g,arg.evtOrderKey);
        res.taskMonitoringEnabled=g.allEventsUserRecordable(VISOR_TASK_EVTS);
      }
    }
    res.events.addAll(collectEvents(g,arg.evtOrderKey,arg.evtThrottleCntrKey,arg.taskMonitoringEnabled));
  }
 catch (  Throwable eventsEx) {
    res.eventsEx=eventsEx;
  }
}
