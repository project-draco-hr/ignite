{
  GridNode locNode=grid.localNode();
  UUID locId=locNode.id();
  assertNotNull(locId);
  assertEquals(5,grid.nodes().size());
  GridProjection prj=grid.forLocal();
  assertEquals(1,prj.nodes().size());
  assertEquals(locNode,F.first(prj.nodes()));
  prj=grid.forHost(locNode);
  assertEquals(grid.nodes().size(),prj.nodes().size());
  assertTrue(grid.nodes().containsAll(prj.nodes()));
  try {
    grid.forHost(null);
  }
 catch (  NullPointerException ignored) {
  }
  prj=grid.forNode(locNode);
  assertEquals(1,prj.nodes().size());
  prj=grid.forNode(locNode,locNode);
  assertEquals(1,prj.nodes().size());
  try {
    grid.forNode(null);
  }
 catch (  NullPointerException ignored) {
  }
  prj=grid.forNodes(F.asList(locNode));
  assertEquals(1,prj.nodes().size());
  prj=grid.forNodes(F.asList(locNode,locNode));
  assertEquals(1,prj.nodes().size());
  try {
    grid.forNodes(null);
  }
 catch (  NullPointerException ignored) {
  }
  prj=grid.forNodeId(locId);
  assertEquals(1,prj.nodes().size());
  prj=grid.forNodeId(locId,locId);
  assertEquals(1,prj.nodes().size());
  try {
    grid.forNodeId(null);
  }
 catch (  NullPointerException ignored) {
  }
  prj=grid.forNodeIds(F.asList(locId));
  assertEquals(1,prj.nodes().size());
  prj=grid.forNodeIds(F.asList(locId,locId));
  assertEquals(1,prj.nodes().size());
  try {
    grid.forNodeIds(null);
  }
 catch (  NullPointerException ignored) {
  }
  prj=grid.forOthers(locNode);
  assertEquals(4,prj.nodes().size());
  assertFalse(prj.nodes().contains(locNode));
  assertEquals(4,grid.forRemotes().nodes().size());
  assertTrue(prj.nodes().containsAll(grid.forRemotes().nodes()));
  try {
    grid.forOthers((GridNode)null);
  }
 catch (  NullPointerException ignored) {
  }
}
