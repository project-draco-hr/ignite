{
  boolean reconnect=ctx.localNodeId().equals(nodeId) && cachesOnDisconnect != null;
  Collection<DynamicCacheChangeRequest> reqs;
  Map<String,Map<UUID,Boolean>> clientNodesMap;
  if (reconnect) {
    reqs=new ArrayList<>(caches.size());
    clientNodesMap=U.newHashMap(caches.size());
    for (    GridCacheAdapter<?,?> cache : caches.values()) {
      DynamicCacheDescriptor desc=cachesOnDisconnect.get(maskNull(cache.name()));
      if (desc == null)       continue;
      DynamicCacheChangeRequest req=new DynamicCacheChangeRequest(cache.name(),null);
      req.startCacheConfiguration(desc.cacheConfiguration());
      req.cacheType(desc.cacheType());
      req.deploymentId(desc.deploymentId());
      req.receivedFrom(desc.receivedFrom());
      reqs.add(req);
      Boolean nearEnabled=cache.isNear();
      Map<UUID,Boolean> map=U.newHashMap(1);
      map.put(nodeId,nearEnabled);
      clientNodesMap.put(cache.name(),map);
    }
  }
 else {
    reqs=new ArrayList<>(registeredCaches.size() + registeredTemplates.size());
    for (    DynamicCacheDescriptor desc : registeredCaches.values()) {
      DynamicCacheChangeRequest req=new DynamicCacheChangeRequest(desc.cacheConfiguration().getName(),null);
      req.startCacheConfiguration(desc.cacheConfiguration());
      req.cacheType(desc.cacheType());
      req.deploymentId(desc.deploymentId());
      req.receivedFrom(desc.receivedFrom());
      reqs.add(req);
    }
    for (    DynamicCacheDescriptor desc : registeredTemplates.values()) {
      DynamicCacheChangeRequest req=new DynamicCacheChangeRequest(desc.cacheConfiguration().getName(),null);
      req.startCacheConfiguration(desc.cacheConfiguration());
      req.template(true);
      req.deploymentId(desc.deploymentId());
      reqs.add(req);
    }
    clientNodesMap=ctx.discovery().clientNodesMap();
  }
  DynamicCacheChangeBatch batch=new DynamicCacheChangeBatch(reqs);
  batch.clientNodes(clientNodesMap);
  batch.clientReconnect(reconnect);
  return batch;
}
