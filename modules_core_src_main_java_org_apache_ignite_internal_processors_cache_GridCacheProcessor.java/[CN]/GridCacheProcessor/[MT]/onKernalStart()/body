{
  if (ctx.config().isDaemon())   return;
  if (!getBoolean(IGNITE_SKIP_CONFIGURATION_CONSISTENCY_CHECK)) {
    for (    ClusterNode n : ctx.discovery().remoteNodes())     checkCache(n);
  }
  for (  Map.Entry<String,GridCacheAdapter<?,?>> e : caches.entrySet()) {
    GridCacheAdapter cache=e.getValue();
    if (maxRebalanceOrder > 0) {
      CacheConfiguration cfg=cache.configuration();
      int order=cfg.getRebalanceOrder();
      if (order > 0 && order != maxRebalanceOrder && cfg.getCacheMode() != LOCAL) {
        GridCompoundFuture<Object,Object> fut=(GridCompoundFuture<Object,Object>)preloadFuts.get(order);
        if (fut == null) {
          fut=new GridCompoundFuture<>();
          preloadFuts.put(order,fut);
        }
        fut.add(cache.preloader().syncFuture());
      }
    }
  }
  for (  IgniteInternalFuture<?> fut : preloadFuts.values())   ((GridCompoundFuture<Object,Object>)fut).markInitialized();
  for (  GridCacheSharedManager<?,?> mgr : sharedCtx.managers())   mgr.onKernalStart();
  for (  GridCacheAdapter<?,?> cache : caches.values())   onKernalStart(cache);
  for (  GridCacheAdapter<?,?> cache : caches.values()) {
    CacheConfiguration cfg=cache.configuration();
    if (cfg.getRebalanceMode() == SYNC) {
      if (cfg.getCacheMode() == REPLICATED || (cfg.getCacheMode() == PARTITIONED && cfg.getRebalancePartitionedDelay() >= 0))       cache.preloader().syncFuture().get();
    }
  }
  ctx.cacheObjects().onCacheProcessorStarted();
}
