{
  if (ctx.config().isDaemon())   return;
  if (!getBoolean(IGNITE_SKIP_CONFIGURATION_CONSISTENCY_CHECK)) {
    for (    ClusterNode n : ctx.discovery().remoteNodes()) {
      checkTransactionConfiguration(n);
      DeploymentMode locDepMode=ctx.config().getDeploymentMode();
      DeploymentMode rmtDepMode=n.attribute(IgniteNodeAttributes.ATTR_DEPLOYMENT_MODE);
      CU.checkAttributeMismatch(log,null,n.id(),"deploymentMode","Deployment mode",locDepMode,rmtDepMode,true);
    }
  }
  validateCfg=false;
  for (  DynamicCacheDescriptor desc : registeredCaches.values()) {
    desc.checkValid();
    CacheConfiguration ccfg=desc.cacheConfiguration();
    IgnitePredicate filter=ccfg.getNodeFilter();
    if (filter.apply(ctx.discovery().localNode())) {
      CacheObjectContext cacheObjCtx=ctx.cacheObjects().contextForCache(null,ccfg.getName(),ccfg);
      GridCacheContext ctx=createCache(ccfg,cacheObjCtx);
      ctx.dynamicDeploymentId(desc.deploymentId());
      sharedCtx.addCacheContext(ctx);
      GridCacheAdapter cache=ctx.cache();
      String name=ccfg.getName();
      caches.put(name,cache);
      startCache(cache);
      jCacheProxies.put(name,new IgniteCacheProxy(ctx,cache,null,false));
    }
  }
  marshallerCache().context().preloader().syncFuture().listen(new CI1<IgniteInternalFuture<?>>(){
    @Override public void apply(    IgniteInternalFuture<?> f){
      ctx.marshallerContext().onMarshallerCacheReady(ctx);
    }
  }
);
  for (  GridCacheSharedManager<?,?> mgr : sharedCtx.managers())   mgr.onKernalStart();
  for (  Map.Entry<String,GridCacheAdapter<?,?>> e : caches.entrySet()) {
    GridCacheAdapter cache=e.getValue();
    if (maxPreloadOrder > 0) {
      CacheConfiguration cfg=cache.configuration();
      int order=cfg.getPreloadOrder();
      if (order > 0 && order != maxPreloadOrder && cfg.getCacheMode() != LOCAL) {
        GridCompoundFuture<Object,Object> fut=(GridCompoundFuture<Object,Object>)preloadFuts.get(order);
        if (fut == null) {
          fut=new GridCompoundFuture<>();
          preloadFuts.put(order,fut);
        }
        fut.add(cache.preloader().syncFuture());
      }
    }
  }
  for (  IgniteInternalFuture<?> fut : preloadFuts.values())   ((GridCompoundFuture<Object,Object>)fut).markInitialized();
  for (  GridCacheAdapter<?,?> cache : caches.values())   onKernalStart(cache);
  for (  GridCacheAdapter<?,?> cache : caches.values()) {
    CacheConfiguration cfg=cache.configuration();
    if (cfg.getPreloadMode() == SYNC) {
      if (cfg.getCacheMode() == REPLICATED || (cfg.getCacheMode() == PARTITIONED && cfg.getPreloadPartitionedDelay() >= 0))       cache.preloader().syncFuture().get();
    }
  }
  ctx.cacheObjects().onCacheProcessorStarted();
}
