{
  cacheStartedLatch.countDown();
  GridCachePartitionExchangeManager<Object,Object> exch=context().exchange();
  exch.onKernalStop(cancel);
  for (  GridCacheAdapter<?,?> cache : caches.values()) {
    GridCacheAffinityManager aff=cache.context().affinity();
    if (aff != null)     aff.cancelFutures();
  }
  for (  String cacheName : stopSeq) {
    GridCacheAdapter<?,?> cache=caches.remove(maskNull(cacheName));
    if (cache != null) {
      stoppedCaches.put(maskNull(cacheName),cache);
      onKernalStop(cache,cancel);
    }
  }
  for (  Map.Entry<String,GridCacheAdapter<?,?>> entry : caches.entrySet()) {
    GridCacheAdapter<?,?> cache=entry.getValue();
    if (cache == caches.remove(entry.getKey())) {
      stoppedCaches.put(entry.getKey(),cache);
      onKernalStop(entry.getValue(),cancel);
    }
  }
  cancelFutures();
  List<? extends GridCacheSharedManager<?,?>> sharedMgrs=sharedCtx.managers();
  for (ListIterator<? extends GridCacheSharedManager<?,?>> it=sharedMgrs.listIterator(sharedMgrs.size()); it.hasPrevious(); ) {
    GridCacheSharedManager<?,?> mgr=it.previous();
    if (mgr != exch)     mgr.onKernalStop(cancel);
  }
}
