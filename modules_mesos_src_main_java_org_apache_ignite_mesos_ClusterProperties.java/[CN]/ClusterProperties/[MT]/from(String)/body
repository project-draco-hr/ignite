{
  try {
    Properties props=null;
    if (config != null) {
      props=new Properties();
      props.load(new FileInputStream(config));
    }
    ClusterProperties prop=new ClusterProperties();
    prop.mesosUrl=getStringProperty(MESOS_MASTER_URL,props,DEFAULT_MESOS_MASTER_URL);
    prop.cpu=getDoubleProperty(IGNITE_RESOURCE_CPU_CORES,props,UNLIMITED);
    prop.mem=getDoubleProperty(IGNITE_RESOURCE_MEM_MB,props,UNLIMITED);
    prop.disk=getDoubleProperty(IGNITE_RESOURCE_DISK_MB,props,UNLIMITED);
    prop.nodeCnt=getDoubleProperty(IGNITE_RESOURCE_NODE_CNT,props,UNLIMITED);
    prop.minCpu=getDoubleProperty(IGNITE_RESOURCE_MIN_CPU_CNT_PER_NODE,props,DEFAULT_RESOURCE_MIN_CPU);
    prop.minMemory=getDoubleProperty(IGNITE_RESOURCE_MIN_MEMORY_PER_NODE,props,DEFAULT_RESOURCE_MIN_MEM);
    prop.igniteVer=getStringProperty(IGNITE_VERSION,props,DEFAULT_IGNITE_VERSION);
    prop.igniteWorkDir=getStringProperty(IGNITE_WORK_DIR,props,DEFAULT_IGNITE_WORK_DIR);
    prop.igniteCfg=getStringProperty(IGNITE_CONFIG_XML,props,null);
    prop.userLibs=getStringProperty(IGNITE_USERS_LIBS,props,null);
    return prop;
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
}
