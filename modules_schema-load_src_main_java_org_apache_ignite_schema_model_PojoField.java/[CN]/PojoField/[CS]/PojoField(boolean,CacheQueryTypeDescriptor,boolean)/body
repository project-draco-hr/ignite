{
  keyPrev=key;
  use=new SimpleBooleanProperty(true);
  this.key=new SimpleBooleanProperty(key);
  ak=new SimpleBooleanProperty(false);
  javaNamePrev=desc.getJavaName();
  javaName=new SimpleStringProperty(javaNamePrev);
  javaTypeNamePrev=desc.getJavaType().getName();
  javaTypeName=new SimpleStringProperty(javaTypeNamePrev);
  dbName=new SimpleStringProperty(desc.getDbName());
  dbType=desc.getDbType();
  dbTypeName=new SimpleStringProperty(jdbcTypeName(dbType));
  this.nullable=nullable;
  conversions=conversions(dbType,nullable,javaNamePrev);
  this.desc=desc;
  ak.addListener(new ChangeListener<Boolean>(){
    @Override public void changed(    ObservableValue<? extends Boolean> val,    Boolean oldVal,    Boolean newVal){
      if (newVal && owner != null) {
        keyProperty().set(true);
        for (        PojoField field : owner.fields())         if (field != PojoField.this && field.affinityKey())         field.ak.set(false);
      }
    }
  }
);
}
