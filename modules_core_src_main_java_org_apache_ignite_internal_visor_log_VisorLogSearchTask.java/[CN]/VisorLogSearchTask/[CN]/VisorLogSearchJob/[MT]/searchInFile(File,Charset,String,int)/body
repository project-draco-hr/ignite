{
  List<GridTuple3<String[],Integer,Integer>> searched=new ArrayList<>();
  int line=0;
  try (GridReversedLinesFileReader reader=new GridReversedLinesFileReader(f,4096,charset)){
    Deque<String> lastLines=new LinkedList<>();
    String s;
    int lastFoundLine=0, foundCnt=0;
    while ((s=reader.readLine()) != null) {
      line++;
      if (lastFoundLine > 0 && line - lastFoundLine <= HALF) {
        for (int i=searched.size() - 1; i >= 0; i--) {
          GridTuple3<String[],Integer,Integer> tup=searched.get(i);
          int delta=line - tup.get2();
          if (delta <= HALF && delta != 0)           tup.get1()[HALF - delta]=s;
 else           break;
        }
      }
      if (foundCnt < limit) {
        if (s.toLowerCase().contains(searchStr)) {
          String[] buf=new String[LINE_CNT];
          buf[HALF]=s;
          int i=1;
          for (          String l : lastLines) {
            buf[HALF + i]=l;
            i++;
          }
          lastFoundLine=line;
          searched.add(new GridTuple3<>(buf,line,0));
          foundCnt++;
        }
      }
      if (lastLines.size() >= HALF)       lastLines.removeFirst();
      lastLines.add(s);
    }
  }
   for (  GridTuple3<String[],Integer,Integer> entry : searched) {
    entry.set2(line - entry.get2() + 1);
    entry.set3(line);
  }
  return searched;
}
