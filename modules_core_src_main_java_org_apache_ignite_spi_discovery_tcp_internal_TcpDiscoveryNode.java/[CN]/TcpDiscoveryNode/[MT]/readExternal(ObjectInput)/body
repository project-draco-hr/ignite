{
  id=U.readUuid(in);
  attrs=U.sealMap(U.<String,Object>readMap(in));
  addrs=U.readCollection(in);
  hostNames=U.readCollection(in);
  discPort=in.readInt();
  sockAddrs=U.toSocketAddresses(this,discPort);
  Object consistentIdAttr=attrs.get(ATTR_NODE_CONSISTENT_ID);
  consistentId=consistentIdAttr != null ? consistentIdAttr : U.consistentId(addrs,discPort);
  byte[] mtr=U.readByteArray(in);
  if (mtr != null)   metrics=ClusterMetricsSnapshot.deserialize(mtr,0);
  int size=in.readInt();
  Map<Integer,CacheMetrics> cacheMetrics=size > 0 ? U.<Integer,CacheMetrics>newHashMap(size) : Collections.<Integer,CacheMetrics>emptyMap();
  for (int i=0; i < size; i++) {
    int id=in.readInt();
    CacheMetricsSnapshot m=(CacheMetricsSnapshot)in.readObject();
    cacheMetrics.put(id,m);
  }
  order=in.readLong();
  intOrder=in.readLong();
  ver=(IgniteProductVersion)in.readObject();
  clientRouterNodeId=U.readUuid(in);
}
