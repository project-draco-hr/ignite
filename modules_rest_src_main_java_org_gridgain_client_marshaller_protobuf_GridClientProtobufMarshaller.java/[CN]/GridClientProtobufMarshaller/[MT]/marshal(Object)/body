{
  if (!(obj instanceof GridClientMessage))   throw new IOException("Message serialization of given type is not supported: " + obj.getClass().getName());
  ObjectWrapperType type=NONE;
  GeneratedMessage wrapped;
  if (obj instanceof GridClientResponse) {
    GridClientResponse bean=(GridClientResponse)obj;
    ProtoResponse.Builder builder=ProtoResponse.newBuilder();
    if (bean.sessionToken() != null)     builder.setSessionToken(ByteString.copyFrom(bean.sessionToken()));
    builder.setStatus(bean.successStatus());
    if (bean.errorMessage() != null)     builder.setErrorMessage(bean.errorMessage());
    if (bean.result() != null)     builder.setResultBean(wrapObject(bean.result()));
    wrapped=builder.build();
    type=RESPONSE;
  }
 else {
    ProtoRequest.Builder reqBuilder=ProtoRequest.newBuilder();
    if (((GridClientMessage)obj).sessionToken() != null)     reqBuilder.setSessionToken(ByteString.copyFrom(((GridClientMessage)obj).sessionToken()));
    if (obj instanceof GridClientAuthenticationRequest) {
      GridClientAuthenticationRequest req=(GridClientAuthenticationRequest)obj;
      ProtoAuthenticationRequest.Builder builder=ProtoAuthenticationRequest.newBuilder();
      builder.setCredentials(wrapObject(req.credentials()));
      reqBuilder.setBody(builder.build().toByteString());
      type=AUTH_REQUEST;
    }
 else     if (obj instanceof GridClientCacheRequest) {
      GridClientCacheRequest req=(GridClientCacheRequest)obj;
      ProtoCacheRequest.Builder builder=ProtoCacheRequest.newBuilder();
      builder.setOperation(cacheOpToProtobuf(req.operation()));
      if (req.cacheName() != null)       builder.setCacheName(req.cacheName());
      if (req.key() != null)       builder.setKey(wrapObject(req.key()));
      if (req.value() != null)       builder.setValue(wrapObject(req.value()));
      if (req.value2() != null)       builder.setValue2(wrapObject(req.value2()));
      if (req.values() != null && !req.values().isEmpty())       builder.setValues(wrapMap(req.values()));
      if (req.cacheFlagsOn() != 0)       builder.setCacheFlagsOn(req.cacheFlagsOn());
      reqBuilder.setBody(builder.build().toByteString());
      type=CACHE_REQUEST;
    }
 else     if (obj instanceof GridClientLogRequest) {
      GridClientLogRequest req=(GridClientLogRequest)obj;
      ProtoLogRequest.Builder builder=ProtoLogRequest.newBuilder();
      if (req.path() != null)       builder.setPath(req.path());
      builder.setFrom(req.from());
      builder.setTo(req.to());
      reqBuilder.setBody(builder.build().toByteString());
      type=LOG_REQUEST;
    }
 else     if (obj instanceof GridClientTaskRequest) {
      GridClientTaskRequest req=(GridClientTaskRequest)obj;
      ProtoTaskRequest.Builder builder=ProtoTaskRequest.newBuilder();
      builder.setTaskName(req.taskName());
      builder.setArgument(wrapObject(req.argument()));
      reqBuilder.setBody(builder.build().toByteString());
      type=TASK_REQUEST;
    }
 else     if (obj instanceof GridClientTopologyRequest) {
      GridClientTopologyRequest req=(GridClientTopologyRequest)obj;
      ProtoTopologyRequest.Builder builder=ProtoTopologyRequest.newBuilder();
      builder.setIncludeAttributes(req.includeAttributes());
      builder.setIncludeMetrics(req.includeMetrics());
      if (req.nodeId() != null)       builder.setNodeId(req.nodeId().toString());
      if (req.nodeIp() != null)       builder.setNodeIp(req.nodeIp());
      reqBuilder.setBody(builder.build().toByteString());
      type=TOPOLOGY_REQUEST;
    }
    wrapped=reqBuilder.build();
  }
  ObjectWrapper.Builder res=ObjectWrapper.newBuilder();
  res.setType(type);
  res.setBinary(wrapped.toByteString());
  return res.build().toByteArray();
}
