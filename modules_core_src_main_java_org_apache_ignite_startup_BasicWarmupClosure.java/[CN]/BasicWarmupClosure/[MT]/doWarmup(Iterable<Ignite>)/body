{
  Ignite first=F.first(grids);
  ExecutorService svc=Executors.newFixedThreadPool(threadCnt);
  try {
    for (    IgniteCacheProxy cache : ((IgniteKernal)first).caches()) {
      if (!cache.context().userCache())       continue;
      GridCache<Object,Object> cache0=cache.context().cache();
      for (      String warmupMethod : warmupMethods) {
        Collection<Future> futs=new ArrayList<>(threadCnt);
        for (int i=0; i < threadCnt; i++) {
          Callable call;
switch (warmupMethod) {
case "get":
{
              call=new GetCallable(cache0);
              break;
            }
case "put":
{
            call=new PutCallable(cache0);
            break;
          }
case "putx":
{
          call=new PutxCallable(cache0);
          break;
        }
case "remove":
{
        call=new RemoveCallable(cache0);
        break;
      }
case "removex":
{
      call=new RemovexCallable(cache0);
      break;
    }
case "putIfAbsent":
{
    call=new PutIfAbsentCallable(cache0);
    break;
  }
case "replace":
{
  call=new ReplaceCallable(cache0);
  break;
}
default :
throw new IgniteCheckedException("Unsupported warmup method: " + warmupMethod);
}
futs.add(svc.submit(call));
}
out("Running warmup [cacheName=" + U.maskName(cache.getName()) + ", method="+ warmupMethod+ ']');
for (Future fut : futs) fut.get();
for (int key=0; key < keyRange; key++) cache0.remove(key);
}
}
}
  finally {
svc.shutdownNow();
}
}
