{
  if (seek != null)   expIn.skip(seek);
  int bufSize=2345;
  byte buf1[]=new byte[bufSize];
  byte buf2[]=new byte[bufSize];
  long pos=0;
  long start=System.currentTimeMillis();
  while (true) {
    int read=(int)Math.min(bufSize,expSize - pos);
    int i1;
    if (seek == null)     i1=actIn.read(buf1,0,read);
 else     if (seek % 2 == 0)     i1=actIn.read(pos + seek,buf1,0,read);
 else {
      i1=read;
      actIn.readFully(pos + seek,buf1,0,read);
    }
    int i2=expIn.read(buf2,0,Math.max(0,Math.min(i1,read)));
    if (i1 != i2) {
      fail("Expects the same data [read=" + read + ", pos="+ pos+ ", seek="+ seek+ ", i1="+ i1+ ", i2="+ i2+ ']');
    }
    if (i1 == -1)     break;
    assertTrue("Expects the same data [read=" + read + ", pos="+ pos+ ", seek="+ seek+ ", i1="+ i1+ ", i2="+ i2+ ']',Arrays.equals(buf1,buf2));
    if (read == 0)     break;
    pos+=i1;
  }
  if (expSize != null)   assertEquals(expSize.longValue(),pos);
  long time=System.currentTimeMillis() - start;
  if (time != 0 && log.isInfoEnabled()) {
    log.info(String.format("Streams were compared in continuous reading " + "[size=%7d, rate=%3.1f MB/sec]",expSize,expSize * 1000. / time / 1024 / 1024));
  }
}
