{
  if (gridCfg.getGgfsConfiguration() != null) {
    for (    GridGgfsConfiguration c : gridCfg.getGgfsConfiguration()) {
      if (F.eq(c.getMetaCacheName(),cfg.getName()) || F.eq(c.getDataCacheName(),cfg.getName()))       return;
    }
  }
  GridPerformanceSuggestions perf=ctx.performance();
  String msg="Disable eviction policy (remove from configuration)";
  if (cfg.getEvictionPolicy() != null) {
    perf.add(msg,false);
    perf.add("Disable synchronized evictions (set 'evictSynchronized' to false)",!cfg.isEvictSynchronized());
  }
 else   perf.add(msg,true);
  if (cfg.getCacheMode() == PARTITIONED) {
    perf.add("Disable near cache (set 'partitionDistributionMode' to PARTITIONED_ONLY or CLIENT_ONLY)",cfg.getDistributionMode() != NEAR_PARTITIONED && cfg.getDistributionMode() != NEAR_ONLY);
    if (cfg.getAffinity() != null)     perf.add("Decrease number of backups (set 'keyBackups' to 0)",cfg.getBackups() == 0);
  }
  perf.add("Enable ATOMIC mode if not using transactions (set 'atomicityMode' to ATOMIC)",cfg.getAtomicityMode() == ATOMIC);
  perf.add("Disable fully synchronous writes (set 'writeSynchronizationMode' to PRIMARY_SYNC or FULL_ASYNC)",cfg.getWriteSynchronizationMode() != FULL_SYNC);
  perf.add("Disable swap store (set 'swapEnabled' to false)",!cfg.isSwapEnabled());
  if (cfg.getStore() != null)   perf.add("Enable write-behind to persistent store (set 'writeBehindEnabled' to true)",cfg.isWriteBehindEnabled());
  perf.add("Disable query index (set 'queryIndexEnabled' to false)",!cfg.isQueryIndexEnabled());
  perf.add("Disable serializable transactions (set 'txSerializableEnabled' to false)",!cfg.isTxSerializableEnabled());
}
