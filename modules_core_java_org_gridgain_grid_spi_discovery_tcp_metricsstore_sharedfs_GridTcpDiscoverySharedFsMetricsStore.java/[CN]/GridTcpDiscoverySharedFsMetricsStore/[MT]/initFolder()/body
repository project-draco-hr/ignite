{
  if (initGuard.compareAndSet(false,true)) {
    if (path == null)     throw new GridSpiException("Shared file system path is null " + "(you must configure it via setPath(..) configuration property)");
    if (path.equals(DFLT_PATH) && warnGuard.compareAndSet(false,true))     U.warn(log,"Default local computer-only share is used by metrics store.");
    try {
      URL folderUrl=U.resolveGridGainUrl(path);
      if (folderUrl == null)       throw new GridSpiException("Failed to resolve path: " + path);
      File tmp;
      try {
        tmp=new File(folderUrl.toURI());
      }
 catch (      URISyntaxException e) {
        throw new GridSpiException("Failed to resolve path: " + path,e);
      }
      if (!tmp.isDirectory())       throw new GridSpiException("Failed to initialize shared file system path " + "(path must point to folder): " + path);
      if (!tmp.canRead() || !tmp.canWrite())       throw new GridSpiException("Failed to initialize shared file system path " + "(path must be readable and writable): " + path);
      folder=tmp;
    }
  finally {
      initLatch.countDown();
    }
  }
 else {
    try {
      U.await(initLatch);
    }
 catch (    GridInterruptedException e) {
      throw new GridSpiException("Thread has been interrupted.",e);
    }
    if (folder == null)     throw new GridSpiException("Metrics store has not been properly initialized.");
  }
  return folder;
}
