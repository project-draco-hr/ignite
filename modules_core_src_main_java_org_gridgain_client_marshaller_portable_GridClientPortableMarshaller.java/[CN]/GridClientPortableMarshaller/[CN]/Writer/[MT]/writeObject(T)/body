{
  if (obj instanceof Byte) {
    out.writeByte(TYPE_BYTE);
    out.writeByte((Byte)obj);
  }
 else   if (obj instanceof Boolean) {
    out.writeByte(TYPE_BOOLEAN);
    out.writeBoolean((Boolean)obj);
  }
 else   if (obj instanceof Integer) {
    out.writeByte(TYPE_INT);
    out.writeInt((Integer)obj);
  }
 else   if (obj instanceof Long) {
    out.writeByte(TYPE_LONG);
    out.writeLong((Long)obj);
  }
 else   if (obj instanceof Float) {
    out.writeByte(TYPE_FLOAT);
    out.writeFloat((Float)obj);
  }
 else   if (obj instanceof Double) {
    out.writeByte(TYPE_DOUBLE);
    out.writeDouble((Double)obj);
  }
 else   if (obj instanceof String) {
    out.writeByte(TYPE_STRING);
    writeString((String)obj);
  }
 else   if (obj instanceof Short) {
    out.writeByte(TYPE_SHORT);
    out.writeShort((Short)obj);
  }
 else   if (obj instanceof Character) {
    out.writeByte(TYPE_CHAR);
    out.writeChar((Character)obj);
  }
 else   if (obj instanceof UUID) {
    out.writeByte(TYPE_UUID);
    writeUuid((UUID)obj);
  }
 else   if (obj instanceof GridPortableObject) {
    out.writeByte(TYPE_USER_OBJECT);
    writePortable((GridPortableObject)obj);
  }
 else   if (obj instanceof Collection) {
    out.writeByte(TYPE_LIST);
    writeCollection((Collection)obj);
  }
 else   if (obj instanceof Map) {
    out.writeByte(TYPE_MAP);
    writeMap((Map)obj);
  }
 else   if (obj instanceof byte[]) {
    out.writeByte(TYPE_BYTE_ARRAY);
    writeByteArray((byte[])obj);
  }
 else   if (obj == null)   out.writeByte(TYPE_NULL);
 else   throw new IOException("Unsupported object: " + obj);
}
