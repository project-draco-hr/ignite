{
  VisorBasicConfig cfg=new VisorBasicConfig();
  cfg.gridName(c.getGridName());
  cfg.ggHome(getProperty(GG_HOME,c.getGridGainHome()));
  cfg.localHost(getProperty(GG_LOCAL_HOST,c.getLocalHost()));
  cfg.nodeId(g.localNode().id());
  cfg.marshaller(compactClass(c.getMarshaller()));
  cfg.deploymentMode(compactObject(c.getDeploymentMode()));
  cfg.daemon(boolValue(GG_DAEMON,c.isDaemon()));
  cfg.jmxRemote(g.isJmxRemoteEnabled());
  cfg.restart(g.isRestartEnabled());
  cfg.networkTimeout(c.getNetworkTimeout());
  cfg.licenseUrl(c.getLicenseUrl());
  cfg.logger(compactClass(c.getGridLogger()));
  cfg.discoStartupDelay(c.getDiscoveryStartupDelay());
  cfg.mBeanServer(compactClass(c.getMBeanServer()));
  cfg.noAscii(boolValue(GG_NO_ASCII,false));
  cfg.noDiscoOrder(boolValue(GG_NO_DISCO_ORDER,false));
  cfg.noShutdownHook(boolValue(GG_NO_SHUTDOWN_HOOK,false));
  cfg.programName(getProperty(GG_PROG_NAME));
  cfg.quiet(boolValue(GG_QUIET,true));
  cfg.successFile(getProperty(GG_SUCCESS_FILE));
  cfg.updateNotifier(boolValue(GG_UPDATE_NOTIFIER,true));
  cfg.securityCredentialsProvider(compactClass(c.getSecurityCredentialsProvider()));
  return cfg;
}
