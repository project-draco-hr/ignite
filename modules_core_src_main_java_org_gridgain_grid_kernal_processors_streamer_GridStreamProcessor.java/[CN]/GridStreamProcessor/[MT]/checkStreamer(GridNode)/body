{
  GridStreamerAttributes[] rmtAttrs=rmtNode.attribute(ATTR_STREAMER);
  GridStreamerAttributes[] locAttrs=ctx.discovery().localNode().attribute(ATTR_STREAMER);
  if (F.isEmpty(locAttrs) || F.isEmpty(rmtAttrs))   return;
  for (  GridStreamerAttributes rmtAttr : rmtAttrs) {
    for (    GridStreamerAttributes locAttr : locAttrs) {
      if (!F.eq(rmtAttr.name(),locAttr.name()))       continue;
      if (rmtAttr.atLeastOnce() != locAttr.atLeastOnce())       throw new GridException("Streamer atLeastOnce configuration flag mismatch (fix atLeastOnce flag " + "in streamer configuration or set " + "-D" + GridSystemProperties.GG_SKIP_CONFIGURATION_CONSISTENCY_CHECK + "=true system "+ "property) [streamer="+ locAttr.name()+ ", locAtLeastOnce="+ locAttr.atLeastOnce()+ ", rmtAtLeastOnce="+ rmtAttr.atLeastOnce()+ ", rmtNodeId="+ rmtNode.id()+ ']');
      if (!rmtAttr.stages().equals(locAttr.stages()))       throw new GridException("Streamer stages configuration mismatch (fix streamer stages " + "configuration or set " + "-D" + GridSystemProperties.GG_SKIP_CONFIGURATION_CONSISTENCY_CHECK + "=true system "+ "property) [streamer="+ locAttr.name()+ ", locStages="+ locAttr.stages()+ ", rmtStages="+ rmtAttr.stages()+ ", rmtNodeId="+ rmtNode.id()+ ']');
      if (rmtAttr.atLeastOnce()) {
        if (rmtAttr.maxFailoverAttempts() != locAttr.maxFailoverAttempts())         U.warn(log,"Streamer maxFailoverAttempts configuration property differs on local and remote " + "nodes (ignore this message if it is done on purpose) [streamer=" + locAttr.name() + ", locMaxFailoverAttempts="+ locAttr.maxFailoverAttempts()+ ", rmtMaxFailoverAttempts="+ rmtAttr.maxFailoverAttempts()+ ", rmtNodeId="+ rmtNode.id()+ ']');
        if (rmtAttr.maxConcurrentSessions() != locAttr.maxConcurrentSessions())         U.warn(log,"Streamer maxConcurrentSessions configuration property differs on local and " + "remote nodes (ignore this message if it is done on purpose) [streamer=" + locAttr.name() + ", locMaxConcurrentSessions="+ locAttr.maxConcurrentSessions()+ ", rmtMaxConcurrentSessions="+ rmtAttr.maxConcurrentSessions()+ ", rmtNodeId="+ rmtNode.id()+ ']');
      }
    }
  }
}
