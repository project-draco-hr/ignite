{
  GridTestProperties.setProperty(GridTestProperties.MARSH_CLASS_NAME,BinaryMarshaller.class.getName());
  TestSuite suite=new TestSuite("Portable Cache Test Suite");
  HashSet<Class> ignoredTests=new HashSet<>();
  ignoredTests.add(DataStreamProcessorSelfTest.class);
  ignoredTests.add(GridCacheOffHeapTieredEvictionAtomicSelfTest.class);
  ignoredTests.add(GridCacheOffHeapTieredEvictionSelfTest.class);
  ignoredTests.add(GridCacheOffHeapTieredSelfTest.class);
  ignoredTests.add(GridCacheOffHeapTieredAtomicSelfTest.class);
  ignoredTests.add(GridCacheAffinityRoutingSelfTest.class);
  ignoredTests.add(IgniteCacheAtomicLocalExpiryPolicyTest.class);
  ignoredTests.add(GridCacheEntryMemorySizeSelfTest.class);
  ignoredTests.add(GridCacheMvccSelfTest.class);
  suite.addTest(IgniteCacheTestSuite.suite(ignoredTests));
  suite.addTestSuite(GridCacheMemoryModeBinarySelfTest.class);
  suite.addTestSuite(GridCacheOffHeapTieredEvictionAtomicBinarySelfTest.class);
  suite.addTestSuite(GridCacheOffHeapTieredEvictionBinarySelfTest.class);
  suite.addTestSuite(GridCacheBinariesPartitionedOnlyByteArrayValuesSelfTest.class);
  suite.addTestSuite(GridCacheBinariesNearPartitionedByteArrayValuesSelfTest.class);
  suite.addTestSuite(GridCacheOffHeapTieredBinarySelfTest.class);
  suite.addTestSuite(GridCacheOffHeapTieredAtomicBinarySelfTest.class);
  suite.addTestSuite(GridDataStreamerImplSelfTest.class);
  suite.addTestSuite(DataStreamProcessorBinarySelfTest.class);
  suite.addTestSuite(GridCacheAtomicPartitionedOnlyBinaryDataStreamerMultiNodeSelfTest.class);
  suite.addTestSuite(GridCacheAtomicPartitionedOnlyBinaryDataStreamerMultithreadedSelfTest.class);
  suite.addTestSuite(GridCacheAtomicPartitionedOnlyBinaryMultiNodeSelfTest.class);
  suite.addTestSuite(GridCacheAtomicPartitionedOnlyBinaryMultithreadedSelfTest.class);
  suite.addTestSuite(GridCacheAffinityRoutingBinarySelfTest.class);
  suite.addTestSuite(GridBinaryCacheEntryMemorySizeSelfTest.class);
  return suite;
}
