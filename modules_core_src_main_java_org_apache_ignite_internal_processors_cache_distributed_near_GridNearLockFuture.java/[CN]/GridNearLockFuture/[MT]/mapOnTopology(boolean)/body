{
  cctx.topology().readLock();
  try {
    if (cctx.topology().stopping()) {
      onDone(new IgniteCheckedException("Failed to perform cache operation (cache is stopped): " + cctx.name()));
      return;
    }
    GridDhtTopologyFuture fut=cctx.topologyVersionFuture();
    if (fut.isDone()) {
      Throwable err=fut.validateCache(cctx);
      if (err != null) {
        onDone(err);
        return;
      }
      AffinityTopologyVersion topVer=fut.topologyVersion();
      if (remap) {
        if (tx != null)         tx.onRemap(topVer);
        this.topVer=topVer;
      }
 else {
        if (tx != null)         tx.topologyVersion(topVer);
        if (this.topVer == null)         this.topVer=topVer;
      }
      map(keys,remap,false);
      markInitialized();
    }
 else {
      fut.listen(new CI1<IgniteInternalFuture<AffinityTopologyVersion>>(){
        @Override public void apply(        IgniteInternalFuture<AffinityTopologyVersion> fut){
          try {
            fut.get();
            mapOnTopology(remap);
          }
 catch (          IgniteCheckedException e) {
            onDone(e);
          }
 finally {
            cctx.shared().txContextReset();
          }
        }
      }
);
    }
  }
  finally {
    cctx.topology().readUnlock();
  }
}
