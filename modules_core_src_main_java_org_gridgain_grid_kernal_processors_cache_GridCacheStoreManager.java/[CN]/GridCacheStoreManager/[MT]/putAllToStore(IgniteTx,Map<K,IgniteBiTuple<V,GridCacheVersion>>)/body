{
  if (F.isEmpty(map))   return true;
  if (map.size() == 1) {
    Map.Entry<K,IgniteBiTuple<V,GridCacheVersion>> e=map.entrySet().iterator().next();
    return putToStore(tx,e.getKey(),e.getValue().get1(),e.getValue().get2());
  }
 else {
    if (store != null) {
      Map<K,IgniteBiTuple<V,GridCacheVersion>> map0;
      if (convertPortable) {
        map0=U.newHashMap(map.size());
        for (        Map.Entry<K,IgniteBiTuple<V,GridCacheVersion>> e : map.entrySet()) {
          IgniteBiTuple<V,GridCacheVersion> t=e.getValue();
          map0.put((K)cctx.unwrapPortableIfNeeded(e.getKey(),false),F.t((V)cctx.unwrapPortableIfNeeded(t.get1(),false),t.get2()));
        }
      }
 else       map0=map;
      if (log.isDebugEnabled())       log.debug("Storing values in cache store [map=" + map0 + ']');
      boolean ses=initSession(tx);
      try {
        C1<Map.Entry<K,IgniteBiTuple<V,GridCacheVersion>>,Cache.Entry<? extends K,?>> c=new C1<Map.Entry<K,IgniteBiTuple<V,GridCacheVersion>>,Cache.Entry<? extends K,?>>(){
          @Override public Cache.Entry<? extends K,?> apply(          Map.Entry<K,IgniteBiTuple<V,GridCacheVersion>> e){
            return new CacheEntryImpl<>(e.getKey(),locStore ? e.getValue() : e.getValue().get1());
          }
        }
;
        store.writeAll(F.viewReadOnly(map.entrySet(),c));
      }
 catch (      ClassCastException e) {
        handleClassCastException(e);
      }
 finally {
        if (ses)         sesHolder.set(null);
      }
      if (log.isDebugEnabled())       log.debug("Stored value in cache store [map=" + map0 + ']');
      return true;
    }
    return false;
  }
}
