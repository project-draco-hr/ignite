{
  if (F.isEmpty(map))   return true;
  if (map.size() == 1) {
    Map.Entry<K,IgniteBiTuple<V,GridCacheVersion>> e=map.entrySet().iterator().next();
    return putToStore(tx,e.getKey(),e.getValue().get1(),e.getValue().get2());
  }
 else {
    if (store != null) {
      Collection<Cache.Entry<? extends K,?>> entries;
      if (convertPortable) {
        entries=new ArrayList<>(map.size());
        for (        Map.Entry<K,IgniteBiTuple<V,GridCacheVersion>> e : map.entrySet()) {
          K k=e.getKey();
          Object v=locStore ? e.getValue() : e.getValue().get1();
          entries.add(new CacheEntryImpl<>((K)cctx.unwrapPortableIfNeeded(k,false),(V)cctx.unwrapPortableIfNeeded(v,false)));
        }
      }
 else {
        entries=new ArrayList<>(map.size());
        for (        Map.Entry<K,IgniteBiTuple<V,GridCacheVersion>> e : map.entrySet())         entries.add(new CacheEntryImpl<>(e.getKey(),locStore ? e.getValue() : e.getValue().get1()));
      }
      if (log.isDebugEnabled())       log.debug("Storing values in cache store [entries=" + entries + ']');
      initSession(tx);
      try {
        store.writeAll(entries);
      }
 catch (      ClassCastException e) {
        handleClassCastException(e);
      }
catch (      Exception e) {
        if (!entries.isEmpty()) {
          List<Object> keys=new ArrayList<>(entries.size());
          for (          Cache.Entry<?,?> entry : entries)           keys.add(entry.getKey());
          throw new CacheStorePartialUpdateException(keys,e);
        }
        if (!(e instanceof CacheWriterException))         e=new CacheWriterException(e);
        throw new IgniteCheckedException(e);
      }
 finally {
        sesHolder.set(null);
      }
      if (log.isDebugEnabled())       log.debug("Stored value in cache store [entries=" + entries + ']');
      return true;
    }
    return false;
  }
}
