{
  this.ctx=ctx;
  this.in=in;
  this.ldr=ldr;
  this.hnds=hnds;
  start=in.position();
  if (!skipHdrCheck && (in.readByte() == GridBinaryMarshaller.OBJ)) {
    BinaryUtils.checkProtocolVersion(in.readByte());
    short flags=in.readShort();
    int typeId0=in.readInt();
    in.readInt();
    int len=in.readInt();
    schemaId=in.readInt();
    int offset=in.readInt();
    userType=BinaryUtils.isUserType(flags);
    fieldIdLen=BinaryUtils.fieldIdLength(flags);
    fieldOffLen=BinaryUtils.fieldOffsetLength(flags);
    if (BinaryUtils.hasSchema(flags)) {
      footerStart=start + offset;
      if (BinaryUtils.hasRaw(flags)) {
        footerLen=len - offset - 4;
        rawOff=start + in.readIntPositioned(start + len - 4);
      }
 else {
        footerLen=len - offset;
        rawOff=start + len;
      }
    }
 else {
      footerStart=start + len;
      footerLen=0;
      if (BinaryUtils.hasRaw(flags))       rawOff=start + offset;
 else       rawOff=start + len;
    }
    if (typeId0 == UNREGISTERED_TYPE_ID) {
      int off=in.position();
      if (forUnmarshal) {
        desc=ctx.descriptorForClass(BinaryUtils.doReadClass(in,ctx,ldr,typeId0),false);
        typeId=desc.typeId();
      }
 else       typeId=ctx.typeId(BinaryUtils.doReadClassName(in));
      int clsNameLen=in.position() - off;
      dataStart=start + DFLT_HDR_LEN + clsNameLen;
    }
 else {
      typeId=typeId0;
      dataStart=start + DFLT_HDR_LEN;
    }
    mapper=userType ? ctx.userTypeMapper(typeId) : BinaryContext.defaultMapper();
    schema=BinaryUtils.hasSchema(flags) ? getOrCreateSchema() : null;
  }
 else {
    dataStart=0;
    typeId=0;
    rawOff=0;
    footerStart=0;
    footerLen=0;
    mapper=null;
    schemaId=0;
    userType=false;
    fieldIdLen=0;
    fieldOffLen=0;
    schema=null;
  }
  streamPosition(start);
}
