{
  cnt=in.readInt();
  threadId=in.readLong();
  id=U.readUuid(in);
  failoverSafe=in.readBoolean();
  fair=in.readBoolean();
  changed=in.readBoolean();
  if (in.readBoolean()) {
    int size=in.readInt();
    conditionMap=U.newLinkedHashMap(size);
    for (int i=0; i < size; i++) {
      String key=U.readString(in);
      int size1=in.readInt();
      LinkedList<UUID> list=new LinkedList();
      for (int j=0; j < size1; j++)       list.add(U.readUuid(in));
      conditionMap.put(key,list);
    }
  }
  if (in.readBoolean()) {
    assert(conditionMap != null);
    int size=in.readInt();
    signals=U.newLinkedHashMap(size);
    for (int i=0; i < size; i++) {
      UUID node=U.readUuid(in);
      int size1=in.readInt();
      LinkedList<String> list=new LinkedList();
      for (int j=0; j < size1; j++)       list.add(U.readString(in));
      signals.put(node,list);
    }
  }
 else   signals=null;
  if (in.readBoolean()) {
    int size=in.readInt();
    nodes=new LinkedList();
    for (int i=0; i < size; i++)     nodes.add(U.readUuid(in));
  }
 else   nodes=null;
}
