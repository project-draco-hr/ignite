{
  out.writeInt(cnt);
  out.writeLong(threadId);
  U.writeUuid(out,id);
  out.writeBoolean(failoverSafe);
  out.writeBoolean(fair);
  out.writeBoolean(changed);
  out.writeBoolean(conditionMap != null);
  if (conditionMap != null) {
    out.writeInt(conditionMap.size());
    for (    Map.Entry<String,LinkedList<UUID>> e : conditionMap.entrySet()) {
      U.writeString(out,e.getKey());
      out.writeInt(e.getValue().size());
      for (      UUID uuid : e.getValue())       U.writeUuid(out,uuid);
    }
  }
  out.writeBoolean(signals != null);
  if (signals != null) {
    out.writeInt(signals.size());
    for (    Map.Entry<UUID,LinkedList<String>> e : signals.entrySet()) {
      U.writeUuid(out,e.getKey());
      out.writeInt(e.getValue().size());
      for (      String condition : e.getValue())       U.writeString(out,condition);
    }
  }
  out.writeBoolean(nodes != null);
  if (nodes != null) {
    out.writeInt(nodes.size());
    for (    UUID uuid : nodes)     U.writeUuid(out,uuid);
  }
}
