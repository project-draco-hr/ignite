{
  if (leaveLatch != null)   return;
  if (locNodeId.equals(msg.creatorNodeId())) {
    if (msg.senderNodeId() == null) {
      Socket sock0=sock;
      if (sock0 != null) {
        msg.setMetrics(locNodeId,metricsProvider.getMetrics());
        try {
          writeToSocket(sock0,msg);
          if (log.isDebugEnabled())           log.debug("Heartbeat message sent [sock=" + sock0 + ", msg="+ msg+ ']');
        }
 catch (        IOException|GridException e) {
          if (log.isDebugEnabled())           U.error(log,"Failed to send heartbeat message [sock=" + sock0 + ", msg="+ msg+ ']',e);
          U.closeQuiet(sock0);
          sock=null;
          interrupt();
        }
      }
 else       if (log.isDebugEnabled())       log.debug("Failed to send heartbeat message (node is disconnected): " + msg);
    }
 else     if (log.isDebugEnabled())     log.debug("Received heartbeat response: " + msg);
  }
 else {
    if (msg.hasMetrics()) {
      long tstamp=U.currentTimeMillis();
      for (      Map.Entry<UUID,MetricsSet> e : msg.metrics().entrySet()) {
        MetricsSet metricsSet=e.getValue();
        updateMetrics(e.getKey(),metricsSet.metrics(),tstamp);
        for (        T2<UUID,GridNodeMetrics> t : metricsSet.clientMetrics())         updateMetrics(t.get1(),t.get2(),tstamp);
      }
    }
  }
}
