{
  Ignite ignite=ignite(0);
  assertNotSame(ignite,client);
  TestRecordingCommunicationSpi commSpi0=(TestRecordingCommunicationSpi)ignite.configuration().getCommunicationSpi();
  IgniteCache<Object,Object> cache=ignite.cache(ccfg.getName());
  final Integer key=primaryKey(cache);
  cache.remove(key);
  waitKeyRemoved(ccfg.getName(),key);
  final IgniteCache<Object,Object> clientCache=client.cache(ccfg.getName());
  commSpi0.blockMessages(GridNearTxFinishResponse.class,client.name());
  IgniteInternalFuture<?> fut=GridTestUtils.runAsync(new Callable<Void>(){
    @Override public Void call() throws Exception {
      c.apply(key,clientCache);
      return null;
    }
  }
,"tx-thread");
  U.sleep(100);
  assertFalse(fut.isDone());
  commSpi0.stopBlock(true);
  fut.get();
  waitKeyUpdated(ignite,ccfg.getBackups() + 1,ccfg.getName(),key);
}
