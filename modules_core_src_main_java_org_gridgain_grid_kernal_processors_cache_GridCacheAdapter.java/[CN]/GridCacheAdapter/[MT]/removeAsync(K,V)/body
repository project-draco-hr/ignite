{
  ctx.denyOnLocalRead();
  A.notNull(key,"key",val,"val");
  if (keyCheck)   validateCacheKey(key);
  validateCacheValue(val);
  return asyncOp(new AsyncOp<Boolean>(key){
    @Override public GridFuture<Boolean> op(    GridCacheTxLocalAdapter<K,V> tx){
      if (ctx.deploymentEnabled()) {
        try {
          ctx.deploy().registerClass(val);
        }
 catch (        GridException e) {
          return new GridFinishedFuture<>(ctx.kernalContext(),e);
        }
      }
      K key0=key;
      if (ctx.portableEnabled()) {
        try {
          key0=(K)ctx.marshalToPortable(key);
        }
 catch (        GridPortableException e) {
          return new GridFinishedFuture<>(ctx.kernalContext(),e);
        }
      }
      return tx.removeAllAsync(ctx,Collections.singletonList(key0),null,false,ctx.vararg(F.<K,V>cacheContainsPeek(val))).chain((IgniteClosure<GridFuture<GridCacheReturn<V>>,Boolean>)RET2FLAG);
    }
    @Override public String toString(){
      return "removeAsync [key=" + key + ", val="+ val+ ']';
    }
  }
);
}
