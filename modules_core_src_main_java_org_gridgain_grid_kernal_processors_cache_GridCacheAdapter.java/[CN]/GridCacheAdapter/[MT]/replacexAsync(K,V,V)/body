{
  A.notNull(key,"key",oldVal,"oldVal",newVal,"newVal");
  if (keyCheck)   validateCacheKey(key);
  ctx.denyOnLocalRead();
  return asyncOp(new AsyncOp<GridCacheReturn<V>>(key){
    @Override public IgniteFuture<GridCacheReturn<V>> op(    GridCacheTxLocalAdapter<K,V> tx){
      try {
        if (ctx.deploymentEnabled())         ctx.deploy().registerClass(oldVal);
      }
 catch (      GridException e) {
        return new GridFinishedFuture<>(ctx.kernalContext(),e);
      }
      return tx.putAllAsync(ctx,F.t(key,newVal),true,null,-1,ctx.equalsPeekArray(oldVal));
    }
    @Override public String toString(){
      return "replaceAsync [key=" + key + ", oldVal="+ oldVal+ ", newVal="+ newVal+ ']';
    }
  }
);
}
