{
  Runnable run=new Runnable(){
    @Override public void run(){
    }
  }
;
  try {
    grid().scheduler().scheduleLocal(run,"{sdf, *} * * * * *").get();
    fail("GridException must have been thrown");
  }
 catch (  GridException e) {
    info("Caught expected exception: " + e);
  }
  try {
    grid().scheduler().scheduleLocal(run,"{**, *} * * * * *").get();
    fail("GridException must have been thrown");
  }
 catch (  GridException e) {
    info("Caught expected exception: " + e);
  }
  try {
    grid().scheduler().scheduleLocal(run,"{1, ghd} * * * * *").get();
    fail("GridException must have been thrown");
  }
 catch (  GridException e) {
    info("Caught expected exception: " + e);
  }
  try {
    grid().scheduler().scheduleLocal(run,"{*, 0} * * * * *").get();
    fail("GridException must have been thrown");
  }
 catch (  GridException e) {
    info("Caught expected exception: " + e);
  }
  try {
    grid().scheduler().scheduleLocal(run,"{2, 6} * * * * * * * * * *").get();
    fail("GridException must have been thrown");
  }
 catch (  GridException e) {
    info("Caught expected exception: " + e);
  }
  try {
    grid().scheduler().scheduleLocal(run,"{-2, -6} * * * * *").get();
    fail("GridException must have been thrown");
  }
 catch (  GridException e) {
    info("Caught expected exception: " + e);
  }
}
