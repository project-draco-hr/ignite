{
  Collection<PojoDescriptor> selItems=selectedItems();
  if (selItems.isEmpty()) {
    MessageBox.warningDialog(owner,"Please select tables to generate POJOs and XML files!");
    return;
  }
  lockUI(genLayerPnl,genPnl,prevBtn,nextBtn);
  final String outFolder=outFolderTf.getText();
  final String pkg=pkgTf.getText();
  final File destFolder=new File(outFolder);
  Runnable task=new Task<Void>(){
    private void checkEmpty(    Collection<GridCacheQueryTypeDescriptor> items,    final TreeItem<String> treeItem,    String msg){
    }
    /** 
 * {@inheritDoc} 
 */
    @Override protected Void call() throws Exception {
      long started=System.currentTimeMillis();
      if (!destFolder.exists() && !destFolder.mkdirs())       throw new IOException("Failed to create output folder: " + destFolder);
      Collection<GridCacheQueryTypeMetadata> all=new ArrayList<>();
      boolean constructor=pojoConstructorCh.isSelected();
      boolean include=pojoIncludeKeysCh.isSelected();
      boolean singleXml=xmlSingleFileCh.isSelected();
      ConfirmCallable askOverwrite=new ConfirmCallable(owner,"File already exists: %s\nOverwrite?");
      if (all.isEmpty())       throw new IllegalStateException("Nothing selected!");
 else       if (singleXml)       XmlGenerator.generate(pkg,all,new File(outFolder,"Ignite.xml"),askOverwrite);
      perceptualDelay(started);
      return null;
    }
    /** 
 * {@inheritDoc} 
 */
    @Override protected void succeeded(){
      super.succeeded();
      unlockUI(genLayerPnl,genPnl,prevBtn,nextBtn);
      MessageBox.informationDialog(owner,"Generation complete!");
      if (openFolderCh.isSelected())       try {
        java.awt.Desktop.getDesktop().open(destFolder);
      }
 catch (      IOException e) {
        MessageBox.errorDialog(owner,"Failed to open folder with results.",e);
      }
    }
    /** 
 * {@inheritDoc} 
 */
    @Override protected void cancelled(){
      super.cancelled();
      unlockUI(genLayerPnl,genPnl,prevBtn,nextBtn);
      MessageBox.warningDialog(owner,"Generation canceled.");
    }
    /** 
 * {@inheritDoc} 
 */
    @Override protected void failed(){
      super.succeeded();
      unlockUI(genLayerPnl,genPnl,prevBtn,nextBtn);
      MessageBox.errorDialog(owner,"Generation failed.",getException());
    }
  }
;
  exec.submit(task);
}
