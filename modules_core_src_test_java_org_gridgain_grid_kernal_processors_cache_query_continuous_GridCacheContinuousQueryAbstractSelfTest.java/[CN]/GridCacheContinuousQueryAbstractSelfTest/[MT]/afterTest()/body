{
  assertEquals(gridCount(),grid(0).nodes().size());
  for (int i=0; i < gridCount(); i++)   grid(i).cache(null).removeAll();
  for (int i=0; i < gridCount(); i++) {
    GridContinuousProcessor proc=((GridKernal)grid(i)).context().continuous();
    assertEquals(0,((Map)U.field(proc,"locInfos")).size());
    assertEquals(0,((Map)U.field(proc,"rmtInfos")).size());
    assertEquals(0,((Map)U.field(proc,"startFuts")).size());
    assertEquals(0,((Map)U.field(proc,"waitForStartAck")).size());
    assertEquals(0,((Map)U.field(proc,"stopFuts")).size());
    assertEquals(0,((Map)U.field(proc,"waitForStopAck")).size());
    assertEquals(0,((Map)U.field(proc,"pending")).size());
    GridCacheContinuousQueryManager mgr=((GridKernal)grid(i)).context().cache().internalCache().context().continuousQueries();
    assertEquals(0,((Map)U.field(mgr,"lsnrs")).size());
  }
}
