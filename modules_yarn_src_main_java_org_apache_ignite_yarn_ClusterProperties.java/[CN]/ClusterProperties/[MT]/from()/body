{
  ClusterProperties prop=new ClusterProperties();
  prop.clusterName=getStringProperty(IGNITE_CLUSTER_NAME,null,DEFAULT_CLUSTER_NAME);
  prop.userLibsUrl=getStringProperty(IGNITE_USERS_LIBS_URL,null,null);
  prop.igniteCfgUrl=getStringProperty(IGNITE_CONFIG_XML_URL,null,null);
  prop.cpuPerNode=getDoubleProperty(IGNITE_RUN_CPU_PER_NODE,null,1.0);
  prop.memPerNode=getDoubleProperty(IGNITE_MEMORY_PER_NODE,null,2048.0);
  prop.nodeCnt=getDoubleProperty(IGNITE_NODE_COUNT,null,2.0);
  prop.igniteVer=getStringProperty(IGNITE_VERSION,null,DEFAULT_IGNITE_VERSION);
  prop.igniteWorkDir=getStringProperty(IGNITE_WORKING_DIR,null,DEFAULT_IGNITE_WORK_DIR);
  prop.igniteCfg=getStringProperty(IGNITE_CONFIG_XML,null,null);
  prop.userLibs=getStringProperty(IGNITE_USERS_LIBS,null,null);
  String pattern=getStringProperty(IGNITE_HOSTNAME_CONSTRAINT,null,null);
  if (pattern != null) {
    try {
      prop.hostnameConstraint=Pattern.compile(pattern);
    }
 catch (    PatternSyntaxException e) {
      log.log(Level.WARNING,"IGNITE_HOSTNAME_CONSTRAINT has invalid pattern. It will be ignore.",e);
    }
  }
  return prop;
}
