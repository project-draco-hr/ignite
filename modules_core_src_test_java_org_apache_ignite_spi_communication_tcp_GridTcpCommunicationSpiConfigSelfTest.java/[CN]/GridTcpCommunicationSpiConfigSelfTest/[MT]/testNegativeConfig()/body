{
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"localPort",1023);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"localPort",65636);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"localPortRange",-1);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"idleConnectionTimeout",0);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"connectionBufferSize",-1);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"connectionBufferFlushFrequency",0);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"socketReceiveBuffer",-1);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"socketSendBuffer",-1);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"messageQueueLimit",-1);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"reconnectCount",0);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"selectorsCount",0);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"minimumBufferedMessageCount",-1);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"connectTimeout",-1);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"maxConnectTimeout",-1);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"socketWriteTimeout",-1);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"ackSendThreshold",0);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"ackSendThreshold",-1);
  checkNegativeSpiProperty(new TcpCommunicationSpi(),"unacknowledgedMessagesBufferSize",-1);
}
