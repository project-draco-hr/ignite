{
  GridCache<Integer,Integer> c=grid(0).cache(null);
  c.transform(key,new C1<Integer,Integer>(){
    @Override public Integer apply(    Integer val){
      assertNull("Unexpected value: " + val,val);
      return null;
    }
  }
);
  c.putx(key,1);
  c.transform(key,new C1<Integer,Integer>(){
    @Override public Integer apply(    Integer val){
      assertNotNull("Unexpected value: " + val,val);
      assertEquals((Integer)1,val);
      return val + 1;
    }
  }
);
  assertEquals((Integer)2,c.get(key));
  c.transform(key,new C1<Integer,Integer>(){
    @Override public Integer apply(    Integer val){
      assertNotNull("Unexpected value: " + val,val);
      assertEquals((Integer)2,val);
      return val;
    }
  }
);
  assertEquals((Integer)2,c.get(key));
  c.transform(key,new C1<Integer,Integer>(){
    @Override public Integer apply(    Integer val){
      assertNotNull("Unexpected value: " + val,val);
      assertEquals((Integer)2,val);
      return null;
    }
  }
);
  assertNull(c.get(key));
}
