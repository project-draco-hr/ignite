{
  long valPtr=0;
  long keyPtr=0;
  if (val != null) {
    valPtr=write(12,val,valSer);
    int valSize=writtenSize() - 12;
    valueSize(valPtr,valSize);
  }
  long newMeta=0;
  int newMetaLevel=-1;
  int top=topLevel.get();
  long prevMeta=0;
  long meta=heads.get(top);
  for (int level=top; ; ) {
    while (meta == 0 && level != 0)     meta=nextMeta(prevMeta,--level);
    if (meta == 0) {
      keyPtr=writeKey(key);
      newMetaLevel=nextLevel(rnd);
      newMeta=createMeta(keyPtr,valPtr,newMetaLevel);
      if (casNextMeta(prevMeta,newMetaLevel,0,newMeta)) {
        laceUp(newMeta,newMetaLevel);
        return newMeta;
      }
    }
    Object k=keyReader.readKey(meta);
    int res=cmp.compare(key,k);
    if (res == 0) {
      if (newMeta != 0)       localDeallocate(keyPtr);
      if (valPtr == 0)       return meta;
      for (; ; ) {
        long nextVal=value(meta);
        nextValue(valPtr,nextVal);
        if (casValue(meta,nextVal,valPtr))         return meta;
      }
    }
    if (res > 0) {
      prevMeta=meta;
      meta=nextMeta(meta,level);
    }
 else     if (--level < 0) {
      meta=0;
    }
  }
}
