{
  grid().cache(null).resetMetrics();
  grid().cache(CACHE_NAME).resetMetrics();
  grid().cache(null).putx("key1","val");
  grid().cache(null).putx("key2","val");
  grid().cache(null).putx("key2","val");
  grid().cache(null).get("key1");
  grid().cache(null).get("key2");
  grid().cache(null).get("key2");
  grid().cache(CACHE_NAME).putx("key1","val");
  grid().cache(CACHE_NAME).putx("key2","val");
  grid().cache(CACHE_NAME).putx("key2","val");
  grid().cache(CACHE_NAME).get("key1");
  grid().cache(CACHE_NAME).get("key2");
  grid().cache(CACHE_NAME).get("key2");
  Map<String,Long> m=client.cacheMetrics(null);
  assertNotNull(m);
  assertEquals(7,m.size());
  assertEquals(3,m.get("reads").longValue());
  assertEquals(3,m.get("writes").longValue());
  m=client.cacheMetrics(CACHE_NAME);
  assertNotNull(m);
  assertEquals(7,m.size());
  assertEquals(3,m.get("reads").longValue());
  assertEquals(3,m.get("writes").longValue());
}
