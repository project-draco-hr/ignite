{
  assertEquals(15L,client().cacheIncrement(null,"key",10L,5L));
  assertEquals(15L,grid().cache(null).dataStructures().atomicLong("key",0,true).get());
  assertEquals(18L,client().cacheIncrement(null,"key",20L,3L));
  assertEquals(18L,grid().cache(null).dataStructures().atomicLong("key",0,true).get());
  assertEquals(20L,client().cacheIncrement(null,"key",null,2L));
  assertEquals(20L,grid().cache(null).dataStructures().atomicLong("key",0,true).get());
  assertEquals(15L,client().cacheIncrement(CACHE_NAME,"key",10L,5L));
  assertEquals(15L,grid().cache(CACHE_NAME).dataStructures().atomicLong("key",0,true).get());
  assertEquals(18L,client().cacheIncrement(CACHE_NAME,"key",20L,3L));
  assertEquals(18L,grid().cache(CACHE_NAME).dataStructures().atomicLong("key",0,true).get());
  assertEquals(20L,client().cacheIncrement(CACHE_NAME,"key",null,2L));
  assertEquals(20L,grid().cache(CACHE_NAME).dataStructures().atomicLong("key",0,true).get());
}
