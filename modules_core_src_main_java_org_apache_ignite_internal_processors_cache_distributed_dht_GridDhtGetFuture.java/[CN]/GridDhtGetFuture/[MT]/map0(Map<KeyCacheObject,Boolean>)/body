{
  Map<KeyCacheObject,Boolean> mappedKeys=null;
  for (  Map.Entry<KeyCacheObject,Boolean> key : keys.entrySet()) {
    int part=cctx.affinity().partition(key.getKey());
    if (retries == null || !retries.contains(part)) {
      if (!map(key.getKey())) {
        if (retries == null)         retries=new HashSet<>();
        retries.add(part);
        if (mappedKeys == null) {
          mappedKeys=U.newLinkedHashMap(keys.size());
          for (          Map.Entry<KeyCacheObject,Boolean> key1 : keys.entrySet()) {
            if (key1.getKey() == key.getKey())             break;
            mappedKeys.put(key.getKey(),key1.getValue());
          }
        }
      }
 else       if (mappedKeys != null)       mappedKeys.put(key.getKey(),key.getValue());
    }
  }
  IgniteInternalFuture<Collection<GridCacheEntryInfo>> fut=getAsync(mappedKeys == null ? keys : mappedKeys);
  if (fut.isDone() && futuresCount() == 0) {
    if (fut.error() != null)     onDone(fut.error());
 else     onDone(fut.result());
    return;
  }
  add(fut);
}
