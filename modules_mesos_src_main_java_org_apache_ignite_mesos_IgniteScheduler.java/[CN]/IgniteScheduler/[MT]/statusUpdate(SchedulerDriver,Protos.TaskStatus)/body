{
  final String taskId=taskStatus.getTaskId().getValue();
  log.log(Level.INFO,"Received update event task: {0} is in state: {1}",new Object[]{taskId,taskStatus.getState()});
  if (taskStatus.getState().equals(Protos.TaskState.TASK_FAILED) || taskStatus.getState().equals(Protos.TaskState.TASK_ERROR) || taskStatus.getState().equals(Protos.TaskState.TASK_FINISHED)|| taskStatus.getState().equals(Protos.TaskState.TASK_KILLED)|| taskStatus.getState().equals(Protos.TaskState.TASK_LOST)) {
    IgniteTask failedTask=tasks.remove(taskId);
    if (failedTask != null) {
      List<Protos.Request> requests=new ArrayList<>();
      Protos.Request request=Protos.Request.newBuilder().addResources(Protos.Resource.newBuilder().setType(Protos.Value.Type.SCALAR).setName(MEM).setScalar(Protos.Value.Scalar.newBuilder().setValue(failedTask.mem()))).addResources(Protos.Resource.newBuilder().setType(Protos.Value.Type.SCALAR).setName(CPU).setScalar(Protos.Value.Scalar.newBuilder().setValue(failedTask.cpuCores()))).build();
      requests.add(request);
      schedulerDriver.requestResources(requests);
    }
  }
}
