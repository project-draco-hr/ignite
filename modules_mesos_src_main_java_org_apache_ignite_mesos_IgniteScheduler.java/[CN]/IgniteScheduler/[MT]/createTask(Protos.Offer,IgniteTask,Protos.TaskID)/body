{
  Protos.ContainerInfo.DockerInfo.Builder docker=Protos.ContainerInfo.DockerInfo.newBuilder().setImage(IMAGE).setNetwork(Protos.ContainerInfo.DockerInfo.Network.HOST);
  Protos.ContainerInfo.Builder cont=Protos.ContainerInfo.newBuilder();
  cont.setType(Protos.ContainerInfo.Type.DOCKER);
  cont.setDocker(docker.build());
  return Protos.TaskInfo.newBuilder().setName("task " + taskId.getValue()).setTaskId(taskId).setSlaveId(offer.getSlaveId()).addResources(Protos.Resource.newBuilder().setName(CPUS).setType(Protos.Value.Type.SCALAR).setScalar(Protos.Value.Scalar.newBuilder().setValue(igniteTask.cpuCores()))).addResources(Protos.Resource.newBuilder().setName(MEM).setType(Protos.Value.Type.SCALAR).setScalar(Protos.Value.Scalar.newBuilder().setValue(igniteTask.mem()))).setContainer(cont).setCommand(Protos.CommandInfo.newBuilder().setShell(false).addArguments(STARTUP_SCRIPT).addArguments(String.valueOf(igniteTask.mem())).addArguments(getAddress())).build();
}
