{
  GridCache<String,Integer> cache=grid.cache(null);
  UUID locId=grid.localNode().id();
  UUID itemPrimaryId=primaryId(grid,itemKey);
  UUID cntrPrimaryId=primaryId(grid,CNTR_KEY);
  boolean isCntrPrimary=cntrPrimaryId.equals(locId);
  try (GridCacheTx tx=cache.txStart(PESSIMISTIC,REPEATABLE_READ)){
    if (DEBUG)     info("Before near get [retry=" + retry + ", xid="+ tx.xid()+ ", node="+ grid.name()+ ", isCntrPrimary="+ isCntrPrimary+ ", nearId="+ locId+ ", nearEntry="+ nearEntry(locId,CNTR_KEY)+ (isCntrPrimary ? ", dhtEntry=" + dhtEntry(locId,CNTR_KEY) : "")+ ']');
    Integer cntr=cache.get(CNTR_KEY);
    int newVal=cntr + 1;
    if (putCntr) {
      if (DEBUG)       info("Before near put counter [retry=" + retry + ", isCntrPrimary="+ isCntrPrimary+ ", cur="+ cntr+ ", new="+ newVal+ ", nearEntry="+ nearEntry(locId,CNTR_KEY)+ (isCntrPrimary ? ", dhtEntry=" + dhtEntry(locId,CNTR_KEY) : "")+ ']');
      cache.putx(CNTR_KEY,newVal);
    }
    if (DEBUG)     info("Before near put item [retry=" + retry + ", key="+ itemKey+ ", cur="+ cntr+ ", new="+ newVal+ ", nearEntry="+ nearEntry(locId,itemKey)+ ", dhtEntry="+ dhtEntry(itemPrimaryId,itemKey)+ ']');
    cache.putx(itemKey,newVal);
    if (DEBUG)     info("After near put item [retry=" + retry + ", key="+ itemKey+ ", old="+ cntr+ ", new="+ newVal+ ", nearEntry="+ nearEntry(locId,itemKey)+ ", dhtEntry"+ dhtEntry(itemPrimaryId,itemKey)+ ']');
    tx.commit();
  }
 }
