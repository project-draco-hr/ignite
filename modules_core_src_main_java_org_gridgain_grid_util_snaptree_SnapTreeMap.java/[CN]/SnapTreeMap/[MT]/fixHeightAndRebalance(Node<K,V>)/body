{
  while (node != null && node.parent != null) {
    final int condition=nodeCondition(node);
    if (condition == NothingRequired || isUnlinked(node.shrinkOVL)) {
      return;
    }
    if (condition != UnlinkRequired && condition != RebalanceRequired) {
synchronized (node) {
        node=fixHeight_nl(node);
      }
    }
 else {
      final Node<K,V> nParent=node.parent;
synchronized (nParent) {
        if (!isUnlinked(nParent.shrinkOVL) && node.parent == nParent) {
synchronized (node) {
            node=rebalance_nl(nParent,node);
          }
        }
      }
    }
  }
}
