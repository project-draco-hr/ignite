{
  Ignite g0=grid(0);
  IgniteCache<Integer,Integer> cache0=g0.cache(null);
  int key;
  for (int i=0; ; i++) {
    if (affinity(cache0).isBackup(g0.cluster().localNode(),i)) {
      cache0.getAndPut(i,i);
      cache0.get(i);
      key=i;
      info("Puts: " + cache0.localMetrics().getCachePuts());
      info("Reads: " + cache0.localMetrics().getCacheGets());
      info("Affinity nodes: " + U.nodes2names(affinity(cache0).mapKeyToPrimaryAndBackups(i)));
      break;
    }
  }
  for (int j=0; j < gridCount(); j++) {
    Ignite g=grid(j);
    IgniteCache<Object,Object> jcache=g.cache(null);
    if (affinity(jcache).isPrimaryOrBackup(g.cluster().localNode(),key))     assertEquals(1,jcache.localMetrics().getCachePuts());
 else     assertEquals(0,jcache.localMetrics().getCachePuts());
    if (affinity(jcache).isPrimary(g.cluster().localNode(),key)) {
      assertEquals(1,jcache.localMetrics().getCacheGets());
      assertEquals(0,jcache.localMetrics().getCacheHits());
      assertEquals(1,jcache.localMetrics().getCacheMisses());
    }
 else     if (affinity(jcache).isBackup(g.cluster().localNode(),key)) {
      assertEquals(1,jcache.localMetrics().getCacheGets());
      assertEquals(1,jcache.localMetrics().getCacheHits());
      assertEquals(0,jcache.localMetrics().getCacheMisses());
    }
 else {
      assertEquals(0,jcache.localMetrics().getCacheGets());
      assertEquals(0,jcache.localMetrics().getCacheHits());
      assertEquals(0,jcache.localMetrics().getCacheMisses());
    }
  }
}
