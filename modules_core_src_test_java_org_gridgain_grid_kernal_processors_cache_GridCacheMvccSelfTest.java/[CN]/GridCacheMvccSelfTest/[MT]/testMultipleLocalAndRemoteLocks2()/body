{
  GridCacheAdapter<String,String> cache=grid.internalCache();
  GridCacheContext<String,String> ctx=cache.context();
  GridCacheTestEntryEx<String,String> entry1=new GridCacheTestEntryEx<>(ctx,"1");
  GridCacheTestEntryEx<String,String> entry2=new GridCacheTestEntryEx<>(ctx,"2");
  GridCacheTestEntryEx<String,String> entry3=new GridCacheTestEntryEx<>(ctx,"3");
  GridCacheVersion ver1=version(1);
  GridCacheVersion ver2=version(2);
  GridCacheVersion ver3=version(3);
  GridCacheMvccCandidate<String> c13=entry1.addLocal(1,ver3,0,true,true);
  entry1.readyLocal(ver3);
  checkLocalOwner(entry1.candidate(ver3),ver3,false);
  GridCacheMvccCandidate<String> c11=entry1.addLocal(2,ver2,0,true,false);
  GridCacheMvccCandidate<String> c21=entry2.addLocal(2,ver2,0,true,false);
  GridCacheMvccCandidate<String> c31=entry3.addLocal(2,ver2,0,true,false);
  GridCacheMvccCandidate<String> c33=entry3.addLocal(1,ver3,0,true,true);
  linkCandidates(ctx,c11,c21,c31);
  entry1.readyLocal(ver2);
  entry2.readyLocal(ver2);
  entry3.readyLocal(ver2);
  checkLocal(entry1.candidate(ver2),ver2,true,false,false);
  checkLocal(entry2.candidate(ver2),ver2,true,false,false);
  checkLocal(entry3.candidate(ver2),ver2,true,false,false);
  checkLocal(entry3.candidate(ver3),ver3,false,false,false);
  linkCandidates(ctx,c13,c33);
  entry2.addRemote(UUID.randomUUID(),3,ver1,0,false,true);
  checkLocal(entry2.candidate(ver2),ver2,true,false,false);
  entry3.addRemote(UUID.randomUUID(),3,ver1,0,false,true);
  entry3.readyLocal(ver3);
  checkLocal(entry1.candidate(ver3),ver3,true,true,false);
  checkLocal(entry3.candidate(ver3),ver3,true,false,false);
  checkLocal(entry1.candidate(ver2),ver2,true,false,false);
  checkLocal(entry2.candidate(ver2),ver2,true,false,false);
  checkLocal(entry3.candidate(ver2),ver2,true,false,false);
  entry2.removeLock(ver1);
  checkLocal(entry1.candidate(ver3),ver3,true,true,false);
  checkLocal(entry3.candidate(ver3),ver3,true,false,false);
  checkLocal(entry1.candidate(ver2),ver2,true,false,false);
  checkLocal(entry2.candidate(ver2),ver2,true,false,false);
  checkLocal(entry3.candidate(ver2),ver2,true,false,false);
  entry3.removeLock(ver1);
  checkLocal(entry1.candidate(ver3),ver3,true,true,false);
  checkLocal(entry3.candidate(ver3),ver3,true,true,false);
  checkLocal(entry1.candidate(ver2),ver2,true,false,false);
  checkLocal(entry2.candidate(ver2),ver2,true,false,false);
  checkLocal(entry3.candidate(ver2),ver2,true,false,false);
  entry1.releaseLocal(1);
  entry2.recheckLock();
  checkLocal(entry1.candidate(ver2),ver2,true,true,false);
  checkLocal(entry2.candidate(ver2),ver2,true,true,false);
  checkLocal(entry3.candidate(ver2),ver2,true,false,false);
  entry3.releaseLocal(1);
  checkLocal(entry1.candidate(ver2),ver2,true,true,false);
  checkLocal(entry2.candidate(ver2),ver2,true,true,false);
  checkLocal(entry3.candidate(ver2),ver2,true,true,false);
}
