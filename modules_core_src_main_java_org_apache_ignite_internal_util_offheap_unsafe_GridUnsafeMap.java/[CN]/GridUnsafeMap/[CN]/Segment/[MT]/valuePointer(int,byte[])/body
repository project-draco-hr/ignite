{
  long binAddr=readLock(hash);
  try {
    long addr=Bin.first(binAddr,mem);
    while (addr != 0) {
      if (Entry.keyEquals(addr,keyBytes,mem)) {
        if (lru != null) {
          long qAddr=Entry.queueAddress(addr,mem);
          if (qAddr != 0 && Entry.clearQueueAddress(addr,qAddr,mem))           lru.remove(qAddr);
        }
        int keyLen=Entry.readKeyLength(addr,mem);
        int valLen=Entry.readValueLength(addr,mem);
        return new IgniteBiTuple<>(addr + HEADER_SIZE + keyLen,valLen);
      }
      addr=Entry.nextAddress(addr,mem);
    }
    return null;
  }
  finally {
    readUnlock();
  }
}
