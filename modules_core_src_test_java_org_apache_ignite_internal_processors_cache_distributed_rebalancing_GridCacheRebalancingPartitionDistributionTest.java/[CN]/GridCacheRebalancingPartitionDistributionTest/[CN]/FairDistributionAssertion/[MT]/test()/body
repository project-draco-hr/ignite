{
  super.test();
  Affinity<?> affinity=ignite().affinity(CACHE_NAME);
  int partCnt=affinity.partitions();
  Map<ClusterNode,Integer> partMap=new HashMap<>(serverCount());
  for (int i=0; i < partCnt; i++) {
    ClusterNode node=affinity.mapPartitionToNode(i);
    int cnt=partMap.containsKey(node) ? partMap.get(node) : 0;
    partMap.put(node,cnt + 1);
  }
  int fairCnt=partCnt / serverCount();
  for (  int count : partMap.values()) {
    double deviation=Math.abs(fairCnt - count) / (double)fairCnt;
    if (deviation > MAX_DEVIATION) {
      throw new AssertionError("partition distribution deviation exceeded max: fair count=" + fairCnt + ", actual count="+ count+ ", deviation="+ deviation);
    }
  }
}
