{
  int lastExistingIdx=pathIds.lastExistingIndex();
  IgfsEntryInfo lastExistingInfo=lockInfos.get(pathIds.lastExistingId());
  int curIdx=lastExistingIdx + 1;
  String curPart=pathIds.part(curIdx);
  IgniteUuid curId=pathIds.surrogateId(curIdx);
  IgniteUuid curParentId=lastExistingInfo.id();
  if (lastExistingInfo.hasChild(curPart))   return null;
  id2InfoPrj.invoke(lastExistingInfo.id(),new IgfsMetaDirectoryListingAddProcessor(curPart,new IgfsListingEntry(curId,dir || !pathIds.isLastIndex(curIdx))));
  IgfsPath lastCreatedPath=pathIds.lastExistingPath();
  List<IgfsPath> createdPaths=new ArrayList<>(pathIds.count() - curIdx);
  long createTime=System.currentTimeMillis();
  while (curIdx < pathIds.count() - 1) {
    int nextIdx=curIdx + 1;
    String nextPart=pathIds.part(nextIdx);
    IgniteUuid nextId=pathIds.surrogateId(nextIdx);
    id2InfoPrj.invoke(curId,new IgfsMetaDirectoryCreateProcessor(createTime,dirProps,nextPart,new IgfsListingEntry(nextId,dir || !pathIds.isLastIndex(nextIdx))));
    lastCreatedPath=new IgfsPath(lastCreatedPath,curPart);
    createdPaths.add(lastCreatedPath);
    curIdx++;
    curParentId=curId;
    curPart=nextPart;
    curId=nextId;
  }
  IgfsEntryInfo info;
  if (dir)   info=invokeAndGet(curId,new IgfsMetaDirectoryCreateProcessor(createTime,dirProps));
 else   info=invokeAndGet(curId,new IgfsMetaFileCreateProcessor(createTime,fileProps,blockSize,affKey,createFileLockId(false),evictExclude));
  createdPaths.add(pathIds.path());
  return new IgfsPathsCreateResult(createdPaths,info,curParentId);
}
