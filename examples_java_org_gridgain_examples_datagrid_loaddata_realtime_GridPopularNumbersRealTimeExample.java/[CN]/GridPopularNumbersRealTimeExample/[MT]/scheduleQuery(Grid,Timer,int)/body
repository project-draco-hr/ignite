{
  TimerTask task=new TimerTask(){
    private GridCacheFieldsQuery qry;
    @Override public void run(){
      GridCache<Integer,Long> cache=g.cache(null);
      if (qry == null)       qry=cache.queries().createFieldsQuery("select _key, _val from Long order by _val desc limit " + cnt);
      try {
        List<List<Object>> results=new ArrayList<>(qry.execute().get());
        Collections.sort(results,new Comparator<List<Object>>(){
          @Override public int compare(          List<Object> r1,          List<Object> r2){
            long cnt1=(Long)r1.get(1);
            long cnt2=(Long)r2.get(1);
            return cnt1 < cnt2 ? 1 : cnt1 > cnt2 ? -1 : 0;
          }
        }
);
        for (int i=0; i < cnt; i++) {
          List<Object> res=results.get(i);
          System.out.println(res.get(0) + "=" + res.get(1));
        }
        System.out.println("----------------");
      }
 catch (      GridException e) {
        e.printStackTrace();
      }
    }
  }
;
  timer.schedule(task,3000,3000);
  return task;
}
