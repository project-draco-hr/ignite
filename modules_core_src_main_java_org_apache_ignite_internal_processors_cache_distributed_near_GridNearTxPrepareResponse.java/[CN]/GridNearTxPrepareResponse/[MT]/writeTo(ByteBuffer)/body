{
  writer.setBuffer(buf);
  if (!super.writeTo(buf))   return false;
  if (!typeWritten) {
    if (!writer.writeByte(null,directType()))     return false;
    typeWritten=true;
  }
switch (state) {
case 10:
    if (!writer.writeMessage("dhtVer",dhtVer))     return false;
  state++;
case 11:
if (!writer.writeByteArray("filterFailedKeyBytes",filterFailedKeyBytes)) return false;
state++;
case 12:
if (!writer.writeIgniteUuid("futId",futId)) return false;
state++;
case 13:
if (!writer.writeCollection("invalidParts",invalidParts,int.class)) return false;
state++;
case 14:
if (!writer.writeIgniteUuid("miniId",miniId)) return false;
state++;
case 15:
if (!writer.writeCollection("ownedValsBytes",ownedValsBytes,byte[].class)) return false;
state++;
case 16:
if (!writer.writeCollection("pending",pending,GridCacheVersion.class)) return false;
state++;
case 17:
if (!writer.writeByteArray("retValBytes",retValBytes)) return false;
state++;
}
return true;
}
