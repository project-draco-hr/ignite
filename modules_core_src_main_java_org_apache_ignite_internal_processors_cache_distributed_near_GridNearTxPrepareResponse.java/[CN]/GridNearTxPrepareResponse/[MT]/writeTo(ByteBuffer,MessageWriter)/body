{
  writer.setBuffer(buf);
  if (!super.writeTo(buf,writer))   return false;
  if (!writer.isHeaderWritten()) {
    if (!writer.writeHeader(directType(),fieldsCount()))     return false;
    writer.onHeaderWritten();
  }
switch (writer.state()) {
case 10:
    if (!writer.writeMessage("dhtVer",dhtVer))     return false;
  writer.incrementState();
case 11:
if (!writer.writeByteArray("filterFailedKeyBytes",filterFailedKeyBytes)) return false;
writer.incrementState();
case 12:
if (!writer.writeIgniteUuid("futId",futId)) return false;
writer.incrementState();
case 13:
if (!writer.writeCollection("invalidParts",invalidParts,MessageCollectionItemType.INT)) return false;
writer.incrementState();
case 14:
if (!writer.writeIgniteUuid("miniId",miniId)) return false;
writer.incrementState();
case 15:
if (!writer.writeCollection("ownedValsBytes",ownedValsBytes,MessageCollectionItemType.BYTE_ARR)) return false;
writer.incrementState();
case 16:
if (!writer.writeCollection("pending",pending,MessageCollectionItemType.MSG)) return false;
writer.incrementState();
case 17:
if (!writer.writeByteArray("retValBytes",retValBytes)) return false;
writer.incrementState();
}
return true;
}
