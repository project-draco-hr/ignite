{
  try {
    Ignite ignite1=startGrid(0);
    IgniteCache<Integer,String> cache1=ignite1.cache(null);
    int keyCnt=10;
    putKeys(cache1,keyCnt);
    for (int i=0; i < keyCnt; i++) {
      assertNull(near(cache1).peekEx(i));
      assertNotNull((dht(cache1).peekEx(i)));
      assertEquals(Integer.toString(i),cache1.localPeek(i,CachePeekMode.ONHEAP));
    }
    int nodeCnt=3;
    Collection<Ignite> ignites=new ArrayList<>(nodeCnt);
    startGrids(nodeCnt,1,ignites);
    for (    Ignite g : ignites) {
      IgniteCache<Integer,String> c=g.cache(null);
      for (int i=0; i < keyCnt; i++)       assertNull(c.localPeek(i,CachePeekMode.ONHEAP));
    }
    Collection<Integer> keys=new LinkedList<>();
    for (int i=0; i < keyCnt; i++)     if (ignite1.affinity(null).mapKeyToNode(i).equals(ignite1.cluster().localNode()))     keys.add(i);
    info(">>> Finished checking nodes [keyCnt=" + keyCnt + ", nodeCnt="+ nodeCnt+ ", grids="+ U.grids2names(ignites)+ ']');
    for (Iterator<Ignite> it=ignites.iterator(); it.hasNext(); ) {
      Ignite g=it.next();
      it.remove();
      stopGrid(g.name());
      for (      Ignite gg : ignites) {
        IgniteCache<Integer,String> c=gg.cache(null);
        for (int i=0; i < keyCnt; i++)         assertNull(c.localPeek(i,CachePeekMode.ONHEAP));
      }
    }
    for (    Integer i : keys)     assertEquals(i.toString(),cache1.localPeek(i,CachePeekMode.ONHEAP));
  }
 catch (  Error|Exception e) {
    error("Test failed.",e);
    throw e;
  }
 finally {
    stopAllGrids();
  }
}
