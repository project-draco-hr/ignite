{
  for (int g=0; g < gridCount(); g++) {
    GridCacheAdapter cache0=internalCache(grid(g),null);
    GridCacheEntryEx e=cache0.peekEx(key);
    if (e == null && cache0.isNear())     e=((GridNearCacheAdapter)cache0).dht().peekEx(key);
    if (e != null) {
      CacheObject obj=e.rawGet();
      if (obj != null) {
        assertNotNull(obj);
        assertEquals(CacheObjectImpl.class,obj.getClass());
        assertNull("Unexpected value, node: " + g,GridTestUtils.getFieldValue(obj,CacheObjectAdapter.class,"val"));
        assertNotNull(obj.value(cache0.context().cacheObjectContext(),true));
        assertNull("Unexpected value after value() requested1: " + g,GridTestUtils.getFieldValue(obj,CacheObjectAdapter.class,"val"));
        assertNotNull(obj.value(cache0.context().cacheObjectContext(),false));
        assertNull("Unexpected value after value() requested2: " + g,GridTestUtils.getFieldValue(obj,CacheObjectAdapter.class,"val"));
      }
 else       assertFalse(aff.isPrimaryOrBackup(grid(g).localNode(),key));
    }
 else     assertFalse("Entry not found, node: " + g,aff.isPrimaryOrBackup(grid(g).localNode(),key));
  }
}
