{
  IgfsPath path=new IgfsPath("/someFile");
  long written=0;
  int i=0;
  int igfsIdx=0;
  int fileSize=30 * IGFS_GROUP_SIZE * IGFS_BLOCK_SIZE;
  while (written < fileSize) {
    IgniteFileSystem igfs=grid(igfsIdx).fileSystem("igfs");
    try (IgfsOutputStream out=igfs.append(path,true)){
      byte[] data=new byte[chunkSize];
      Arrays.fill(data,(byte)i);
      out.write(data);
    }
     System.out.println("Written [start=" + written + ", filler="+ i+ ']');
    written+=chunkSize;
    i++;
    if (rotate && i % 5 == 0) {
      igfsIdx++;
      if (igfsIdx >= NODE_CNT)       igfsIdx=0;
    }
  }
  IgniteFileSystem igfs=grid(0).fileSystem("igfs");
  try (IgfsInputStream in=igfs.open(path)){
    i=0;
    int read=0;
    byte[] chunk=new byte[chunkSize];
    while (read < fileSize) {
      readFully(in,chunk);
      for (      byte b : chunk)       assertEquals("For read offset [start=" + read + ", filler="+ (i & 0xFF)+ ']',i & 0xFF,b & 0xFF);
      i++;
      read+=chunkSize;
    }
  }
 }
