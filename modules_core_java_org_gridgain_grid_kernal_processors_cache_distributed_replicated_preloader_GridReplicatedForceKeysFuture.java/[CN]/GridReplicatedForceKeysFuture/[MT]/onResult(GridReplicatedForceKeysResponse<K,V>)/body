{
  boolean rec=cctx.events().isRecordable(EVT_CACHE_PRELOAD_OBJECT_LOADED);
  for (  GridCacheEntryInfo<K,V> info : res.forcedInfos()) {
    GridCacheEntryEx<K,V> entry=cctx.cache().entryEx(info.key());
    try {
      if (entry.initialValue(info.value(),info.valueBytes(),info.version(),info.ttl(),info.expireTime(),true,DR_NONE)) {
        if (rec && !entry.isInternal())         cctx.events().addEvent(entry.partition(),entry.key(),cctx.localNodeId(),(GridUuid)null,null,EVT_CACHE_PRELOAD_OBJECT_LOADED,info.value(),true,null,false);
      }
    }
 catch (    GridException e) {
      onDone(e);
      return;
    }
catch (    GridCacheEntryRemovedException ignore) {
      if (log.isDebugEnabled())       log.debug("Trying to preload removed entry (will ignore) [cacheName=" + cctx.namex() + ", entry="+ entry+ ']');
    }
  }
  onDone();
}
