{
  final long locOrder=cctx.localNode().order();
  Collection<GridNode> elderNodes=cctx.affinity().nodes(keys);
  rmtNodes=new ArrayList<>(elderNodes.size());
  for (  GridNode node : elderNodes) {
    if (node.order() < locOrder)     rmtNodes.add(node);
  }
  if (rmtNodes.isEmpty()) {
    onDone();
    return;
  }
  for (  K key : keys) {
    GridCacheEntryEx<K,V> e=cctx.cache().peekEx(key);
    try {
      if (e != null && !e.isNewLocked()) {
        if (log.isDebugEnabled())         log.debug("Will not preload key [cacheName=" + cctx.name() + ", key="+ key+ ", locId="+ cctx.nodeId()+ ']');
        continue;
      }
    }
 catch (    GridCacheEntryRemovedException ignore) {
      if (log.isDebugEnabled())       log.debug("Received removed entry for force keys request [entry=" + e + ", locId="+ cctx.nodeId()+ ']');
    }
    if (reqKeys == null)     reqKeys=new ArrayList<>(keys.size());
    reqKeys.add(key);
  }
  if (reqKeys == null) {
    onDone();
    return;
  }
  preloader.addFuture(this);
  sendRequest();
}
