{
  commState.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (commState.idx) {
case 3:
    byte[] candsByIdxBytes0=commState.getByteArray();
  if (candsByIdxBytes0 == BYTE_ARR_NOT_READ)   return false;
candsByIdxBytes=candsByIdxBytes0;
commState.idx++;
case 4:
byte[] candsByKeyBytes0=commState.getByteArray();
if (candsByKeyBytes0 == BYTE_ARR_NOT_READ) return false;
candsByKeyBytes=candsByKeyBytes0;
commState.idx++;
case 5:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt();
}
if (commState.readSize >= 0) {
if (committedVers == null) committedVers=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
GridCacheVersion _val=commState.getCacheVersion();
if (_val == CACHE_VER_NOT_READ) return false;
committedVers.add((GridCacheVersion)_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 6:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt();
}
if (commState.readSize >= 0) {
if (rolledbackVers == null) rolledbackVers=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
GridCacheVersion _val=commState.getCacheVersion();
if (_val == CACHE_VER_NOT_READ) return false;
rolledbackVers.add((GridCacheVersion)_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 7:
GridCacheVersion ver0=commState.getCacheVersion();
if (ver0 == CACHE_VER_NOT_READ) return false;
ver=ver0;
commState.idx++;
}
return true;
}
