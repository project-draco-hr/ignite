{
  commState.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (commState.idx) {
case 3:
    if (commState.readSize == -1) {
      commState.readSize=commState.getInt(null);
      if (!commState.lastRead())       return false;
    }
  if (commState.readSize >= 0) {
    if (filterBytes == null)     filterBytes=new byte[commState.readSize][];
    for (int i=commState.readItems; i < commState.readSize; i++) {
      byte[] _val=commState.getByteArray(null);
      if (!commState.lastRead())       return false;
      filterBytes[i]=(byte[])_val;
      commState.readItems++;
    }
  }
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 4:
futId=commState.getGridUuid("futId");
if (!commState.lastRead()) return false;
commState.idx++;
case 5:
if (commState.readSize == -1) {
commState.readSize=commState.getInt(null);
if (!commState.lastRead()) return false;
}
if (commState.readSize >= 0) {
if (keyBytes == null) keyBytes=new LinkedHashMap<>(commState.readSize,1.0f);
for (int i=commState.readItems; i < commState.readSize; i++) {
if (!commState.keyDone) {
byte[] _val=commState.getByteArray(null);
if (!commState.lastRead()) return false;
commState.cur=_val;
commState.keyDone=true;
}
boolean _val=commState.getBoolean(null);
if (!commState.lastRead()) return false;
keyBytes.put((byte[])commState.cur,_val);
commState.keyDone=false;
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.cur=null;
commState.idx++;
case 6:
miniId=commState.getGridUuid("miniId");
if (!commState.lastRead()) return false;
commState.idx++;
case 7:
reload=commState.getBoolean("reload");
if (!commState.lastRead()) return false;
commState.idx++;
case 8:
topVer=commState.getLong("topVer");
if (!commState.lastRead()) return false;
commState.idx++;
case 9:
ver=commState.getCacheVersion("ver");
if (!commState.lastRead()) return false;
commState.idx++;
case 10:
subjId=commState.getUuid("subjId");
if (!commState.lastRead()) return false;
commState.idx++;
case 11:
taskNameHash=commState.getInt("taskNameHash");
if (!commState.lastRead()) return false;
commState.idx++;
}
return true;
}
