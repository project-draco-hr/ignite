{
  GridGgfsConfiguration ggfsCfg=new GridGgfsConfiguration();
  ggfsCfg.setDataCacheName("dataCache");
  ggfsCfg.setMetaCacheName("metaCache");
  ggfsCfg.setName("ggfs");
  ggfsCfg.setBlockSize(BLOCK_SIZE);
  ggfsCfg.setDefaultMode(PRIMARY);
  ggfsCfg.setFragmentizerEnabled(false);
  GridCacheConfiguration dataCacheCfg=new GridCacheConfiguration();
  dataCacheCfg.setName("dataCache");
  dataCacheCfg.setCacheMode(PARTITIONED);
  dataCacheCfg.setAtomicityMode(TRANSACTIONAL);
  dataCacheCfg.setDistributionMode(PARTITIONED_ONLY);
  dataCacheCfg.setWriteSynchronizationMode(FULL_SYNC);
  dataCacheCfg.setAffinityMapper(new GridGgfsGroupDataBlocksKeyMapper(1));
  dataCacheCfg.setBackups(0);
  dataCacheCfg.setQueryIndexEnabled(false);
  GridCacheConfiguration metaCacheCfg=new GridCacheConfiguration();
  metaCacheCfg.setName("metaCache");
  metaCacheCfg.setCacheMode(REPLICATED);
  metaCacheCfg.setAtomicityMode(TRANSACTIONAL);
  dataCacheCfg.setWriteSynchronizationMode(GridCacheWriteSynchronizationMode.FULL_SYNC);
  metaCacheCfg.setQueryIndexEnabled(false);
  IgniteConfiguration cfg=new IgniteConfiguration();
  GridTcpDiscoverySpi discoSpi=new GridTcpDiscoverySpi();
  discoSpi.setIpFinder(IP_FINDER);
  cfg.setDiscoverySpi(discoSpi);
  cfg.setCacheConfiguration(dataCacheCfg,metaCacheCfg);
  cfg.setGgfsConfiguration(ggfsCfg);
  cfg.setGridName("node-" + idx);
  return cfg;
}
