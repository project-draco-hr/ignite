{
  try (Grid g=args.length == 0 ? GridGain.start("examples/config/example-default.xml") : GridGain.start(args[0])){
    if (g.forRemotes().nodes().isEmpty()) {
      System.out.println(">>> This example requires one or more remote nodes to be in topology.");
      System.out.println(">>> Please start remote nodes and rerun the example.");
      System.out.println();
      return;
    }
    GridComputeTask<String,Integer> task=new GridFailoverExampleTask();
    GridComputeTaskFuture<Integer> f=g.compute().execute(task,JOB_ARG);
    int phraseLen=f.get();
    System.out.println(">>>");
    if (phraseLen < 0)     throw new GridException("\"GridFailoverExample\" example finished with wrong result " + "[result=" + phraseLen + ", expected="+ JOB_ARG.length()+ ']');
 else {
      System.out.println(">>> Finished executing \"GridFailoverExample\".");
      System.out.println(">>> Total number of characters in the phrase is '" + phraseLen + "'.");
      System.out.println(">>> You should see exception stack trace from failed job on one node.");
      System.out.println(">>> Failed job should have been failed over to another node.");
      System.out.println(">>> You should see print out of '" + JOB_ARG + "' on another node.");
      System.out.println(">>> Check all nodes for output (this node is also part of the grid).");
    }
    System.out.println(">>>");
  }
 }
