{
  if (log.isDebugEnabled())   log.debug("Read operation will be blocked [op=" + op + ", queue="+ this+ ']');
  int attempts=0;
  T retVal;
  while (true) {
    checkRemovedx();
    attempts++;
    try {
      readSem.acquire();
      if (peek) synchronized (mux) {
        checkRemovedx();
        readSem.release();
      }
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
      throw new GridInterruptedException("Operation has been interrupted [op=" + op + ", queue="+ this+ ']',e);
    }
    retVal=CU.outTx(cmd,cctx);
    if (retVal != null)     break;
    if (attempts % blockAttemptWarnThreshold == 0) {
      if (log.isDebugEnabled())       log.debug("Exceeded warning threshold for execution attempts [op=" + op + ", attempts="+ attempts+ ", queue="+ this+ ']');
    }
  }
  if (log.isDebugEnabled())   log.debug("Operation unblocked [op=" + op + ", retVal="+ retVal+ ", queue="+ this+ ']');
  return retVal;
}
