{
  AffinityTopologyVersion topVer=updateReq.topologyVersion();
  List<ClusterNode> dhtNodes=cctx.dht().topology().nodes(entry.partition(),topVer);
  if (log.isDebugEnabled())   log.debug("Mapping entry to DHT nodes [nodes=" + U.nodeIds(dhtNodes) + ", entry="+ entry+ ']');
  CacheWriteSynchronizationMode syncMode=updateReq.writeSynchronizationMode();
  keys.add(entry.key());
  for (int i=0; i < dhtNodes.size(); i++) {
    ClusterNode node=dhtNodes.get(i);
    UUID nodeId=node.id();
    if (!nodeId.equals(cctx.localNodeId())) {
      GridDhtAtomicUpdateRequest updateReq=mappings.get(nodeId);
      if (updateReq == null) {
        updateReq=new GridDhtAtomicUpdateRequest(cctx.cacheId(),nodeId,futVer,writeVer,syncMode,topVer,forceTransformBackups,this.updateReq.subjectId(),this.updateReq.taskNameHash(),forceTransformBackups ? this.updateReq.invokeArguments() : null,cctx.deploymentEnabled(),this.updateReq.keepBinary(),this.updateReq.skipStore());
        mappings.put(nodeId,updateReq);
      }
      updateReq.addWriteValue(entry.key(),val,entryProcessor,ttl,conflictExpireTime,conflictVer,addPrevVal,entry.partition(),prevVal,updateCntr);
    }
  }
}
