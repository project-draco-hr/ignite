{
  this.cctx=cctx;
  this.writeVer=writeVer;
  futVer=cctx.versions().next(updateReq.topologyVersion());
  this.updateReq=updateReq;
  this.completionCb=completionCb;
  this.updateRes=updateRes;
  if (log == null)   log=U.logger(cctx.kernalContext(),logRef,GridDhtAtomicUpdateFuture.class);
  keys=new ArrayList<>(updateReq.keys().size());
  boolean topLocked=updateReq.topologyLocked() || (updateReq.fastMap() && !updateReq.clientRequest());
  waitForExchange=!topLocked;
}
