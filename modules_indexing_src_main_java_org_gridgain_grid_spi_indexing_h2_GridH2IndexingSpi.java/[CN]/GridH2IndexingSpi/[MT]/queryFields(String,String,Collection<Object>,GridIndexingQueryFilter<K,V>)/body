{
  QueryResult qryRes=executeQueryWithCache(new T2<>(qry,params),new COX<QueryResult>(){
    @Override public QueryResult applyx() throws GridSpiException {
      localSpi.set(GridH2IndexingSpi.this);
      setFilters(filters != null ? filters : EMPTY_FILTER);
      try {
        Connection conn=connectionForThread(schema(spaceName));
        QueryResult qryRes=new QueryResult();
        T2<PreparedStatement,ResultSet> res=executeSqlQueryWithTimer(conn,qry,params);
        if (res != null) {
          ResultSet rs=res.get2();
          List<GridIndexingFieldMetadata> meta;
          try {
            ResultSetMetaData rsMeta=rs.getMetaData();
            meta=new ArrayList<>(rsMeta.getColumnCount());
            for (int i=1; i <= rsMeta.getColumnCount(); i++) {
              String schemaName=rsMeta.getSchemaName(i);
              String typeName=rsMeta.getTableName(i);
              String name=rsMeta.getColumnLabel(i);
              String type=rsMeta.getColumnClassName(i);
              meta.add(new SqlFieldMetadata(schemaName,typeName,name,type));
            }
          }
 catch (          SQLException e) {
            throw new GridSpiException("Failed to get meta data.",e);
          }
          qryRes.meta=meta;
          qryRes.data=fetchResult(res);
        }
        return qryRes;
      }
  finally {
        setFilters(null);
        localSpi.remove();
      }
    }
  }
);
  return new GridIndexingFieldsResultAdapter(qryRes.meta,new FieldsIterator(qryRes.data));
}
