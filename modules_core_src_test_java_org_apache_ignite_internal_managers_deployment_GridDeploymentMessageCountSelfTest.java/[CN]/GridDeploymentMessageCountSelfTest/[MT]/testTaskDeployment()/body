{
  ClassLoader ldr=getExternalClassLoader();
  Class taskCls=ldr.loadClass(TEST_TASK);
  try {
    startGrids(2);
    ComputeTaskFuture<Object> taskFut=executeAsync(grid(0).compute(),taskCls,2);
    Integer res=(Integer)taskFut.get();
    assertEquals(Integer.valueOf(2),res);
    for (    MessageCountingCommunicationSpi spi : commSpis.values()) {
      assertTrue(spi.deploymentMessageCount() > 0);
      spi.resetCount();
    }
    for (int i=0; i < 10; i++) {
      taskFut=executeAsync(grid(0).compute(),taskCls,2);
      res=(Integer)taskFut.get();
      assertEquals(Integer.valueOf(2),res);
    }
    for (    MessageCountingCommunicationSpi spi : commSpis.values())     assertEquals(0,spi.deploymentMessageCount());
  }
  finally {
    stopAllGrids();
  }
}
