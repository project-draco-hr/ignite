{
  assertFalse("Type key class name should be defined",type.keyClassName().isEmpty());
  assertFalse("Type value class name should be defined",type.valueClassName().isEmpty());
  Collection<PojoField> keyFields=type.keyFields();
  assertEquals("Key type should have 1 field",1,keyFields.size());
  checkField(keyFields.iterator().next(),"pk",true,int.class);
  List<PojoField> fields=type.fields();
  assertEquals("Value type should have 15 fields",15,fields.size());
  Iterator<PojoField> fieldsIt=fields.iterator();
  checkField(fieldsIt.next(),"pk",true,int.class);
  if ("Objects".equals(type.valueClassName())) {
    checkField(fieldsIt.next(),"boolcol",false,Boolean.class);
    checkField(fieldsIt.next(),"bytecol",false,Byte.class);
    checkField(fieldsIt.next(),"shortcol",false,Short.class);
    checkField(fieldsIt.next(),"intcol",false,Integer.class);
    checkField(fieldsIt.next(),"longcol",false,Long.class);
    checkField(fieldsIt.next(),"floatcol",false,Float.class);
    checkField(fieldsIt.next(),"doublecol",false,Double.class);
    checkField(fieldsIt.next(),"doublecol2",false,Double.class);
  }
 else {
    checkField(fieldsIt.next(),"boolcol",true,boolean.class);
    checkField(fieldsIt.next(),"bytecol",true,byte.class);
    checkField(fieldsIt.next(),"shortcol",true,short.class);
    checkField(fieldsIt.next(),"intcol",true,int.class);
    checkField(fieldsIt.next(),"longcol",true,long.class);
    checkField(fieldsIt.next(),"floatcol",true,float.class);
    checkField(fieldsIt.next(),"doublecol",true,double.class);
    checkField(fieldsIt.next(),"doublecol2",true,double.class);
  }
  checkField(fieldsIt.next(),"bigdecimalcol",false,BigDecimal.class);
  checkField(fieldsIt.next(),"strcol",false,String.class);
  checkField(fieldsIt.next(),"datecol",false,Date.class);
  checkField(fieldsIt.next(),"timecol",false,Time.class);
  checkField(fieldsIt.next(),"tscol",false,Timestamp.class);
  checkField(fieldsIt.next(),"arrcol",false,Object.class);
}
