{
  log.info("Test tx put [concurrency=" + concurrency + ", isolation="+ isolation+ ']');
  List<Integer> keys=testKeys(cache,3);
  Integer key1=keys.get(0);
  try (IgniteTx tx=startTx(concurrency,isolation)){
    log.info("Do tx get.");
    cache.get(key1);
    log.info("Do tx put.");
    cache.put(key1,key1);
    expData.add(new ExpectedData(true,"write",new HashMap<>(),cache.getName()));
    expData.add(new ExpectedData(true,"txEnd",F.<Object,Object>asMap(0,"write"),cache.getName()));
    log.info("Do tx commit.");
    tx.commit();
  }
   assertEquals(0,expData.size());
  Integer key2=keys.get(1);
  Integer key3=keys.get(2);
  try (IgniteTx tx=startTx(concurrency,isolation)){
    log.info("Do tx put1.");
    cache.put(key2,key2);
    log.info("Do tx put2.");
    cache.put(key3,key3);
    expData.add(new ExpectedData(true,"writeAll",new HashMap<>(),cache.getName()));
    expData.add(new ExpectedData(true,"txEnd",F.<Object,Object>asMap(0,"writeAll"),cache.getName()));
    log.info("Do tx commit.");
    tx.commit();
  }
   assertEquals(0,expData.size());
}
