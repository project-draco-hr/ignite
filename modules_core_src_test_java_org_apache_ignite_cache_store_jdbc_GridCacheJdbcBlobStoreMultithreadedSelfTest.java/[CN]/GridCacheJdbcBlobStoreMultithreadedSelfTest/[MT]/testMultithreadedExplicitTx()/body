{
  runMultiThreaded(new Callable<Object>(){
    private final Random rnd=new Random();
    @Override public Object call() throws Exception {
      for (int i=0; i < TX_CNT; i++) {
        IgniteEx ignite=grid(rnd.nextInt(GRID_CNT));
        IgniteCache<Object,Object> cache=ignite.cache(null);
        try (Transaction tx=ignite.transactions().txStart()){
          cache.put(1,"value");
          cache.put(2,"value");
          cache.put(3,"value");
          cache.get(1);
          cache.get(4);
          Map<Integer,String> map=new TreeMap<>();
          map.put(5,"value");
          map.put(6,"value");
          cache.putAll(map);
          tx.commit();
        }
       }
      return null;
    }
  }
,8,"tx");
  checkOpenedClosedCount();
}
