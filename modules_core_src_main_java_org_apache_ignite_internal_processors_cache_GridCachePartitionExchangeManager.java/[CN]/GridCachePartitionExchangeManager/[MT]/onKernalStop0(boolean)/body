{
  cctx.gridEvents().removeLocalEventListener(discoLsnr);
  cctx.io().removeHandler(0,GridDhtPartitionsSingleMessage.class);
  cctx.io().removeHandler(0,GridDhtPartitionsFullMessage.class);
  cctx.io().removeHandler(0,GridDhtPartitionsSingleRequest.class);
  IgniteCheckedException err=cctx.kernalContext().clientDisconnected() ? new IgniteClientDisconnectedCheckedException(cctx.kernalContext().cluster().clientReconnectFuture(),"Client node disconnected: " + cctx.gridName()) : new IgniteInterruptedCheckedException("Node is stopping: " + cctx.gridName());
  ExchangeFutureSet exchFuts0=exchFuts;
  if (exchFuts0 != null) {
    for (    GridDhtPartitionsExchangeFuture f : exchFuts.values())     f.onDone(err);
  }
  for (  AffinityReadyFuture f : readyFuts.values())   f.onDone(err);
  U.cancel(exchWorker);
  if (log.isDebugEnabled())   log.debug("Before joining on exchange worker: " + exchWorker);
  U.join(exchWorker,log);
  ResendTimeoutObject resendTimeoutObj=pendingResend.getAndSet(null);
  if (resendTimeoutObj != null)   cctx.time().removeTimeoutObject(resendTimeoutObj);
}
