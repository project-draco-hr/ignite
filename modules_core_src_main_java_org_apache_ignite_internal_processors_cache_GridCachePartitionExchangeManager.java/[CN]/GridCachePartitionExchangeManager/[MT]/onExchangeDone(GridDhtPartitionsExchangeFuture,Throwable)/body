{
  AffinityTopologyVersion topVer=exchFut.topologyVersion();
  if (log.isDebugEnabled())   log.debug("Exchange done [topVer=" + topVer + ", fut="+ exchFut+ ", err="+ err+ ']');
  IgniteProductVersion minVer=cctx.localNode().version();
  IgniteProductVersion maxVer=cctx.localNode().version();
  if (err == null) {
    if (!F.isEmpty(exchFut.discoveryEvent().topologyNodes())) {
      for (      ClusterNode node : exchFut.discoveryEvent().topologyNodes()) {
        IgniteProductVersion ver=node.version();
        if (ver.compareTo(minVer) < 0)         minVer=ver;
        if (ver.compareTo(maxVer) > 0)         maxVer=ver;
      }
    }
  }
  nodeVers.put(topVer,new IgnitePair<>(minVer,maxVer));
  AffinityTopologyVersion histVer=new AffinityTopologyVersion(topVer.topologyVersion() - 10,0);
  for (  AffinityTopologyVersion oldVer : nodeVers.headMap(histVer).keySet())   nodeVers.remove(oldVer);
  if (err == null) {
    while (true) {
      AffinityTopologyVersion readyVer=readyTopVer.get();
      if (readyVer.compareTo(topVer) >= 0)       break;
      if (readyTopVer.compareAndSet(readyVer,topVer))       break;
    }
    for (    Map.Entry<AffinityTopologyVersion,AffinityReadyFuture> entry : readyFuts.entrySet()) {
      if (entry.getKey().compareTo(topVer) <= 0) {
        if (log.isDebugEnabled())         log.debug("Completing created topology ready future " + "[ver=" + topVer + ", fut="+ entry.getValue()+ ']');
        entry.getValue().onDone(topVer);
      }
    }
  }
 else {
    for (    Map.Entry<AffinityTopologyVersion,AffinityReadyFuture> entry : readyFuts.entrySet()) {
      if (entry.getKey().compareTo(topVer) <= 0) {
        if (log.isDebugEnabled())         log.debug("Completing created topology ready future with error " + "[ver=" + topVer + ", fut="+ entry.getValue()+ ']');
        entry.getValue().onDone(err);
      }
    }
  }
  ExchangeFutureSet exchFuts0=exchFuts;
  if (exchFuts0 != null) {
    int skipped=0;
    for (    GridDhtPartitionsExchangeFuture fut : exchFuts0.values()) {
      if (exchFut.exchangeId().topologyVersion().compareTo(fut.exchangeId().topologyVersion()) < 0)       continue;
      skipped++;
      if (skipped > 10)       fut.cleanUp();
    }
  }
}
