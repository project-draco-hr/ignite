{
  GridDhtPartitionsFullMessage m=new GridDhtPartitionsFullMessage(null,null,AffinityTopologyVersion.NONE);
  boolean useOldApi=false;
  for (  ClusterNode node : nodes) {
    if (node.version().compareTo(GridDhtPartitionMap2.SINCE) < 0)     useOldApi=true;
  }
  for (  GridCacheContext cacheCtx : cctx.cacheContexts()) {
    if (!cacheCtx.isLocal() && cacheCtx.started()) {
      GridDhtPartitionFullMap locMap=cacheCtx.topology().partitionMap(true);
      if (useOldApi) {
        locMap=new GridDhtPartitionFullMap(locMap.nodeId(),locMap.nodeOrder(),locMap.updateSequence(),locMap);
      }
      m.addFullPartitionsMap(cacheCtx.cacheId(),locMap);
    }
  }
  for (  GridClientPartitionTopology top : cctx.exchange().clientTopologies())   m.addFullPartitionsMap(top.cacheId(),top.partitionMap(true));
  if (log.isDebugEnabled())   log.debug("Sending all partitions [nodeIds=" + U.nodeIds(nodes) + ", msg="+ m+ ']');
  for (  ClusterNode node : nodes) {
    try {
      cctx.io().sendNoRetry(node,m,SYSTEM_POOL);
    }
 catch (    ClusterTopologyCheckedException ignore) {
      if (log.isDebugEnabled())       log.debug("Failed to send partition update to node because it left grid (will ignore) [node=" + node.id() + ", msg="+ m+ ']');
    }
catch (    IgniteCheckedException e) {
      U.warn(log,"Failed to send partitions full message [node=" + node + ", err="+ e+ ']');
    }
  }
  return true;
}
