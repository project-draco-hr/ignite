{
  final CacheConfiguration<Object,Object> ccfg=cacheConfiguration(PARTITIONED,1,ATOMIC,ONHEAP_TIERED,false);
  grid(0).createCache(ccfg);
  try {
    final ContinuousQuery qry=new ContinuousQuery();
    qry.setRemoteFilterFactory(new Factory<CacheEntryEventFilter>(){
      @Override public CacheEntryEventFilter create(){
        return null;
      }
    }
);
    qry.setRemoteFilter(new CacheEntryEventSerializableFilter(){
      @Override public boolean evaluate(      CacheEntryEvent event) throws CacheEntryListenerException {
        return false;
      }
    }
);
    qry.setLocalListener(new CacheEntryUpdatedListener(){
      @Override public void onUpdated(      Iterable iterable) throws CacheEntryListenerException {
      }
    }
);
    GridTestUtils.assertThrows(log,new Callable<Object>(){
      @Override public Object call() throws Exception {
        return grid(0).cache(ccfg.getName()).query(qry);
      }
    }
,IgniteException.class,null);
  }
  finally {
    grid(0).destroyCache(ccfg.getName());
  }
}
