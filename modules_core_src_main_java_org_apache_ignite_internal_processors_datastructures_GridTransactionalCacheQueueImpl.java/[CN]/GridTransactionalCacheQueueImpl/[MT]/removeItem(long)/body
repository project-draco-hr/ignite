{
  try {
    retryTopologySafe(new Callable<Object>(){
      @Override public Object call() throws Exception {
        try (IgniteInternalTx tx=cache.txStartEx(PESSIMISTIC,REPEATABLE_READ)){
          Long idx=(Long)cache.invoke(queueKey,new RemoveProcessor(id,rmvIdx)).get();
          if (idx != null) {
            checkRemoved(idx);
            cache.remove(itemKey(idx));
          }
          tx.commit();
        }
         return null;
      }
    }
).call();
  }
 catch (  RuntimeException e) {
    throw e;
  }
catch (  Exception e) {
    throw new IgniteCheckedException(e);
  }
}
