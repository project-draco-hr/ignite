{
  A.notNull(item,"item");
  try {
    return retryTopologySafe(new Callable<Boolean>(){
      @Override public Boolean call() throws Exception {
        boolean retVal;
        try (IgniteInternalTx tx=cache.txStartEx(PESSIMISTIC,REPEATABLE_READ)){
          Long idx=(Long)cache.invoke(queueKey,new AddProcessor(id,1)).get();
          if (idx != null) {
            checkRemoved(idx);
            cache.getAndPut(itemKey(idx),item);
            retVal=true;
          }
 else           retVal=false;
          tx.commit();
          return retVal;
        }
       }
    }
).call();
  }
 catch (  IgniteCheckedException e) {
    throw U.convertException(e);
  }
catch (  RuntimeException e) {
    throw e;
  }
catch (  Exception e) {
    throw new IgniteException(e.getMessage(),e);
  }
}
