{
  A.notNull(items,"items");
  try {
    return retryTopologySafe(new Callable<Boolean>(){
      @Override public Boolean call() throws Exception {
        boolean retVal;
        try (IgniteInternalTx tx=cache.txStartEx(PESSIMISTIC,REPEATABLE_READ)){
          Long idx=(Long)cache.invoke(queueKey,new AddProcessor(id,items.size())).get();
          if (idx != null) {
            checkRemoved(idx);
            Map<QueueItemKey,T> putMap=new HashMap<>();
            for (            T item : items) {
              putMap.put(itemKey(idx),item);
              idx++;
            }
            cache.putAll(putMap);
            retVal=true;
          }
 else           retVal=false;
          tx.commit();
          return retVal;
        }
       }
    }
).call();
  }
 catch (  IgniteCheckedException e) {
    throw U.convertException(e);
  }
catch (  RuntimeException e) {
    throw e;
  }
catch (  Exception e) {
    throw new IgniteException(e.getMessage(),e);
  }
}
