{
  final List<Event> evtList=new ArrayList<>();
  final int evtsCnt=2 + 0 + 1;
  final CountDownLatch latch=new CountDownLatch(evtsCnt);
  grid(1).events().localListen(lsnr=new IgnitePredicate<Event>(){
    @Override public boolean apply(    Event evt){
      log.info("Received event [evt=" + evt + ']');
      evtList.add(evt);
      latch.countDown();
      return true;
    }
  }
,EVTS_GGFS);
  IgfsPath dir=new IgfsPath("/dir1/dir2");
  ggfs.mkdirs(dir);
  try {
    ggfs.delete(dir.parent(),false);
  }
 catch (  IgniteException ignore) {
  }
  assertTrue(ggfs.delete(dir,false));
  assertTrue(latch.await(10,TimeUnit.SECONDS));
  assertEquals(evtsCnt,evtList.size());
  IgfsEvent evt=(IgfsEvent)evtList.get(0);
  assertEquals(EVT_GGFS_DIR_CREATED,evt.type());
  assertEquals(new IgfsPath("/dir1"),evt.path());
  evt=(IgfsEvent)evtList.get(1);
  assertEquals(EVT_GGFS_DIR_CREATED,evt.type());
  assertEquals(new IgfsPath("/dir1/dir2"),evt.path());
  IgfsEvent evt3=(IgfsEvent)evtList.get(2);
  assertEquals(EVT_GGFS_DIR_DELETED,evt3.type());
  assertEquals(new IgfsPath("/dir1/dir2"),evt3.path());
}
