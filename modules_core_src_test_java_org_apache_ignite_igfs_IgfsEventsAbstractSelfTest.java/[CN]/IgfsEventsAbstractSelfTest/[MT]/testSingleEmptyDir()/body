{
  final List<Event> evtList=new ArrayList<>();
  final int evtsCnt=1 + 1 + 0+ 1;
  final CountDownLatch latch=new CountDownLatch(evtsCnt);
  grid(1).events().localListen(lsnr=new IgnitePredicate<Event>(){
    @Override public boolean apply(    Event evt){
      log.info("Received event [evt=" + evt + ']');
      evtList.add(evt);
      latch.countDown();
      return true;
    }
  }
,EVTS_IGFS);
  IgfsPath dir=new IgfsPath("/dir1");
  igfs.mkdirs(dir);
  IgfsPath mvDir=new IgfsPath("/mvDir1");
  igfs.rename(dir,mvDir);
  assertFalse(igfs.delete(dir,true));
  assertTrue(igfs.delete(mvDir,true));
  assertTrue(latch.await(10,TimeUnit.SECONDS));
  assertEquals(evtsCnt,evtList.size());
  IgfsEvent evt=(IgfsEvent)evtList.get(0);
  assertEquals(EVT_IGFS_DIR_CREATED,evt.type());
  assertEquals(new IgfsPath("/dir1"),evt.path());
  assertTrue(evt.isDirectory());
  evt=(IgfsEvent)evtList.get(1);
  assertEquals(EVT_IGFS_DIR_RENAMED,evt.type());
  assertEquals(new IgfsPath("/dir1"),evt.path());
  assertEquals(new IgfsPath("/mvDir1"),evt.newPath());
  assertTrue(evt.isDirectory());
  evt=(IgfsEvent)evtList.get(2);
  assertEquals(EVT_IGFS_DIR_DELETED,evt.type());
  assertEquals(new IgfsPath("/mvDir1"),evt.path());
  assertTrue(evt.isDirectory());
}
