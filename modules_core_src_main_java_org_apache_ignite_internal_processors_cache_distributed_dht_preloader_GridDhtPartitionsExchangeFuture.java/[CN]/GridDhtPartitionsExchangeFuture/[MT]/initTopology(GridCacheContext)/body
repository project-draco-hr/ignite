{
  if (stopping(cacheCtx.cacheId()))   return;
  if (canCalculateAffinity(cacheCtx)) {
    if (log.isDebugEnabled())     log.debug("Will recalculate affinity [locNodeId=" + cctx.localNodeId() + ", exchId="+ exchId+ ']');
    cacheCtx.affinity().calculateAffinity(exchId.topologyVersion(),discoEvt);
  }
 else {
    if (log.isDebugEnabled())     log.debug("Will request affinity from remote node [locNodeId=" + cctx.localNodeId() + ", exchId="+ exchId+ ']');
    GridDhtAssignmentFetchFuture fetchFut=new GridDhtAssignmentFetchFuture(cacheCtx,exchId.topologyVersion(),CU.affinityNodes(cacheCtx,exchId.topologyVersion()));
    fetchFut.init();
    List<List<ClusterNode>> affAssignment=fetchFut.get();
    if (log.isDebugEnabled())     log.debug("Fetched affinity from remote node, initializing affinity assignment [locNodeId=" + cctx.localNodeId() + ", topVer="+ exchId.topologyVersion()+ ']');
    if (affAssignment == null) {
      affAssignment=new ArrayList<>(cacheCtx.affinity().partitions());
      List<ClusterNode> empty=Collections.emptyList();
      for (int i=0; i < cacheCtx.affinity().partitions(); i++)       affAssignment.add(empty);
    }
    cacheCtx.affinity().initializeAffinity(exchId.topologyVersion(),affAssignment);
  }
}
