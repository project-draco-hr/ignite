{
  Map<Integer,Boolean> m=null;
  for (  GridCacheContext cacheCtx : cctx.cacheContexts()) {
    if (cacheCtx.config().getTopologyValidator() != null && !CU.isSystemCache(cacheCtx.name())) {
      if (m == null)       m=new HashMap<>();
      m.put(cacheCtx.cacheId(),cacheCtx.config().getTopologyValidator().validate(discoEvt.topologyNodes()));
    }
  }
  cacheValidRes=m != null ? m : Collections.<Integer,Boolean>emptyMap();
  cctx.cache().onExchangeDone(exchId.topologyVersion(),reqs,err);
  cctx.exchange().onExchangeDone(this,err);
  if (super.onDone(res,err) && !dummy && !forcePreload) {
    if (log.isDebugEnabled())     log.debug("Completed partition exchange [localNode=" + cctx.localNodeId() + ", exchange= "+ this+ "duration="+ duration()+ ", durationFromInit="+ (U.currentTimeMillis() - initTs)+ ']');
    initFut.onDone(err == null);
    GridTimeoutObject timeoutObj=this.timeoutObj;
    if (timeoutObj != null)     cctx.kernalContext().timeout().removeTimeoutObject(timeoutObj);
    if (exchId.isLeft()) {
      for (      GridCacheContext cacheCtx : cctx.cacheContexts())       cacheCtx.config().getAffinity().removeNode(exchId.nodeId());
    }
    return true;
  }
  return dummy;
}
