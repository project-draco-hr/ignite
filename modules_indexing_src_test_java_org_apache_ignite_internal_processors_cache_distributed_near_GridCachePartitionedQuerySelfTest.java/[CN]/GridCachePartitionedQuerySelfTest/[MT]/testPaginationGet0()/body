{
  int key=0;
  for (int i=0; i < gridCount(); i++) {
    int cnt=0;
    while (true) {
      if (grid(i).cache(null).affinity().mapKeyToNode(key).equals(grid(i).localNode())) {
        assertTrue(grid(i).cache(null).putx(key,key));
        cnt++;
      }
      key++;
      if (cnt == (i == 1 ? 2 : 3))       break;
    }
  }
  for (int i=0; i < gridCount(); i++)   assertEquals(i == 1 ? 2 : 3,grid(i).cache(null).primarySize());
  GridCache<Integer,Integer> cache=ignite.cache(null);
  CacheQuery<Map.Entry<Integer,Integer>> q=cache.queries().createSqlQuery(Integer.class,"_key >= 0");
  q.pageSize(2);
  q.includeBackups(false);
  q.enableDedup(true);
  Collection<Map.Entry<Integer,Integer>> res=q.execute().get();
  assertEquals(gridCount() * 3 - 1,res.size());
}
