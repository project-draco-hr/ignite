{
synchronized (getClassLoadingLock(name)) {
    Class c=findLoadedClass(name);
    if (c != null)     return c;
    byte[] bytes=bytesCache.get(name);
    if (bytes == null) {
      InputStream in=loadClassBytes(getParent(),replace);
      ClassReader rdr;
      try {
        rdr=new ClassReader(in);
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
      ClassWriter w=new ClassWriter(Opcodes.ASM4);
      rdr.accept(new RemappingClassAdapter(w,new Remapper(){
        /** 
 */
        String replaceType=replace.replace('.','/');
        /** 
 */
        String nameType=name.replace('.','/');
        @Override public String map(        String type){
          if (type.equals(replaceType))           return nameType;
          return type;
        }
      }
),ClassReader.EXPAND_FRAMES);
      bytes=w.toByteArray();
      bytesCache.put(name,bytes);
    }
    return defineClass(name,bytes,0,bytes.length);
  }
}
