{
  try {
    outBase=U.resolveWorkDirectory("hadoop",false);
    String mrDir=job.property("mapreduce.job.dir");
    if (mrDir != null) {
      long start=System.currentTimeMillis();
      Path path=new Path(new URI(mrDir));
      JobConf cfg=((GridHadoopDefaultJobInfo)job.info()).configuration();
      FileSystem fs=FileSystem.get(path.toUri(),cfg);
      if (!fs.exists(path))       throw new GridException("Failed to find map-reduce submission directory (does not exist): " + path);
      File dir=jobJarsFolder(job.id(),locNodeId);
      FileUtil.fullyDeleteContents(dir);
      if (log.isDebugEnabled())       log.debug("Copying job submission directory to local file system " + "[path=" + path + ", locDir="+ dir.getAbsolutePath()+ ", jobId="+ job.id()+ ']');
      if (!FileUtil.copy(fs,path,dir,false,cfg))       throw new GridException("Failed to copy job submission directory contents to local file system " + "[path=" + path + ", locDir="+ dir.getAbsolutePath()+ ", jobId="+ job.id()+ ']');
      long end=System.currentTimeMillis();
      if (log.isDebugEnabled())       log.debug("Job files deployed to local file system in: " + (end - start));
    }
  }
 catch (  URISyntaxException|IOException e) {
    throw new GridException(e);
  }
}
