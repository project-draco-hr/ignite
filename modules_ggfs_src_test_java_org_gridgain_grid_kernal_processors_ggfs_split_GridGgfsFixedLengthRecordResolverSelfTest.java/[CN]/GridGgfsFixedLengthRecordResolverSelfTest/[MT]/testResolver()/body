{
  byte[] data=array(F.t(wrap(1),24));
  assertSplit(0,4,0,8,data,8);
  assertSplit(0,8,0,8,data,8);
  assertSplit(0,12,0,16,data,8);
  assertSplit(0,16,0,16,data,8);
  assertSplit(0,20,0,24,data,8);
  assertSplit(0,24,0,24,data,8);
  assertSplit(0,28,0,24,data,8);
  assertSplit(0,32,0,24,data,8);
  assertSplitNull(2,2,data,8);
  assertSplitNull(2,6,data,8);
  assertSplit(2,10,8,8,data,8);
  assertSplit(2,14,8,8,data,8);
  assertSplit(2,18,8,16,data,8);
  assertSplit(2,22,8,16,data,8);
  assertSplit(2,26,8,16,data,8);
  assertSplit(2,30,8,16,data,8);
  assertSplit(8,4,8,8,data,8);
  assertSplit(8,8,8,8,data,8);
  assertSplit(8,12,8,16,data,8);
  assertSplit(8,16,8,16,data,8);
  assertSplit(8,20,8,16,data,8);
  assertSplit(8,24,8,16,data,8);
  assertSplitNull(10,2,data,8);
  assertSplitNull(10,6,data,8);
  assertSplit(10,10,16,8,data,8);
  assertSplit(10,14,16,8,data,8);
  assertSplit(10,18,16,8,data,8);
  assertSplit(10,22,16,8,data,8);
  assertSplit(16,4,16,8,data,8);
  assertSplit(16,8,16,8,data,8);
  assertSplit(16,12,16,8,data,8);
  assertSplit(16,16,16,8,data,8);
  assertSplitNull(18,2,data,8);
  assertSplitNull(18,6,data,8);
  assertSplitNull(18,10,data,8);
  assertSplitNull(18,14,data,8);
  assertSplitNull(24,4,data,8);
  assertSplitNull(24,8,data,8);
  assertSplitNull(26,2,data,8);
  assertSplitNull(26,6,data,8);
}
