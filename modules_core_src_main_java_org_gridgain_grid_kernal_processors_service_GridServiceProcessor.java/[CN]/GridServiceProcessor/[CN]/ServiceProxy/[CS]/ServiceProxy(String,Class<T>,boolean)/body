{
  proxy=(T)Proxy.newProxyInstance(svc.getClassLoader(),new Class[]{svc},new InvocationHandler(){
    @Override public Object invoke(    Object proxy,    final Method mtd,    final Object[] args) throws Throwable {
      while (true) {
        GridNode node=null;
        try {
          node=nodeForService(name,sticky);
          if (node == null)           throw new GridException("Failed to find deployed service: " + name);
          if (node.isLocal()) {
            Object svc=service(name);
            if (svc != null)             return mtd.invoke(svc,args);
          }
 else           return ctx.closure().callAsyncNoFailover(BALANCE,new ServiceProxyCallable(mtd.getName(),name,args),Collections.singleton(node),false).get();
        }
 catch (        GridServiceNotFoundException|GridTopologyException e) {
          if (log.isDebugEnabled())           log.debug("Service was not found or topology changed (will retry): " + e.getMessage());
        }
        rmtNode.compareAndSet(node,null);
        Thread.sleep(10);
      }
    }
  }
);
}
