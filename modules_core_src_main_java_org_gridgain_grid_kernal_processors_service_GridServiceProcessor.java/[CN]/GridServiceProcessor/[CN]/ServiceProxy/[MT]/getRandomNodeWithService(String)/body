{
  Map<UUID,Integer> snapshot=getServiceTopologySnapshot(name);
  if (snapshot == null || snapshot.isEmpty())   return null;
  final List<UUID> nodesList=new ArrayList<>();
  F.forEach(snapshot.entrySet(),new CI1<Entry<UUID,Integer>>(){
    @Override public void apply(    Entry<UUID,Integer> entry){
      nodesList.add(entry.getKey());
    }
  }
,new P1<Entry<UUID,Integer>>(){
    @Override public boolean apply(    Entry<UUID,Integer> entry){
      Integer val=entry.getValue();
      return val != null && val > 0;
    }
  }
);
  if (nodesList.isEmpty())   return null;
  int randomIndex=(int)(nodesList.size() * Math.random());
  return ctx.discovery().node(nodesList.get(randomIndex));
}
