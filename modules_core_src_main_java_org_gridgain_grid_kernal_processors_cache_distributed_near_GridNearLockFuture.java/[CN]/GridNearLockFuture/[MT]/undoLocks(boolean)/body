{
  if (dist && tx == null)   cctx.near().removeLocks(lockVer,keys);
 else {
    if (tx != null) {
      if (tx.setRollbackOnly()) {
        if (log.isDebugEnabled())         log.debug("Marked transaction as rollback only because locks could not be acquired: " + tx);
      }
 else       if (log.isDebugEnabled())       log.debug("Transaction was not marked rollback-only while locks were not acquired: " + tx);
    }
    for (    GridCacheEntryEx<K,V> e : entriesCopy()) {
      try {
        e.removeLock(lockVer);
      }
 catch (      GridCacheEntryRemovedException ignored) {
        while (true) {
          try {
            e=cctx.cache().peekEx(e.key());
            if (e != null)             e.removeLock(lockVer);
            break;
          }
 catch (          GridCacheEntryRemovedException ignore) {
            if (log.isDebugEnabled())             log.debug("Attempted to remove lock on removed entry (will retry) [ver=" + lockVer + ", entry="+ e+ ']');
          }
        }
      }
    }
  }
  cctx.mvcc().recheckPendingLocks();
}
