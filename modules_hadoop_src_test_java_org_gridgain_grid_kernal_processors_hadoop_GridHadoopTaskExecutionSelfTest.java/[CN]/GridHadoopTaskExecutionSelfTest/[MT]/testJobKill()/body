{
  Configuration cfg=prepareJobForCancelling();
  GridHadoopProcessorAdapter hadoop=((GridKernal)grid(0)).context().hadoop();
  GridHadoopJobId jobId=new GridHadoopJobId(UUID.randomUUID(),1);
  final GridFuture<?> fut=hadoop.submit(jobId,new GridHadoopDefaultJobInfo(cfg));
  int time=0;
  while (executedTasks.get() != 32) {
    Thread.sleep(100);
    assertTrue(time++ < 100);
  }
  boolean killRes=hadoop.kill(jobId);
  assertTrue(killRes);
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      fut.get();
      return null;
    }
  }
,GridException.class,null);
  assertEquals(executedTasks.get(),cancelledTasks.get());
}
