{
  int strLen=val.length();
  int utfLen=0;
  int c, cnt;
  for (cnt=0; cnt < strLen; cnt++) {
    c=val.charAt(cnt);
    if (c >= 0x0001 && c <= 0x007F)     utfLen++;
 else     if (c > 0x07FF)     utfLen+=3;
 else     utfLen+=2;
  }
  byte[] arr=new byte[utfLen];
  int position=0;
  for (cnt=0; cnt < strLen; cnt++) {
    c=val.charAt(cnt);
    if (c >= 0x0001 && c <= 0x007F)     arr[position++]=(byte)c;
 else     if (c > 0x07FF) {
      arr[position++]=(byte)(0xE0 | (c >> 12) & 0x0F);
      arr[position++]=(byte)(0x80 | (c >> 6) & 0x3F);
      arr[position++]=(byte)(0x80 | (c & 0x3F));
    }
 else {
      arr[position++]=(byte)(0xC0 | ((c >> 6) & 0x1F));
      arr[position++]=(byte)(0x80 | (c & 0x3F));
    }
  }
  return arr;
}
