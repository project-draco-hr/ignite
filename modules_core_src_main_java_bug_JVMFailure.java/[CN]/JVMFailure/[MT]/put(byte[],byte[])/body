{
  long ptr=UNSAFE.allocateMemory(HEADER_SIZE + keyBytes.length + valBytes.length);
  UNSAFE.putInt(ptr + KEY_SIZE_OFF,keyBytes.length);
  UNSAFE.putInt(ptr + VAL_SIZE_OFF,valBytes.length);
  UNSAFE.copyMemory(keyBytes,BYTE_ARR_OFF,null,ptr + HEADER_SIZE,keyBytes.length);
  UNSAFE.copyMemory(valBytes,BYTE_ARR_OFF,null,ptr + HEADER_SIZE + keyBytes.length,valBytes.length);
  ptrs.addLast(ptr);
  if (ptrs.size() > 100) {
    long oldPtr=ptrs.pollFirst();
    byte[] valBytes0=faultyMethod(oldPtr);
    if (valBytes0[0] != 0)     System.out.println(oldPtr + " " + Arrays.toString(valBytes0));
    int keySize=UNSAFE.getInt(oldPtr + KEY_SIZE_OFF);
    int valSize=UNSAFE.getInt(oldPtr + VAL_SIZE_OFF);
    UNSAFE.setMemory(oldPtr,HEADER_SIZE + keySize + valSize,(byte)0xAB);
    UNSAFE.freeMemory(oldPtr);
  }
}
