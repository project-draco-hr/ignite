{
  if (log.isDebugEnabled())   log.debug("Updating single partition map [exchId=" + exchId + ", parts="+ mapString(parts)+ ']');
  if (!cctx.discovery().alive(parts.nodeId())) {
    if (log.isDebugEnabled())     log.debug("Received partition update for non-existing node (will ignore) [exchId=" + exchId + ", parts="+ parts+ ']');
    return null;
  }
  lock.writeLock().lock();
  try {
    if (stopping)     return null;
    if (lastExchangeId != null && exchId != null && lastExchangeId.compareTo(exchId) > 0) {
      if (log.isDebugEnabled())       log.debug("Stale exchange id for single partition map update (will ignore) [lastExchId=" + lastExchangeId + ", exchId="+ exchId+ ']');
      return null;
    }
    if (exchId != null)     lastExchangeId=exchId;
    if (node2part == null) {
      U.dumpStack(log,"Created invalid: " + node2part);
      node2part=new GridDhtPartitionFullMap();
    }
    GridDhtPartitionMap2 cur=node2part.get(parts.nodeId());
    if (cur != null && cur.updateSequence() >= parts.updateSequence()) {
      if (log.isDebugEnabled())       log.debug("Stale update sequence for single partition map update (will ignore) [exchId=" + exchId + ", curSeq="+ cur.updateSequence()+ ", newSeq="+ parts.updateSequence()+ ']');
      return null;
    }
    long updateSeq=this.updateSeq.incrementAndGet();
    node2part=new GridDhtPartitionFullMap(node2part,updateSeq);
    boolean changed=false;
    if (cur == null || !cur.equals(parts))     changed=true;
    node2part.put(parts.nodeId(),parts);
    part2node=new HashMap<>(part2node);
    for (    Integer p : parts.keySet()) {
      Set<UUID> ids=part2node.get(p);
      if (ids == null)       part2node.put(p,ids=U.newHashSet(3));
      changed|=ids.add(parts.nodeId());
    }
    if (cur != null) {
      for (      Integer p : F.view(cur.keySet(),F0.notIn(parts.keySet()))) {
        Set<UUID> ids=part2node.get(p);
        if (ids != null)         changed|=ids.remove(parts.nodeId());
      }
    }
    if (cntrMap != null) {
      for (      Map.Entry<Integer,Long> e : cntrMap.entrySet()) {
        Long cntr=this.cntrMap.get(e.getKey());
        if (cntr == null || cntr < e.getValue())         this.cntrMap.put(e.getKey(),e.getValue());
      }
    }
    consistencyCheck();
    if (log.isDebugEnabled())     log.debug("Partition map after single update: " + fullMapString());
    return changed ? localPartitionMap() : null;
  }
  finally {
    lock.writeLock().unlock();
  }
}
