{
  try (IgniteCache<Integer,String> cache=grid(0).createCache(ccfg)){
    int ITERATION_CNT=100;
    final AtomicBoolean noOneListen=new AtomicBoolean(true);
    for (int i=0; i < ITERATION_CNT; i++) {
      ContinuousQuery<Integer,String> qry=new ContinuousQuery<>();
      qry.setLocalListener(new CacheEntryUpdatedListener<Integer,String>(){
        @Override public void onUpdated(        Iterable<CacheEntryEvent<? extends Integer,? extends String>> iterable) throws CacheEntryListenerException {
          noOneListen.set(false);
        }
      }
);
      qry.setRemoteFilterFactory(FactoryBuilder.factoryOf(new CacheEntryEventSerializableFilter<Integer,String>(){
        @Override public boolean evaluate(        CacheEntryEvent<? extends Integer,? extends String> cacheEntryEvent) throws CacheEntryListenerException {
          return false;
        }
      }
));
      executeQuery(cache,qry,ccfg.getAtomicityMode() == TRANSACTIONAL);
    }
    assertTrue(noOneListen.get());
  }
  finally {
    ignite(0).destroyCache(ccfg.getName());
  }
}
