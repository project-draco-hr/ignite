{
  Collection<GridCacheTxEntry<K,V>> entries=(tx.local() && !tx.dht()) ? tx.allEntries() : tx.writeEntries();
  for (  GridCacheTxEntry<K,V> entry : entries) {
    GridCacheEntryEx<K,V> cached=entry.cached();
    GridCacheContext<K,V> cacheCtx=entry.context();
    if (cached == null)     cached=cacheCtx.cache().peekEx(entry.key());
    if (cached.detached())     continue;
    try {
      if (cached.obsolete() || cached.markObsoleteIfEmpty(tx.xidVersion()))       cacheCtx.cache().removeEntry(cached);
      if (!tx.near() && isNearEnabled(cacheCtx)) {
        GridNearCacheAdapter<K,V> near=cacheCtx.isNear() ? cacheCtx.near() : cacheCtx.dht().near();
        GridNearCacheEntry<K,V> e=near.peekExx(entry.key());
        if (e != null && e.markObsoleteIfEmpty(tx.xidVersion()))         near.removeEntry(e);
      }
    }
 catch (    IgniteCheckedException e) {
      U.error(log,"Failed to remove obsolete entry from cache: " + cached,e);
    }
  }
}
