{
  out.writeBoolean(depEnabled);
  if (depEnabled) {
    IgniteByteUtils.writeByteArray(out,keyBytes);
    IgniteByteUtils.writeByteArray(out,transformClosBytes);
    IgniteByteUtils.writeByteArray(out,filterBytes);
  }
 else {
    out.writeObject(key);
    U.writeCollection(out,entryProcessorsCol);
    U.writeArray(out,filters);
  }
  out.writeInt(cacheId);
  val.writeTo(out);
  out.writeLong(ttl);
  CU.writeVersion(out,explicitVer);
  out.writeBoolean(grpLock);
  if (conflictExpireTime != CU.EXPIRE_TIME_CALCULATE) {
    out.writeBoolean(true);
    out.writeLong(conflictExpireTime);
  }
 else   out.writeBoolean(false);
  CU.writeVersion(out,conflictVer);
  out.writeObject(transferExpiryPlc ? new IgniteExternalizableExpiryPolicy(expiryPlc) : null);
}
