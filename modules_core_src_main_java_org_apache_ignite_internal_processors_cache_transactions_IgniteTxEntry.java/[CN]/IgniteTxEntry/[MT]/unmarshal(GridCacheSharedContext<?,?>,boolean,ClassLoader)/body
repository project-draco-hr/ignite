{
  if (this.ctx == null) {
    GridCacheContext<?,?> cacheCtx=ctx.cacheContext(cacheId);
    if (cacheCtx.isNear() && !near)     cacheCtx=cacheCtx.near().dht().context();
 else     if (!cacheCtx.isNear() && near)     cacheCtx=cacheCtx.dht().near().context();
    this.ctx=cacheCtx;
  }
  if (transformClosBytes != null && entryProcessorsCol == null)   entryProcessorsCol=ctx.marshaller().unmarshal(transformClosBytes,clsLdr);
  if (filters == null && filterBytes != null) {
    filters=ctx.marshaller().unmarshal(filterBytes,clsLdr);
    if (filters == null)     filters=CU.empty0();
 else {
      for (      CacheEntryPredicate p : filters) {
        if (p != null)         p.finishUnmarshal(ctx.cacheContext(cacheId),clsLdr);
      }
    }
  }
  key.finishUnmarshal(context(),clsLdr);
  val.unmarshal(this.ctx,clsLdr);
  if (expiryPlcBytes != null)   expiryPlc=ctx.marshaller().unmarshal(expiryPlcBytes,clsLdr);
}
