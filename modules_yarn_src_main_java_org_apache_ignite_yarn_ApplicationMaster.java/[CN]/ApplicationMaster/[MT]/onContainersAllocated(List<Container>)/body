{
  for (  Container c : conts) {
    if (checkContainer(c)) {
      try {
        ContainerLaunchContext ctx=Records.newRecord(ContainerLaunchContext.class);
        if (UserGroupInformation.isSecurityEnabled())         ctx.setTokens(allTokens.duplicate());
        Map<String,String> env=new HashMap<>(System.getenv());
        env.put("IGNITE_TCP_DISCOVERY_ADDRESSES",getAddress(c.getNodeId().getHost()));
        if (props.jvmOpts() != null && !props.jvmOpts().isEmpty())         env.put("JVM_OPTS",props.jvmOpts());
        ctx.setEnvironment(env);
        Map<String,LocalResource> resources=new HashMap<>();
        resources.put("ignite",IgniteYarnUtils.setupFile(ignitePath,fs,LocalResourceType.ARCHIVE));
        resources.put("ignite-config.xml",IgniteYarnUtils.setupFile(cfgPath,fs,LocalResourceType.FILE));
        if (props.licencePath() != null)         resources.put("gridgain-license.xml",IgniteYarnUtils.setupFile(new Path(props.licencePath()),fs,LocalResourceType.FILE));
        if (props.userLibs() != null)         resources.put("libs",IgniteYarnUtils.setupFile(new Path(props.userLibs()),fs,LocalResourceType.FILE));
        ctx.setLocalResources(resources);
        ctx.setCommands(Collections.singletonList((props.licencePath() != null ? "cp gridgain-license.xml ./ignite/*/ || true && " : "") + "cp -r ./libs/* ./ignite/*/libs/ || true && " + "./ignite/*/bin/ignite.sh "+ "./ignite-config.xml"+ " -J-Xmx"+ ((int)props.memoryPerNode())+ "m"+ " -J-Xms"+ ((int)props.memoryPerNode())+ "m"+ IgniteYarnUtils.YARN_LOG_OUT));
        log.log(Level.INFO,"Launching container: {0}.",c.getId());
        nmClient.startContainer(c,ctx);
        containers.put(c.getId(),new IgniteContainer(c.getId(),c.getNodeId(),c.getResource().getVirtualCores(),c.getResource().getMemory()));
      }
 catch (      Exception ex) {
        log.log(Level.WARNING,"Error launching container " + c.getId(),ex);
      }
    }
 else     rmClient.releaseAssignedContainer(c.getId());
  }
}
