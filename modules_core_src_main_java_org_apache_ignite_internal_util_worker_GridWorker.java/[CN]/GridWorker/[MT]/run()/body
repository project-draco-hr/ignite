{
  runner=Thread.currentThread();
  if (log.isDebugEnabled())   log.debug("Grid runnable started: " + name);
  try {
    if (isCancelled)     runner.interrupt();
    if (lsnr != null)     lsnr.onStarted(this);
    body();
  }
 catch (  IgniteInterruptedCheckedException e) {
    if (log.isDebugEnabled())     log.debug("Caught interrupted exception: " + e);
  }
catch (  InterruptedException e) {
    if (log.isDebugEnabled())     log.debug("Caught interrupted exception: " + e);
    Thread.currentThread().interrupt();
  }
catch (  Throwable e) {
    if (!X.hasCause(e,InterruptedException.class) && !X.hasCause(e,IgniteInterruptedCheckedException.class) && !X.hasCause(e,IgniteInterruptedException.class))     U.error(log,"Runtime error caught during grid runnable execution: " + this,e);
 else     U.warn(log,"Runtime exception occurred during grid runnable execution caused by thread interruption: " + e.getMessage());
    if (e instanceof Error)     throw e;
  }
 finally {
synchronized (mux) {
      finished=true;
      mux.notifyAll();
    }
    cleanup();
    if (lsnr != null)     lsnr.onStopped(this);
    if (log.isDebugEnabled())     if (isCancelled)     log.debug("Grid runnable finished due to cancellation: " + name);
 else     if (runner.isInterrupted())     log.debug("Grid runnable finished due to interruption without cancellation: " + name);
 else     log.debug("Grid runnable finished normally: " + name);
    runner=null;
  }
}
