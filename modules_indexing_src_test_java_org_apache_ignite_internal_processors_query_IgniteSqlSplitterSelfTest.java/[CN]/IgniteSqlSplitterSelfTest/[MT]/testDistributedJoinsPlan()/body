{
  List<IgniteCache<Object,Object>> caches=new ArrayList<>();
  IgniteCache<Object,Object> persPart=ignite(0).createCache(cacheConfig("persPart",true,Integer.class,Person2.class));
  caches.add(persPart);
  IgniteCache<Object,Object> persPartAff=ignite(0).createCache(cacheConfig("persPartAff",true,TestKey.class,Person2.class));
  caches.add(persPartAff);
  IgniteCache<Object,Object> orgPart=ignite(0).createCache(cacheConfig("orgPart",true,Integer.class,Organization.class));
  caches.add(orgPart);
  IgniteCache<Object,Object> orgPartAff=ignite(0).createCache(cacheConfig("orgPartAff",true,TestKey.class,Organization.class));
  caches.add(orgPartAff);
  IgniteCache<Object,Object> orgRepl=ignite(0).createCache(cacheConfig("orgRepl",false,Integer.class,Organization.class));
  caches.add(orgRepl);
  IgniteCache<Object,Object> orgRepl2=ignite(0).createCache(cacheConfig("orgRepl2",false,Integer.class,Organization.class));
  caches.add(orgRepl2);
  try {
    checkQueryPlan(persPart,true,1,"select p._key k1, o._key k2 " + "from \"persPart\".Person2 p, \"orgPart\".Organization o " + "where p.orgId = o._key","batched:unicast");
    checkQueryPlan(persPart,false,1,"select p._key k1, o._key k2 " + "from \"persPart\".Person2 p, \"orgPartAff\".Organization o " + "where p.orgId = o.affKey","batched:unicast");
    checkQueryPlan(persPart,false,1,"select p._key k1, o._key k2 " + "from \"persPart\".Person2 p, \"orgPart\".Organization o " + "where p.orgId = o._key","batched:unicast");
    checkQueryPlan(persPart,false,1,"select p._key k1, o._key k2 " + "from \"persPart\".Person2 p inner join \"orgPart\".Organization o " + "on p.orgId = o._key","batched:unicast");
    checkQueryPlan(persPart,false,1,"select p._key k1, o._key k2 " + "from \"persPart\".Person2 p left outer join \"orgPart\".Organization o " + "on p.orgId = o._key","batched:unicast");
    checkQueryPlan(persPart,true,1,"select p._key k1, o._key k2 " + "from \"orgPart\".Organization o, \"persPart\".Person2 p " + "where p.orgId = o._key","batched:broadcast");
    checkQueryPlan(persPart,true,1,"select p._key k1, o._key k2 " + "from \"orgPartAff\".Organization o, \"persPart\".Person2 p " + "where p.orgId = o.affKey","batched:broadcast");
    checkQueryPlan(persPart,true,0,"select p._key k1, o._key k2 " + "from \"persPart\".Person2 p, \"orgRepl\".Organization o " + "where p.orgId = o._key");
    checkQueryPlan(persPart,false,0,"select p._key k1, o._key k2 " + "from \"persPart\".Person2 p, \"orgRepl\".Organization o " + "where p.orgId = o._key");
    checkQueryPlan(persPart,false,0,"select p._key k1, o._key k2 " + "from \"persPart\".Person2 p, (select * from \"orgRepl\".Organization) o " + "where p.orgId = o._key");
    checkQueryPlan(persPart,false,0,"select p._key k1, o._key k2 " + "from (select * from \"orgRepl\".Organization) o, \"persPart\".Person2 p " + "where p.orgId = o._key");
    checkQueryPlan(persPart,false,0,"select p._key k1, o._key k2 " + "from \"persPart\".Person2 p inner join \"orgRepl\".Organization o " + "on p.orgId = o._key");
    checkQueryPlan(persPart,false,0,"select p._key k1, o._key k2 " + "from \"persPart\".Person2 p left outer join \"orgRepl\".Organization o " + "on p.orgId = o._key");
    checkQueryPlan(persPart,false,0,"select p._key k1, o._key k2 " + "from \"orgRepl\".Organization o, \"persPart\".Person2 p " + "where p.orgId = o._key");
    checkQueryPlan(persPart,false,0,"select p._key k1, o._key k2 " + "from \"orgRepl\".Organization o inner join \"persPart\".Person2 p " + "on p.orgId = o._key");
    checkNoBatchedJoin(persPart,"select p._key k1, o._key k2 ","\"persPart\".Person2 p","\"orgPart\".Organization o","where p._key = o._key",true);
    checkNoBatchedJoin(persPart,"select p._key k1, o._key k2 ","\"persPart\".Person2 p","\"orgRepl\".Organization o","where p._key = o._key",true);
    checkNoBatchedJoin(persPartAff,"select p._key k1, o._key k2 ","\"persPartAff\".Person2 p","\"orgPart\".Organization o","where p.affKey = o._key",true);
    checkNoBatchedJoin(persPartAff,"select p._key k1, o._key k2 ","\"persPartAff\".Person2 p","\"orgRepl\".Organization o","where p.affKey = o._key",true);
    checkNoBatchedJoin(persPart,"select p._key k1, o._key k2 ","(select * from \"persPart\".Person2) p","\"orgPart\".Organization o","where p._key = o._key",false);
    checkNoBatchedJoin(persPart,"select p._key k1, o._key k2 ","\"persPart\".Person2 p","(select * from \"orgPart\".Organization) o","where p._key = o._key",false);
{
      String sql="select * from " + "(select o1._key k1, o2._key k2 from \"orgRepl\".Organization o1, \"orgRepl2\".Organization o2 where o1._key > o2._key) o, " + "\"persPart\".Person2 p where p.orgId = o.k1";
      checkQueryPlan(persPart,false,0,sql);
      checkQueryPlan(persPart,true,0,sql);
      sql="select o.k1, p1._key k2, p2._key k3 from " + "(select o1._key k1, o2._key k2 from \"orgRepl\".Organization o1, \"orgRepl2\".Organization o2 where o1._key > o2._key) o, " + "\"persPartAff\".Person2 p1, \"persPart\".Person2 p2 where p1._key=p2._key and p2.orgId = o.k1";
      checkQueryPlan(persPart,false,1,sql,"persPartAff","persPart","batched:unicast","orgRepl");
      checkQueryFails(persPart,sql,true);
      sql="select o.k1, p._key k2 from " + "(select o1._key k1, p1._key k2 from \"orgRepl\".Organization o1, \"persPart\".Person2 p1 where o1._key = p1.orgId) o, " + "\"persPartAff\".Person2 p where p._key=o.k1";
      checkQueryPlan(persPart,false,1,sql,"FROM \"persPart\"","INNER JOIN \"orgRepl\"","INNER JOIN \"persPartAff\"","batched:broadcast");
      checkQueryFails(persPart,sql,true);
    }
{
      String sql="select p1._key k1, p2._key k2, o._key k3 " + "from \"persPartAff\".Person2 p1, \"persPart\".Person2 p2, \"orgPart\".Organization o " + "where p1.affKey=p2._key and p2.orgId = o._key";
      checkQueryPlan(persPart,true,2,sql,"batched:unicast","batched:unicast");
      checkQueryPlan(persPart,false,2,sql,"batched:unicast","batched:unicast");
    }
{
      String sql="select p1._key k1, p2._key k2, o._key k3 " + "from \"persPartAff\".Person2 p1, \"persPart\".Person2 p2, \"orgPart\".Organization o " + "where p1.affKey > p2._key and p2.orgId = o._key";
      checkQueryPlan(persPart,true,2,sql,"batched:broadcast","batched:unicast");
      checkQueryPlan(persPart,false,2,sql,"batched:broadcast","batched:unicast");
    }
{
      String sql="select p1._key k1, p2._key k2, o._key k3 " + "from \"persPartAff\".Person2 p1, \"persPart\".Person2 p2, \"orgRepl\".Organization o " + "where p1.affKey=p2._key and p2.orgId = o._key";
      checkQueryPlan(persPart,true,0,sql);
      checkQueryPlan(persPart,false,0,sql);
    }
{
      String sql="select p1._key k1, p2._key k2, o._key k3 " + "from \"persPartAff\".Person2 p1, \"persPart\".Person2 p2, \"orgRepl\".Organization o " + "where p1._key=p2._key and p2.orgId = o._key";
      checkQueryPlan(persPart,false,1,sql,"batched:unicast");
      sql="select p1._key k1, p2._key k2, o._key k3 " + "from \"orgRepl\".Organization o, \"persPartAff\".Person2 p1, \"persPart\".Person2 p2 " + "where p1._key=p2._key and p2.orgId = o._key";
      checkQueryPlan(persPart,false,1,sql,"batched:unicast");
      sql="select p1._key k1, p2._key k2, o._key k3 " + "from \"persPartAff\".Person2 p1, \"orgRepl\".Organization o, \"persPart\".Person2 p2 " + "where p1._key=p2._key and p2.orgId = o._key";
      checkQueryPlan(persPart,false,1,sql,"batched:unicast");
      sql="select p1._key k1, p2._key k2, o._key k3 " + "from (select * from \"orgRepl\".Organization) o, \"persPartAff\".Person2 p1, \"persPart\".Person2 p2 " + "where p1._key=p2._key and p2.orgId = o._key";
      checkQueryPlan(persPart,false,1,sql,"batched:unicast");
    }
  }
  finally {
    for (    IgniteCache<Object,Object> cache : caches)     ignite(0).destroyCache(cache.getName());
  }
}
