{
  OutputFormat outputFormat=null;
  Exception err=null;
  JobContextImpl jobCtx=taskCtx.jobContext();
  try {
    outputFormat=reduce || !taskCtx.job().info().hasReducer() ? prepareWriter(jobCtx) : null;
    Reducer reducer;
    if (reduce)     reducer=ReflectionUtils.newInstance(jobCtx.getReducerClass(),jobCtx.getConfiguration());
 else     reducer=ReflectionUtils.newInstance(jobCtx.getCombinerClass(),jobCtx.getConfiguration());
    try {
      reducer.run(new WrappedReducer().getReducerContext(hadoopContext()));
    }
  finally {
      closeWriter();
    }
    commit(outputFormat);
  }
 catch (  InterruptedException e) {
    err=e;
    Thread.currentThread().interrupt();
    throw new IgniteInterruptedCheckedException(e);
  }
catch (  Exception e) {
    err=e;
    throw new IgniteCheckedException(e);
  }
 finally {
    if (err != null)     abort(outputFormat);
  }
}
