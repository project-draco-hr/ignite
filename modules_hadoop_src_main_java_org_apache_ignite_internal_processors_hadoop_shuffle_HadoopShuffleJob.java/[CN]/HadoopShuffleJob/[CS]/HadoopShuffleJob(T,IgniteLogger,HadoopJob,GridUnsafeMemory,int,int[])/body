{
  this.locReduceAddr=locReduceAddr;
  this.job=job;
  this.mem=mem;
  this.log=log.getLogger(HadoopShuffleJob.class);
  if (!F.isEmpty(locReducers)) {
    for (    int rdc : locReducers) {
      HadoopTaskInfo taskInfo=new HadoopTaskInfo(HadoopTaskType.REDUCE,job.id(),rdc,0,null);
      reducersCtx.put(rdc,job.getTaskContext(taskInfo));
    }
  }
  needPartitioner=totalReducerCnt > 1;
  maps=new AtomicReferenceArray<>(totalReducerCnt);
  msgs=new HadoopShuffleMessage[totalReducerCnt];
}
