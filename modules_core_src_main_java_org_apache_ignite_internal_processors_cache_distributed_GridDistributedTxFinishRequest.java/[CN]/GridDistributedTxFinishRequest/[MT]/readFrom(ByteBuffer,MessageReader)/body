{
  reader.setBuffer(buf);
  if (!reader.beforeMessageRead())   return false;
  if (!super.readFrom(buf,reader))   return false;
switch (reader.state()) {
case 7:
    baseVer=reader.readMessage("baseVer");
  if (!reader.isLastRead())   return false;
reader.incrementState();
case 8:
commit=reader.readBoolean("commit");
if (!reader.isLastRead()) return false;
reader.incrementState();
case 9:
commitVer=reader.readMessage("commitVer");
if (!reader.isLastRead()) return false;
reader.incrementState();
case 10:
futId=reader.readIgniteUuid("futId");
if (!reader.isLastRead()) return false;
reader.incrementState();
case 11:
invalidate=reader.readBoolean("invalidate");
if (!reader.isLastRead()) return false;
reader.incrementState();
case 12:
byte plcOrd;
plcOrd=reader.readByte("plc");
if (!reader.isLastRead()) return false;
plc=GridIoPolicy.fromOrdinal(plcOrd);
reader.incrementState();
case 13:
syncCommit=reader.readBoolean("syncCommit");
if (!reader.isLastRead()) return false;
reader.incrementState();
case 14:
syncRollback=reader.readBoolean("syncRollback");
if (!reader.isLastRead()) return false;
reader.incrementState();
case 15:
sys=reader.readBoolean("sys");
if (!reader.isLastRead()) return false;
reader.incrementState();
case 16:
threadId=reader.readLong("threadId");
if (!reader.isLastRead()) return false;
reader.incrementState();
case 17:
txSize=reader.readInt("txSize");
if (!reader.isLastRead()) return false;
reader.incrementState();
}
return true;
}
