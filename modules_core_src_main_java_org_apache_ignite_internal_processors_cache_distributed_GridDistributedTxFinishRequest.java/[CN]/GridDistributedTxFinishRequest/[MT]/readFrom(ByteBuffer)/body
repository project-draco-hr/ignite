{
  reader.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (state) {
case 8:
    baseVer=reader.readMessage("baseVer");
  if (!reader.isLastRead())   return false;
state++;
case 9:
commit=reader.readBoolean("commit");
if (!reader.isLastRead()) return false;
state++;
case 10:
commitVer=reader.readMessage("commitVer");
if (!reader.isLastRead()) return false;
state++;
case 11:
futId=reader.readIgniteUuid("futId");
if (!reader.isLastRead()) return false;
state++;
case 12:
grpLockKeyBytes=reader.readByteArray("grpLockKeyBytes");
if (!reader.isLastRead()) return false;
state++;
case 13:
invalidate=reader.readBoolean("invalidate");
if (!reader.isLastRead()) return false;
state++;
case 14:
syncCommit=reader.readBoolean("syncCommit");
if (!reader.isLastRead()) return false;
state++;
case 15:
syncRollback=reader.readBoolean("syncRollback");
if (!reader.isLastRead()) return false;
state++;
case 16:
sys=reader.readBoolean("sys");
if (!reader.isLastRead()) return false;
state++;
case 17:
threadId=reader.readLong("threadId");
if (!reader.isLastRead()) return false;
state++;
case 18:
txSize=reader.readInt("txSize");
if (!reader.isLastRead()) return false;
state++;
}
return true;
}
