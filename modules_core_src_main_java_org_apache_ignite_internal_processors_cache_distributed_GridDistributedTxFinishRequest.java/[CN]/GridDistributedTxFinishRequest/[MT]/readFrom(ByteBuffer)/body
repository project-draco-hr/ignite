{
  commState.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (commState.idx) {
case 8:
    baseVer=commState.getCacheVersion("baseVer");
  if (!commState.lastRead())   return false;
commState.idx++;
case 9:
commit=commState.getBoolean("commit");
if (!commState.lastRead()) return false;
commState.idx++;
case 10:
commitVer=commState.getCacheVersion("commitVer");
if (!commState.lastRead()) return false;
commState.idx++;
case 11:
futId=commState.getGridUuid("futId");
if (!commState.lastRead()) return false;
commState.idx++;
case 12:
grpLockKeyBytes=commState.getByteArray("grpLockKeyBytes");
if (!commState.lastRead()) return false;
commState.idx++;
case 13:
invalidate=commState.getBoolean("invalidate");
if (!commState.lastRead()) return false;
commState.idx++;
case 14:
if (commState.readSize == -1) {
commState.readSize=commState.getInt(null);
if (!commState.lastRead()) return false;
}
if (commState.readSize >= 0) {
if (recoveryWritesBytes == null) recoveryWritesBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
byte[] _val=commState.getByteArray(null);
if (!commState.lastRead()) return false;
recoveryWritesBytes.add((byte[])_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 15:
syncCommit=commState.getBoolean("syncCommit");
if (!commState.lastRead()) return false;
commState.idx++;
case 16:
syncRollback=commState.getBoolean("syncRollback");
if (!commState.lastRead()) return false;
commState.idx++;
case 17:
sys=commState.getBoolean("sys");
if (!commState.lastRead()) return false;
commState.idx++;
case 18:
threadId=commState.getLong("threadId");
if (!commState.lastRead()) return false;
commState.idx++;
case 19:
txSize=commState.getInt("txSize");
if (!commState.lastRead()) return false;
commState.idx++;
case 20:
if (commState.readSize == -1) {
commState.readSize=commState.getInt(null);
if (!commState.lastRead()) return false;
}
if (commState.readSize >= 0) {
if (writeEntriesBytes == null) writeEntriesBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
byte[] _val=commState.getByteArray(null);
if (!commState.lastRead()) return false;
writeEntriesBytes.add((byte[])_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
}
return true;
}
