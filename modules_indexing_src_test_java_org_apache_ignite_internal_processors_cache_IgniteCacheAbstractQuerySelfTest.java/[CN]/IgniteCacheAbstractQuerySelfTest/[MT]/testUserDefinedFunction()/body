{
  final IgniteCache<Object,Object> cache=ignite().cache(null);
  QueryCursor<List<?>> qry=cache.query(new SqlFieldsQuery("select square(1), square(2)"));
  Collection<List<?>> res=qry.getAll();
  if (cacheMode() == REPLICATED)   assertEquals(1,res.size());
 else   assertEquals(gridCount(),res.size());
  List<?> row=res.iterator().next();
  assertEquals(1,row.get(0));
  assertEquals(4,row.get(1));
  qry=cache.query(new SqlFieldsQuery("select _cube_(1), _cube_(2)"));
  res=qry.getAll();
  if (cacheMode() == REPLICATED)   assertEquals(1,res.size());
 else   assertEquals(gridCount(),res.size());
  row=res.iterator().next();
  assertEquals(1,row.get(0));
  assertEquals(8,row.get(1));
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      cache.query(new SqlFieldsQuery("select no()"));
      return null;
    }
  }
,CacheException.class,null);
}
