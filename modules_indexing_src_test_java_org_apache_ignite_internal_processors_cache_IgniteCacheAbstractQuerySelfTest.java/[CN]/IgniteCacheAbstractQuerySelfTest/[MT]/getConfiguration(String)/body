{
  IgniteConfiguration c=super.getConfiguration(gridName);
  c.setDiscoverySpi(new TcpDiscoverySpi().setForceServerMode(true).setIpFinder(ipFinder));
  c.setSwapSpaceSpi(new FileSwapSpaceSpi());
  if (!gridName.startsWith("client")) {
    CacheConfiguration[] ccs=new CacheConfiguration[2];
    for (int i=0; i < ccs.length; i++) {
      CacheConfiguration cc=defaultCacheConfiguration();
      if (i > 0)       cc.setName("c" + i);
      cc.setCacheMode(cacheMode());
      cc.setAtomicityMode(atomicityMode());
      cc.setNearConfiguration(nearCacheConfiguration());
      cc.setWriteSynchronizationMode(FULL_SYNC);
      cc.setCacheStoreFactory(new StoreFactory());
      cc.setReadThrough(true);
      cc.setWriteThrough(true);
      cc.setLoadPreviousValue(true);
      cc.setRebalanceMode(SYNC);
      cc.setSwapEnabled(true);
      cc.setSqlFunctionClasses(SqlFunctions.class);
      cc.setIndexedTypes(BadHashKeyObject.class,Byte.class,ObjectValue.class,Long.class,Integer.class,Integer.class,Integer.class,String.class,Integer.class,ObjectValue.class,String.class,ObjectValueOther.class,Integer.class,ArrayObject.class,Key.class,GridCacheQueryTestValue.class,UUID.class,Person.class,IgniteCacheReplicatedQuerySelfTest.CacheKey.class,IgniteCacheReplicatedQuerySelfTest.CacheValue.class);
      if (cacheMode() != CacheMode.LOCAL)       cc.setAffinity(new RendezvousAffinityFunction());
      if (cacheMode() == CacheMode.PARTITIONED)       cc.setBackups(gridCount());
      cc.setSnapshotableIndex(snapshotableIndex());
      ccs[i]=cc;
    }
    c.setCacheConfiguration(ccs);
  }
 else   c.setClientMode(true);
  return c;
}
