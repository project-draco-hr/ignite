{
  final AtomicBoolean finished=new AtomicBoolean();
  IgniteInternalFuture<Object> fut=GridTestUtils.runAsync(new Callable<Object>(){
    @Override public Object call() throws Exception {
      while (!finished.get()) {
        stopGrid(3);
        U.sleep(300);
        startGrid(3);
      }
      return null;
    }
  }
);
  int keysCnt=keysCount();
  boolean exceptionThrown=false;
  for (int i=0; i < keysCnt; i++) {
    try {
      ignite(0).cache(null).withNoRetries().put(i,i);
    }
 catch (    Exception e) {
      assertTrue("Invalid exception: " + e,X.hasCause(e,ClusterTopologyCheckedException.class) || X.hasCause(e,CachePartialUpdateException.class));
      exceptionThrown=true;
      break;
    }
  }
  assertTrue(exceptionThrown);
  finished.set(true);
  fut.get();
}
