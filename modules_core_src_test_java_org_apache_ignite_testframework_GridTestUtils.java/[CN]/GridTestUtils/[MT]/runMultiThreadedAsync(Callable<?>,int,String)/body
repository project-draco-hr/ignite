{
  final List<Callable<?>> calls=Collections.<Callable<?>>nCopies(threadNum,call);
  final GridTestSafeThreadFactory threadFactory=new GridTestSafeThreadFactory(threadName);
  GridFutureAdapter<Long> cancelFut=new GridFutureAdapter<Long>(){
    @Override public boolean cancel(){
      if (onCancelled()) {
        threadFactory.interruptAllThreads();
        onCancelled();
        return true;
      }
      return false;
    }
  }
;
  IgniteInternalFuture<Long> runFut=runAsync(new Callable<Long>(){
    @Override public Long call() throws Exception {
      return runMultiThreaded(calls,threadFactory);
    }
  }
);
  GridCompoundFuture<Long,Long> compFut=new GridCompoundFuture<>();
  compFut.addAll(cancelFut,runFut);
  compFut.reducer(F.sumLongReducer());
  compFut.markInitialized();
  cancelFut.onDone();
  return compFut;
}
