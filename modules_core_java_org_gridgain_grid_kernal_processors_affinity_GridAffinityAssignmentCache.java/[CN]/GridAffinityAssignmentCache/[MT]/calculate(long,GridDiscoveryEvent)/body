{
  GridAffinityAssignment prev=affCache.get(topVer - 1);
  List<GridNode> sorted;
  if (ctx.isLocal())   sorted=Collections.singletonList(ctx.localNode());
 else {
    Collection<GridNode> nodes=ctx.discovery().cacheAffinityNodes(cacheName,topVer);
    sorted=sort(nodes);
  }
  List<List<GridNode>> prevAssignment=prev == null ? null : prev.assignment();
  List<List<GridNode>> assignment=aff.assignPartitions(new GridCacheAffinityFunctionContextImpl(sorted,prevAssignment,discoEvt,topVer,backups));
  GridAffinityAssignment updated=new GridAffinityAssignment(topVer,assignment);
  updated=F.addIfAbsent(affCache,topVer,updated);
  while (true) {
    GridAffinityAssignment headItem=head.get();
    if (headItem.topologyVersion() >= topVer)     break;
    if (head.compareAndSet(headItem,updated))     break;
  }
  for (  Map.Entry<Long,AffinityReadyFuture> entry : readyFuts.entrySet()) {
    if (entry.getKey() >= topVer)     entry.getValue().onDone(topVer);
  }
  return updated.assignment();
}
