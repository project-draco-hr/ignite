{
  VisorIgfsConfiguration cfg=new VisorIgfsConfiguration();
  cfg.name(igfs.getName());
  cfg.metaCacheName(igfs.getMetaCacheName());
  cfg.dataCacheName(igfs.getDataCacheName());
  cfg.blockSize(igfs.getBlockSize());
  cfg.prefetchBlocks(igfs.getPrefetchBlocks());
  cfg.streamBufferSize(igfs.getStreamBufferSize());
  cfg.perNodeBatchSize(igfs.getPerNodeBatchSize());
  cfg.perNodeParallelBatchCount(igfs.getPerNodeParallelBatchCount());
  Igfs secFs=igfs.getSecondaryFileSystem();
  if (secFs != null) {
    Map<String,String> props=secFs.properties();
    cfg.secondaryHadoopFileSystemUri(props.get(SECONDARY_FS_URI));
    cfg.secondaryHadoopFileSystemConfigPath(props.get(SECONDARY_FS_CONFIG_PATH));
  }
  cfg.defaultMode(igfs.getDefaultMode());
  cfg.pathModes(igfs.getPathModes());
  cfg.dualModePutExecutorService(compactClass(igfs.getDualModePutExecutorService()));
  cfg.dualModePutExecutorServiceShutdown(igfs.getDualModePutExecutorServiceShutdown());
  cfg.dualModeMaxPendingPutsSize(igfs.getDualModeMaxPendingPutsSize());
  cfg.maxTaskRangeLength(igfs.getMaximumTaskRangeLength());
  cfg.fragmentizerConcurrentFiles(igfs.getFragmentizerConcurrentFiles());
  cfg.fragmentizerLocalWritesRatio(igfs.getFragmentizerLocalWritesRatio());
  cfg.fragmentizerEnabled(igfs.isFragmentizerEnabled());
  cfg.fragmentizerThrottlingBlockLength(igfs.getFragmentizerThrottlingBlockLength());
  cfg.fragmentizerThrottlingDelay(igfs.getFragmentizerThrottlingDelay());
  Map<String,String> endpointCfg=igfs.getIpcEndpointConfiguration();
  cfg.ipcEndpointConfiguration(endpointCfg != null ? endpointCfg.toString() : null);
  cfg.ipcEndpointEnabled(igfs.isIpcEndpointEnabled());
  cfg.maxSpace(igfs.getMaxSpaceSize());
  cfg.managementPort(igfs.getManagementPort());
  cfg.sequenceReadsBeforePrefetch(igfs.getSequentialReadsBeforePrefetch());
  cfg.trashPurgeTimeout(igfs.getTrashPurgeTimeout());
  return cfg;
}
