{
  VisorIgfsConfiguration cfg=new VisorIgfsConfiguration();
  cfg.name=igfs.getName();
  cfg.metaCacheName=igfs.getMetaCacheName();
  cfg.dataCacheName=igfs.getDataCacheName();
  cfg.blockSize=igfs.getBlockSize();
  cfg.prefetchBlocks=igfs.getPrefetchBlocks();
  cfg.streamBufSize=igfs.getStreamBufferSize();
  cfg.perNodeBatchSize=igfs.getPerNodeBatchSize();
  cfg.perNodeParallelBatchCnt=igfs.getPerNodeParallelBatchCount();
  IgfsSecondaryFileSystem secFs=igfs.getSecondaryFileSystem();
  if (secFs != null) {
    Map<String,String> props=secFs.properties();
    cfg.secondaryHadoopFileSysUri=props.get(SECONDARY_FS_URI);
    cfg.secondaryHadoopFileSysCfgPath=props.get(SECONDARY_FS_CONFIG_PATH);
    cfg.secondaryHadoopFileSysUserName=props.get(SECONDARY_FS_USER_NAME);
  }
  cfg.dfltMode=igfs.getDefaultMode();
  cfg.pathModes=igfs.getPathModes();
  cfg.dualModePutExecutorSrvc=compactClass(igfs.getDualModePutExecutorService());
  cfg.dualModePutExecutorSrvcShutdown=igfs.getDualModePutExecutorServiceShutdown();
  cfg.dualModeMaxPendingPutsSize=igfs.getDualModeMaxPendingPutsSize();
  cfg.maxTaskRangeLen=igfs.getMaximumTaskRangeLength();
  cfg.fragmentizerConcurrentFiles=igfs.getFragmentizerConcurrentFiles();
  cfg.fragmentizerLocWritesRatio=igfs.getFragmentizerLocalWritesRatio();
  cfg.fragmentizerEnabled=igfs.isFragmentizerEnabled();
  cfg.fragmentizerThrottlingBlockLen=igfs.getFragmentizerThrottlingBlockLength();
  cfg.fragmentizerThrottlingDelay=igfs.getFragmentizerThrottlingDelay();
  IgfsIpcEndpointConfiguration endpointCfg=igfs.getIpcEndpointConfiguration();
  cfg.ipcEndpointCfg=endpointCfg != null ? endpointCfg.toString() : null;
  cfg.ipcEndpointEnabled=igfs.isIpcEndpointEnabled();
  cfg.maxSpace=igfs.getMaxSpaceSize();
  cfg.mgmtPort=igfs.getManagementPort();
  cfg.seqReadsBeforePrefetch=igfs.getSequentialReadsBeforePrefetch();
  cfg.trashPurgeTimeout=igfs.getTrashPurgeTimeout();
  return cfg;
}
