{
  Collection<K> keys=F.viewReadOnly(req.writes(),CU.<K,V>tx2key());
  GridFuture<Object> keyFut=F.isEmpty(keys) ? null : ctx.dht().dhtPreloader().request(keys,req.topologyVersion());
  try {
    if (keyFut != null && !keyFut.isDone()) {
      log.info("Wait keys");
      keyFut.get();
      log.info("Wait keys done");
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  if (req.onePhaseCommit() && beforePessimisticLock != null) {
    GridFuture<Object> f=beforePessimisticLock.apply(keys,true);
    if (f != null && !f.isDone()) {
      f.listenAsync(new CI1<GridFuture<Object>>(){
        @Override public void apply(        GridFuture<Object> t){
          processDhtTxFinishRequest0(nodeId,req);
        }
      }
);
    }
 else     processDhtTxFinishRequest0(nodeId,req);
  }
 else   processDhtTxFinishRequest0(nodeId,req);
}
