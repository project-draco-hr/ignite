{
  if (mode != PRIMARY) {
    IgfsConfiguration ggfsCfg=new IgfsConfiguration();
    ggfsCfg.setDataCacheName("partitioned");
    ggfsCfg.setMetaCacheName("replicated");
    ggfsCfg.setName("ggfs_secondary");
    ggfsCfg.setIpcEndpointConfiguration(SECONDARY_ENDPOINT_CFG);
    ggfsCfg.setBlockSize(512 * 1024);
    ggfsCfg.setPrefetchBlocks(1);
    CacheConfiguration cacheCfg=defaultCacheConfiguration();
    cacheCfg.setName("partitioned");
    cacheCfg.setCacheMode(PARTITIONED);
    cacheCfg.setDistributionMode(CacheDistributionMode.PARTITIONED_ONLY);
    cacheCfg.setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC);
    cacheCfg.setAffinityMapper(new IgfsGroupDataBlocksKeyMapper(GRP_SIZE));
    cacheCfg.setBackups(0);
    cacheCfg.setQueryIndexEnabled(false);
    cacheCfg.setAtomicityMode(TRANSACTIONAL);
    CacheConfiguration metaCacheCfg=defaultCacheConfiguration();
    metaCacheCfg.setName("replicated");
    metaCacheCfg.setCacheMode(REPLICATED);
    metaCacheCfg.setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC);
    metaCacheCfg.setQueryIndexEnabled(false);
    metaCacheCfg.setAtomicityMode(TRANSACTIONAL);
    IgniteConfiguration cfg=new IgniteConfiguration();
    cfg.setGridName("grid_secondary");
    TcpDiscoverySpi discoSpi=new TcpDiscoverySpi();
    discoSpi.setIpFinder(new TcpDiscoveryVmIpFinder(true));
    cfg.setDiscoverySpi(discoSpi);
    cfg.setCacheConfiguration(metaCacheCfg,cacheCfg);
    cfg.setIgfsConfiguration(ggfsCfg);
    cfg.setIncludeEventTypes(EVT_TASK_FAILED,EVT_TASK_FINISHED,EVT_JOB_MAPPED);
    cfg.setCommunicationSpi(communicationSpi());
    G.start(cfg);
  }
  startGrids(4);
}
