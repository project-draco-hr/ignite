{
  super.start();
  if (idx != null) {
    ctx.resource().injectGeneric(idx);
    idx.start(ctx);
    for (    CacheConfiguration<?,?> ccfg : ctx.config().getCacheConfiguration()) {
      CacheQueryConfiguration qryCfg=ccfg.getQueryConfiguration();
      if (qryCfg != null && qryCfg.getTypeResolver() != null)       typeResolvers.put(ccfg.getName(),qryCfg.getTypeResolver());
      Map<TypeName,CacheTypeMetadata> declaredTypes=new HashMap<>();
      if (!F.isEmpty(ccfg.getTypeMetadata())) {
        for (        CacheTypeMetadata meta : ccfg.getTypeMetadata()) {
          declaredTypes.put(new TypeName(ccfg.getName(),meta.getValueType()),meta);
          int valTypeId=ctx.portable().typeId(meta.getValueType());
          portableIds.put(valTypeId,meta.getValueType());
          TypeDescriptor desc=processPortableMeta(meta);
          desc.registered(idx.registerType(ccfg.getName(),desc));
          typesByName.put(new TypeName(ccfg.getName(),desc.name()),desc);
          types.put(new TypeId(ccfg.getName(),valTypeId),desc);
        }
      }
      if (qryCfg != null && !F.isEmpty(qryCfg.getAnnotatedEntryTypes())) {
        for (        IgniteBiTuple<Class<?>,Class<?>> types : qryCfg.getAnnotatedEntryTypes()) {
          TypeDescriptor desc=processKeyAndValue(ccfg.getName(),types.getKey(),types.getValue(),declaredTypes);
          desc.registered(idx.registerType(ccfg.getName(),desc));
          typesByName.put(new TypeName(ccfg.getName(),desc.name()),desc);
        }
      }
    }
    execSvc=ctx.getExecutorService();
  }
}
