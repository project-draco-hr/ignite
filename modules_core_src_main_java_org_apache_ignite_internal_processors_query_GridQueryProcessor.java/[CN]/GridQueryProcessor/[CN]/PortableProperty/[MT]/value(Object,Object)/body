{
  Object obj;
  if (parent != null) {
    obj=parent.value(key,val);
    if (obj == null)     return null;
    if (!ctx.cacheObjects().isPortableObject(obj))     throw new IgniteCheckedException("Non-portable object received as a result of property extraction " + "[parent=" + parent + ", propName="+ propName+ ", obj="+ obj+ ']');
  }
 else {
    int isKeyProp0=isKeyProp;
    if (isKeyProp0 == 0) {
      if (ctx.cacheObjects().isPortableObject(key) && ctx.cacheObjects().hasField(key,propName))       isKeyProp=isKeyProp0=1;
 else       if (ctx.cacheObjects().hasField(val,propName))       isKeyProp=isKeyProp0=-1;
 else {
        U.warn(log,"Neither key nor value have property " + "[propName=" + propName + ", key="+ key+ ", val="+ val+ "]");
        return null;
      }
    }
    obj=isKeyProp0 == 1 ? key : val;
  }
  return ctx.cacheObjects().field(obj,propName);
}
