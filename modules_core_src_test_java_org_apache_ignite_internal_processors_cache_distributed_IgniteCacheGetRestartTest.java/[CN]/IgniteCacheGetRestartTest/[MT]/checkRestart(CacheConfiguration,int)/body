{
  ignite(0).createCache(ccfg);
  try {
    if (ccfg.getNearConfiguration() != null)     ignite(SRVS).createNearCache(ccfg.getName(),new NearCacheConfiguration<>());
    try (IgniteDataStreamer<Object,Object> streamer=ignite(0).dataStreamer(ccfg.getName())){
      for (int i=0; i < KEYS; i++)       streamer.addData(i,i);
    }
     final long stopTime=U.currentTimeMillis() + TEST_TIME;
    final AtomicInteger nodeIdx=new AtomicInteger();
    IgniteInternalFuture<?> fut1=GridTestUtils.runMultiThreadedAsync(new Callable<Void>(){
      @Override public Void call() throws Exception {
        Ignite ignite=ignite(nodeIdx.getAndIncrement());
        log.info("Check get [node=" + ignite.name() + ", client="+ ignite.configuration().isClientMode()+ ']');
        IgniteCache<Object,Object> cache=ignite.cache(ccfg.getName());
        while (U.currentTimeMillis() < stopTime)         checkGet(cache);
        return null;
      }
    }
,SRVS + CLIENTS,"get-thread");
    final AtomicInteger restartNodeIdx=new AtomicInteger(SRVS + CLIENTS);
    final AtomicBoolean clientNode=new AtomicBoolean();
    IgniteInternalFuture<?> fut2=GridTestUtils.runMultiThreadedAsync(new Callable<Void>(){
      @Override public Void call() throws Exception {
        int nodeIdx=restartNodeIdx.getAndIncrement();
        boolean clientMode=clientNode.compareAndSet(false,true);
        while (U.currentTimeMillis() < stopTime) {
          if (clientMode)           client.set(true);
          log.info("Restart node [node=" + nodeIdx + ", client="+ clientMode+ ']');
          Ignite ignite=startGrid(nodeIdx);
          IgniteCache<Object,Object> cache;
          if (clientMode && ccfg.getNearConfiguration() != null)           cache=ignite.createNearCache(ccfg.getName(),new NearCacheConfiguration<>());
 else           cache=ignite.cache(ccfg.getName());
          checkGet(cache);
          IgniteInternalFuture<?> syncFut=((IgniteCacheProxy)cache).context().preloader().syncFuture();
          while (!syncFut.isDone())           checkGet(cache);
          checkGet(cache);
          stopGrid(nodeIdx);
        }
        return null;
      }
    }
,restartCnt + 1,"restart-thread");
    fut1.get();
    fut2.get();
  }
  finally {
    ignite(0).destroyCache(ccfg.getName());
  }
}
