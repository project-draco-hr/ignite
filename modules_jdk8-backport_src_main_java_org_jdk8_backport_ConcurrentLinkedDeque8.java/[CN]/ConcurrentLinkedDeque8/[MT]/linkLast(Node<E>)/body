{
  checkNotNull(n);
  size.increment();
  restartFromTail:   for (; ; ) {
    for (Node<E> t=tail, p=t, q; ; ) {
      if ((q=p.next) != null && (q=(p=q).next) != null)       p=(t != (t=tail)) ? t : q;
 else       if (p.prev == p)       continue restartFromTail;
 else {
        n.lazySetPrev(p);
        if (p.casNext(null,n)) {
          if (p != t)           casTail(t,n);
          return;
        }
      }
    }
  }
}
