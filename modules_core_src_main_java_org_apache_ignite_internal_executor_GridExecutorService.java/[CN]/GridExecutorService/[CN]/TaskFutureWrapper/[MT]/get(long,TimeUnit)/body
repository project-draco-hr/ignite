{
  A.ensure(timeout >= 0,"timeout >= 0");
  A.notNull(unit,"unit != null");
  try {
    T res=fut.get(unit.toMillis(timeout));
    if (fut.isCancelled())     throw new CancellationException("Task was cancelled: " + fut);
    return res;
  }
 catch (  IgniteFutureTimeoutCheckedException e) {
    TimeoutException e2=new TimeoutException();
    e2.initCause(e);
    throw e2;
  }
catch (  ComputeTaskTimeoutException e) {
    throw new ExecutionException("Task execution timed out during waiting for task result: " + fut,e);
  }
catch (  IgniteCheckedException e) {
    if (fut.isCancelled()) {
      RuntimeException ex=new CancellationException("Task was cancelled: " + fut);
      ex.initCause(e);
      throw ex;
    }
    throw new ExecutionException("Failed to get task result.",e);
  }
}
