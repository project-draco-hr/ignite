{
  IgfsConfiguration igfsCfg=new IgfsConfiguration();
  igfsCfg.setDataCacheName("dataCache");
  igfsCfg.setMetaCacheName("metaCache");
  igfsCfg.setName(igfsName);
  igfsCfg.setBlockSize(IGFS_BLOCK_SIZE);
  igfsCfg.setDefaultMode(mode);
  igfsCfg.setIpcEndpointConfiguration(restCfg);
  igfsCfg.setSecondaryFileSystem(secondaryFs);
  igfsCfg.setPrefetchBlocks(PREFETCH_BLOCKS);
  igfsCfg.setSequentialReadsBeforePrefetch(SEQ_READS_BEFORE_PREFETCH);
  CacheConfiguration dataCacheCfg=defaultCacheConfiguration();
  dataCacheCfg.setName("dataCache");
  dataCacheCfg.setCacheMode(PARTITIONED);
  dataCacheCfg.setDistributionMode(CacheDistributionMode.PARTITIONED_ONLY);
  dataCacheCfg.setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC);
  dataCacheCfg.setAffinityMapper(new IgfsGroupDataBlocksKeyMapper(2));
  dataCacheCfg.setBackups(0);
  dataCacheCfg.setAtomicityMode(TRANSACTIONAL);
  dataCacheCfg.setOffHeapMaxMemory(0);
  CacheConfiguration metaCacheCfg=defaultCacheConfiguration();
  metaCacheCfg.setName("metaCache");
  metaCacheCfg.setCacheMode(REPLICATED);
  metaCacheCfg.setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC);
  metaCacheCfg.setAtomicityMode(TRANSACTIONAL);
  IgniteConfiguration cfg=new IgniteConfiguration();
  cfg.setGridName(gridName);
  TcpDiscoverySpi discoSpi=new TcpDiscoverySpi();
  discoSpi.setIpFinder(new TcpDiscoveryVmIpFinder(true));
  cfg.setDiscoverySpi(discoSpi);
  cfg.setCacheConfiguration(dataCacheCfg,metaCacheCfg);
  cfg.setIgfsConfiguration(igfsCfg);
  cfg.setLocalHost("127.0.0.1");
  cfg.setConnectorConfiguration(null);
  return G.start(cfg);
}
