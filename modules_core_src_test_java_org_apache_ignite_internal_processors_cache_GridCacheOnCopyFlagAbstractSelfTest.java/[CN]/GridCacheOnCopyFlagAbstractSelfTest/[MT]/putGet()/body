{
  noInterceptor=true;
  IgniteCache<TestKey,TestValue> cache=grid(0).createCache(cacheConfiguration());
  try {
    Map<TestKey,TestValue> map=new HashMap<>();
    for (int i=0; i < ITER_CNT; i++) {
      TestKey key=new TestKey(i,i);
      TestValue val=new TestValue(i);
      cache.put(key,val);
      map.put(key,val);
    }
    GridCacheAdapter cache0=internalCache(cache);
    GridCacheContext cctx=cache0.context();
    boolean binary=cctx.cacheObjects().isBinaryEnabled(null);
    for (    Map.Entry<TestKey,TestValue> e : map.entrySet()) {
      GridCacheEntryEx entry=cache0.peekEx(e.getKey());
      assertNotNull("No entry for key: " + e.getKey(),entry);
      TestKey key0=entry.key().value(cctx.cacheObjectContext(),false);
      assertNotSame(key0,e.getKey());
      TestKey key1=entry.key().value(cctx.cacheObjectContext(),true);
      if (!binary)       assertSame(key0,key1);
 else       assertNotSame(key0,key1);
      TestValue val0=entry.rawGet().value(cctx.cacheObjectContext(),false);
      assertNotSame(val0,e.getValue());
      TestValue val1=entry.rawGet().value(cctx.cacheObjectContext(),true);
      assertNotSame(val0,val1);
    }
  }
  finally {
    if (cache != null)     cache.destroy();
  }
}
