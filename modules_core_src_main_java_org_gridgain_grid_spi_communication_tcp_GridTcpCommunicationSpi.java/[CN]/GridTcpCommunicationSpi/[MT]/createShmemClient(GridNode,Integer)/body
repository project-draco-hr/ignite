{
  int attempt=1;
  int connectAttempts=1;
  while (true) {
    GridCommunicationClient client;
    try {
      client=new GridShmemCommunicationClient(metricsLsnr,port,connTimeout,log,msgWriter);
    }
 catch (    GridException e) {
      if (connectAttempts < 2 && X.hasCause(e,ConnectException.class)) {
        connectAttempts++;
        continue;
      }
      throw e;
    }
    long connTimeout0=connTimeout;
    try {
      safeHandshake(client,node.id(),connTimeout0);
    }
 catch (    HandshakeTimeoutException e) {
      if (log.isDebugEnabled())       log.debug("Handshake timedout (will retry with increased timeout) [timeout=" + connTimeout0 + ", err="+ e.getMessage()+ ", client="+ client+ ']');
      client.forceClose();
      if (attempt == reconCnt || connTimeout0 > maxConnTimeout) {
        if (log.isDebugEnabled())         log.debug("Handshake timedout (will stop attempts to perform the handshake) " + "[timeout=" + connTimeout0 + ", maxConnTimeout="+ maxConnTimeout+ ", attempt="+ attempt+ ", reconCnt="+ reconCnt+ ", err="+ e.getMessage()+ ", client="+ client+ ']');
        throw e;
      }
 else {
        attempt++;
        connTimeout0*=2;
        continue;
      }
    }
catch (    GridException|RuntimeException|Error e) {
      if (log.isDebugEnabled())       log.debug("Caught exception (will close client) [err=" + e.getMessage() + ", client="+ client+ ']');
      client.forceClose();
      throw e;
    }
    return client;
  }
}
