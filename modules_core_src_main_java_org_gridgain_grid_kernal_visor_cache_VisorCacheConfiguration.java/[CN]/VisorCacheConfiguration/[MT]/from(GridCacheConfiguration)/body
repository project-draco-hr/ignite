{
  VisorCacheConfiguration cfg=new VisorCacheConfiguration();
  cfg.name(ccfg.getName());
  cfg.mode(ccfg.getCacheMode());
  cfg.distributionMode(ccfg.getDistributionMode());
  cfg.atomicityMode(ccfg.getAtomicityMode());
  cfg.atomicSequenceReserveSize(ccfg.getAtomicSequenceReserveSize());
  cfg.atomicWriteOrderMode(ccfg.getAtomicWriteOrderMode());
  cfg.atomicSequenceReserveSize(ccfg.getAtomicSequenceReserveSize());
  cfg.eagerTtl(ccfg.isEagerTtl());
  cfg.refreshAheadRatio(ccfg.getRefreshAheadRatio());
  cfg.writeSynchronizationMode(ccfg.getWriteSynchronizationMode());
  cfg.swapEnabled(ccfg.isSwapEnabled());
  cfg.queryIndexEnabled(ccfg.isQueryIndexEnabled());
  cfg.batchUpdateOnCommit(ccfg.isBatchUpdateOnCommit());
  cfg.invalidate(ccfg.isInvalidate());
  cfg.startSize(ccfg.getStartSize());
  cfg.cloner(compactClass(ccfg.getCloner()));
  cfg.transactionManagerLookupClassName(ccfg.getTransactionManagerLookupClassName());
  cfg.txSerializableEnabled(ccfg.isTxSerializableEnabled());
  cfg.offsetHeapMaxMemory(ccfg.getOffHeapMaxMemory());
  cfg.maxQueryIteratorCount(ccfg.getMaximumQueryIteratorCount());
  cfg.maxConcurrentAsyncOperations(ccfg.getMaxConcurrentAsyncOperations());
  cfg.pessimisticTxLoggerSize(ccfg.getPessimisticTxLogSize());
  cfg.pessimisticTxLoggerLinger(ccfg.getPessimisticTxLogLinger());
  cfg.memoryMode(ccfg.getMemoryMode());
  cfg.indexingSpiName(ccfg.getIndexingSpiName());
  cfg.interceptor(compactClass(ccfg.getInterceptor()));
  cfg.affinityConfig(VisorCacheAffinityConfig.from(ccfg));
  cfg.preloadConfig(VisorCachePreloadConfiguration.from(ccfg));
  cfg.evictConfig(VisorCacheEvictionConfiguration.from(ccfg));
  cfg.nearConfig(VisorCacheNearConfiguration.from(ccfg));
  cfg.defaultConfig(VisorCacheDefaultConfig.from(ccfg));
  cfg.dgcConfig(VisorCacheDgcConfiguration.from(ccfg));
  cfg.storeConfig(VisorCacheStoreConfiguration.from(ccfg));
  cfg.VisorWriteBehindConfig(VisorCacheWriteBehindConfiguration.from(ccfg));
  return cfg;
}
