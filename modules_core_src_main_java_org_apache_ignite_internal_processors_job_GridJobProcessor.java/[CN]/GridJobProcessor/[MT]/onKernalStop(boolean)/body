{
  GridIoManager commMgr=ctx.io();
  commMgr.removeMessageListener(TOPIC_JOB,jobExecLsnr);
  commMgr.removeMessageListener(TOPIC_JOB_CANCEL,cancelLsnr);
  if (!jobAlwaysActivate)   ctx.collision().unsetCollisionExternalListener();
  rwLock.writeLock();
  try {
    stopping=true;
    cancelOnStop=cancel;
  }
  finally {
    rwLock.writeUnlock();
  }
  if (!jobAlwaysActivate) {
    for (    GridJobWorker job : passiveJobs.values())     if (passiveJobs.remove(job.getJobId(),job))     rejectJob(job,false);
  }
  if (cancel) {
    for (    GridJobWorker job : activeJobs.values()) {
      job.onStopping();
      cancelJob(job,false);
    }
  }
  U.join(activeJobs.values(),log);
  U.join(cancelledJobs.values(),log);
  ctx.event().removeLocalEventListener(discoLsnr);
  if (log.isDebugEnabled())   log.debug("Finished executing job processor onKernalStop() callback.");
}
