{
  try {
    ctx.getExecutorService().execute(jobWorker);
    if (metricsUpdateFreq > -1L)     startedJobsCnt.increment();
    return true;
  }
 catch (  RejectedExecutionException e) {
    activeJobs.remove(jobWorker.getJobId(),jobWorker);
    IgniteException e2=new ComputeExecutionRejectedException("Job has been rejected " + "[jobSes=" + jobWorker.getSession() + ", job="+ jobWorker.getJob()+ ']',e);
    if (metricsUpdateFreq > -1L)     rejectedJobsCnt.increment();
    jobWorker.finishJob(null,e2,true);
  }
  return false;
}
