{
  if (log.isDebugEnabled())   log.debug("Marking local locks as ready for DHT lock future: " + this);
  for (int i=0; i < entries.size(); i++) {
    while (true) {
      GridDistributedCacheEntry<K,V> entry=entries.get(i);
      if (entry == null)       break;
      try {
        GridCacheMvccCandidate owner=entry.readyLock(lockVer);
        if (timeout < 0) {
          if (owner == null || !owner.version().equals(lockVer)) {
            onFailed(false);
            return;
          }
        }
        if (log.isDebugEnabled()) {
          if (!locked(entry,owner))           log.debug("Entry is not locked (will keep waiting) [entry=" + entry + ", fut="+ this+ ']');
        }
        break;
      }
 catch (      GridCacheEntryRemovedException ignored) {
        if (log.isDebugEnabled())         log.debug("Failed to ready lock because entry was removed (will renew).");
        entries.set(i,(GridDhtCacheEntry<K,V>)cctx.cache().entryEx(entry.key(),topVer));
      }
    }
  }
}
