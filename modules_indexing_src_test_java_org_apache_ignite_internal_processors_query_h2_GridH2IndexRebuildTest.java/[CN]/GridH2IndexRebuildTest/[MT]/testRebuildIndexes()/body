{
  cache().queries().rebuildIndexes(ArrayList.class).get();
  cache().queries().rebuildAllIndexes().get();
  Cache<Integer,TestValue1> cache1=grid(0).cache(null);
  Cache<Integer,TestValue2> cache2=grid(0).cache(null);
  for (int i=0; i < ENTRY_CNT; i++) {
    cache1.put(i,new TestValue1(i,"val2-" + i,i,i));
    cache2.put(ENTRY_CNT * 2 + i,new TestValue2(i,"val2-" + i));
  }
  CacheQuery<Map.Entry<Integer,TestValue1>> qry1=cache1.queries().createSqlQuery(TestValue1.class,"val1 = 9000");
  CacheQuery<Map.Entry<Integer,TestValue1>> qry2=cache1.queries().createSqlQuery(TestValue1.class,"val2 = 'val2-9000'");
  CacheQuery<Map.Entry<Integer,TestValue1>> qry3=cache1.queries().createSqlQuery(TestValue1.class,"val3 = 9000 and val4 = 9000");
  CacheQuery<Map.Entry<Integer,TestValue2>> qry4=cache2.queries().createSqlQuery(TestValue2.class,"val1 = 9000");
  CacheQuery<Map.Entry<Integer,TestValue2>> qry5=cache2.queries().createFullTextQuery(TestValue2.class,"val2 = 'val2-9000'");
  checkQueryReturnsOneEntry(qry1,qry2,qry3,qry4,qry5);
  for (int i=0; i < ENTRY_CNT / 2; i++) {
    cache1.remove(i);
    cache2.remove(ENTRY_CNT * 2 + i);
  }
  cache().queries().rebuildIndexes(TestValue1.class).get();
  cache().queries().rebuildIndexes(TestValue2.class).get();
  checkQueryReturnsOneEntry(qry1,qry2,qry3,qry4,qry5);
  cache().queries().rebuildAllIndexes().get();
  checkQueryReturnsOneEntry(qry1,qry2,qry3,qry4,qry5);
}
