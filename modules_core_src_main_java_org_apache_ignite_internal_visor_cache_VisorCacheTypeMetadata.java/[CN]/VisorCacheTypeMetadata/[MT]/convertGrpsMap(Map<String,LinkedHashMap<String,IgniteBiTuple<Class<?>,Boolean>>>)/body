{
  Map<String,LinkedHashMap<String,IgniteBiTuple<String,Boolean>>> res=new LinkedHashMap<>(base.size());
  for (  Map.Entry<String,LinkedHashMap<String,IgniteBiTuple<Class<?>,Boolean>>> e : base.entrySet()) {
    LinkedHashMap<String,IgniteBiTuple<Class<?>,Boolean>> intBase=e.getValue();
    LinkedHashMap<String,IgniteBiTuple<String,Boolean>> intRes=new LinkedHashMap<>(intBase.size());
    for (    Map.Entry<String,IgniteBiTuple<Class<?>,Boolean>> intE : intBase.entrySet()) {
      IgniteBiTuple<Class<?>,Boolean> val=intE.getValue();
      intRes.put(intE.getKey(),new IgniteBiTuple<>(U.compact(val.get1().getName()),val.get2()));
    }
    res.put(e.getKey(),intRes);
  }
  return res;
}
