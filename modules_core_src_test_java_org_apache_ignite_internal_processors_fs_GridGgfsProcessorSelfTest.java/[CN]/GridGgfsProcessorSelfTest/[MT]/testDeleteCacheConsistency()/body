{
  IgniteFsPath path=new IgniteFsPath("/someFile");
  try (IgniteFsOutputStream out=ggfs.create(path,true)){
    out.write(new byte[10 * 1024 * 1024]);
  }
   IgniteUuid fileId=U.field(ggfs.info(path),"fileId");
  Cache<IgniteUuid,GridGgfsFileInfo> metaCache=grid(0).cachex(META_CACHE_NAME);
  Cache<GridGgfsBlockKey,byte[]> dataCache=grid(0).cachex(DATA_CACHE_NAME);
  GridGgfsFileInfo info=metaCache.get(fileId);
  assertNotNull(info);
  assertTrue(info.isFile());
  assertNotNull(metaCache.get(info.id()));
  GridGgfsDataManager dataMgr=((GridGgfsEx)ggfs).context().data();
  for (int i=0; i < info.blocksCount(); i++)   assertNotNull(dataCache.get(dataMgr.blockKey(i,info)));
  ggfs.delete(path,true);
  for (int i=0; i < 25; i++) {
    if (metaCache.get(info.id()) == null)     break;
    U.sleep(100);
  }
  assertNull(metaCache.get(info.id()));
  for (int i=0; i < 10; i++) {
    boolean doBreak=true;
    for (int j=0; j < info.blocksCount(); j++) {
      if (dataCache.get(dataMgr.blockKey(i,info)) != null) {
        doBreak=false;
        break;
      }
    }
    if (doBreak)     break;
 else     Thread.sleep(100);
  }
  for (int i=0; i < info.blocksCount(); i++)   assertNull(dataCache.get(new GridGgfsBlockKey(info.id(),null,false,i)));
}
