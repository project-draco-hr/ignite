{
  final String cpKey=getClass().getName() + phrase;
  taskSes.saveCheckpoint(cpKey,true);
  return Collections.singletonList(new GridComputeJobAdapter(phrase){
    /** 
 * Injected distributed task session. 
 */
    @GridTaskSessionResource private GridComputeTaskSession jobSes;
    /** 
 * Injected grid logger. 
 */
    @GridLoggerResource private GridLogger log;
    /** 
 * The job will check the checkpoint with key '{@code fail}' and if
 * it's {@code true} it will throw exception to simulate a failure.
 * Otherwise, it will execute the grid-enabled method.
 */
    @Override public Serializable execute() throws GridException {
      Serializable cp=jobSes.loadCheckpoint(cpKey);
      if (cp == null) {
        log.warning("Checkpoint was not found. Make sure that Checkpoint SPI on all nodes " + "has the same configuration. The 'directoryPath' configuration parameter for " + "GridSharedFsCheckpointSpi on all nodes should point to the same location.");
        return -1;
      }
      boolean fail=(Boolean)cp;
      if (fail) {
        jobSes.saveCheckpoint(cpKey,false);
        throw new GridException("Expected Example job exception.");
      }
      return sayIt(this.<String>argument(0));
    }
  }
);
}
