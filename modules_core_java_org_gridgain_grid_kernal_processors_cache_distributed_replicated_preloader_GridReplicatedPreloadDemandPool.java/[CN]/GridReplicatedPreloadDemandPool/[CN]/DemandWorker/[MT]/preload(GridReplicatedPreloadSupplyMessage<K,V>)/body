{
  boolean rec=cctx.events().isRecordable(EVT_CACHE_PRELOAD_OBJECT_LOADED);
  evictLock.readLock().lock();
  try {
    for (    GridCacheEntryInfo<K,V> info : supply.entries()) {
      if (!preloadPred.apply(info)) {
        if (log.isDebugEnabled())         log.debug("Preloading is not permitted for entry: " + info);
        continue;
      }
      GridCacheEntryEx<K,V> cached=null;
      try {
        cached=cctx.cache().entryEx(info.key());
        if (cctx.cache().isGgfsDataCache() && cctx.cache().ggfsDataSpaceUsed() > cctx.cache().ggfsDataSpaceMax()) {
          LT.error(log,null,"Failed to preload GGFS data cache (GGFS space size exceeded maximum " + "value, will ignore preload entries): " + name());
          if (cached.markObsoleteIfEmpty(null))           cached.context().cache().removeIfObsolete(cached.key());
          continue;
        }
        if (cached.initialValue(info.value(),info.valueBytes(),info.version(),info.ttl(),info.expireTime(),true,DR_NONE)) {
          cctx.evicts().touch(cached);
          if (rec && !cached.isInternal())           cctx.events().addEvent(cached.partition(),cached.key(),cctx.localNodeId(),(GridUuid)null,null,EVT_CACHE_PRELOAD_OBJECT_LOADED,info.value(),true,null,false);
        }
 else         if (log.isDebugEnabled())         log.debug("Preloading entry is already in cache (will ignore): " + cached);
      }
 catch (      GridCacheEntryRemovedException ignored) {
        if (log.isDebugEnabled())         log.debug("Entry has been concurrently removed while preloading: " + cached);
      }
catch (      GridException e) {
        U.error(log,"Failed to put preloaded entry.",e);
      }
    }
  }
  finally {
    evictLock.readLock().unlock();
  }
}
