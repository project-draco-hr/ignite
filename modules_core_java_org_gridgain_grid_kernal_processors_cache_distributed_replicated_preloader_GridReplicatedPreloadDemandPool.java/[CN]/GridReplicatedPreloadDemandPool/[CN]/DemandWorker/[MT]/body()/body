{
  int preloadOrder=cctx.config().getPreloadOrder();
  if (preloadOrder > 0) {
    GridFuture<?> fut=cctx.kernalContext().cache().orderedPreloadFuture(preloadOrder);
    try {
      if (fut != null) {
        if (log.isDebugEnabled())         log.debug("Waiting for dependant caches preload [cacheName=" + cctx.name() + ", preloadOrder="+ preloadOrder+ ']');
        fut.get();
      }
    }
 catch (    GridException e) {
      U.error(log,"Failed to wait for ordered preload future [cacheName=" + cctx.name() + ", preloadOrder="+ preloadOrder+ ']',e);
    }
  }
  while (!isCancelled()) {
    GridReplicatedPreloadAssignment assign=assigns.poll(cctx.gridConfig().getNetworkTimeout(),MILLISECONDS);
    if (assign == null) {
      if (demandLock.writeLock().tryLock()) {
        try {
          cctx.deploy().unwind();
        }
  finally {
          demandLock.writeLock().unlock();
        }
      }
      continue;
    }
    demandLock.readLock().lock();
    try {
      processAssignment(assign);
    }
  finally {
      demandLock.readLock().unlock();
    }
    onAssignmentProcessed();
  }
}
