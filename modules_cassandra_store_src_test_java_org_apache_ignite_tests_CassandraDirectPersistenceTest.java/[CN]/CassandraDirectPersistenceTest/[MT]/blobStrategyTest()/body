{
  CacheStore store1=CacheStoreHelper.createCacheStore("longTypes",new ClassPathResource("org/apache/ignite/tests/persistence/blob/persistence-settings-1.xml"),CassandraHelper.getAdminDataSrc());
  CacheStore store2=CacheStoreHelper.createCacheStore("personTypes",new ClassPathResource("org/apache/ignite/tests/persistence/blob/persistence-settings-2.xml"),CassandraHelper.getAdminDataSrc());
  CacheStore store3=CacheStoreHelper.createCacheStore("personTypes",new ClassPathResource("org/apache/ignite/tests/persistence/blob/persistence-settings-3.xml"),CassandraHelper.getAdminDataSrc());
  Collection<CacheEntryImpl<Long,Long>> longEntries=TestsHelper.generateLongsEntries();
  Collection<CacheEntryImpl<Long,Person>> personEntries=TestsHelper.generateLongsPersonsEntries();
  LOGGER.info("Running BLOB strategy write tests");
  LOGGER.info("Running single write operation tests");
  store1.write(longEntries.iterator().next());
  store2.write(personEntries.iterator().next());
  store3.write(personEntries.iterator().next());
  LOGGER.info("Single write operation tests passed");
  LOGGER.info("Running bulk write operation tests");
  store1.writeAll(longEntries);
  store2.writeAll(personEntries);
  store3.writeAll(personEntries);
  LOGGER.info("Bulk write operation tests passed");
  LOGGER.info("BLOB strategy write tests passed");
  LOGGER.info("Running BLOB strategy read tests");
  LOGGER.info("Running single read operation tests");
  Long longVal=(Long)store1.load(longEntries.iterator().next().getKey());
  if (!longEntries.iterator().next().getValue().equals(longVal))   throw new RuntimeException("Long values were incorrectly deserialized from Cassandra");
  Person personVal=(Person)store2.load(personEntries.iterator().next().getKey());
  if (!personEntries.iterator().next().getValue().equals(personVal))   throw new RuntimeException("Person values were incorrectly deserialized from Cassandra");
  personVal=(Person)store3.load(personEntries.iterator().next().getKey());
  if (!personEntries.iterator().next().getValue().equals(personVal))   throw new RuntimeException("Person values were incorrectly deserialized from Cassandra");
  LOGGER.info("Single read operation tests passed");
  LOGGER.info("Running bulk read operation tests");
  Map longValues=store1.loadAll(TestsHelper.getKeys(longEntries));
  if (!TestsHelper.checkCollectionsEqual(longValues,longEntries))   throw new RuntimeException("Long values were incorrectly deserialized from Cassandra");
  Map personValues=store2.loadAll(TestsHelper.getKeys(personEntries));
  if (!TestsHelper.checkPersonCollectionsEqual(personValues,personEntries,false))   throw new RuntimeException("Person values were incorrectly deserialized from Cassandra");
  personValues=store3.loadAll(TestsHelper.getKeys(personEntries));
  if (!TestsHelper.checkPersonCollectionsEqual(personValues,personEntries,false))   throw new RuntimeException("Person values were incorrectly deserialized from Cassandra");
  LOGGER.info("Bulk read operation tests passed");
  LOGGER.info("BLOB strategy read tests passed");
  LOGGER.info("Running BLOB strategy delete tests");
  store1.delete(longEntries.iterator().next().getKey());
  store1.deleteAll(TestsHelper.getKeys(longEntries));
  store2.delete(personEntries.iterator().next().getKey());
  store2.deleteAll(TestsHelper.getKeys(personEntries));
  store3.delete(personEntries.iterator().next().getKey());
  store3.deleteAll(TestsHelper.getKeys(personEntries));
  LOGGER.info("BLOB strategy delete tests passed");
}
