{
  reader.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (state) {
case 21:
    isolation=reader.readEnum("isolation",IgniteTxIsolation.class);
  if (!reader.isLastRead())   return false;
state++;
case 22:
miniId=reader.readIgniteUuid("miniId");
if (!reader.isLastRead()) return false;
state++;
case 23:
nearNodeId=reader.readUuid("nearNodeId");
if (!reader.isLastRead()) return false;
state++;
case 24:
nearTtls=reader.readMessage("nearTtls");
if (!reader.isLastRead()) return false;
state++;
case 25:
nearWritesBytes=reader.readCollection("nearWritesBytes",byte[].class);
if (!reader.isLastRead()) return false;
state++;
case 26:
onePhaseCommit=reader.readBoolean("onePhaseCommit");
if (!reader.isLastRead()) return false;
state++;
case 27:
pendingVers=reader.readCollection("pendingVers",GridCacheVersion.class);
if (!reader.isLastRead()) return false;
state++;
case 28:
subjId=reader.readUuid("subjId");
if (!reader.isLastRead()) return false;
state++;
case 29:
sysInvalidate=reader.readBoolean("sysInvalidate");
if (!reader.isLastRead()) return false;
state++;
case 30:
taskNameHash=reader.readInt("taskNameHash");
if (!reader.isLastRead()) return false;
state++;
case 31:
topVer=reader.readLong("topVer");
if (!reader.isLastRead()) return false;
state++;
case 32:
ttls=reader.readMessage("ttls");
if (!reader.isLastRead()) return false;
state++;
case 33:
writeVer=reader.readMessage("writeVer");
if (!reader.isLastRead()) return false;
state++;
}
return true;
}
