{
  PortableMarshaller marsh=new PortableMarshaller();
  SimpleObject obj=simpleObject();
  obj.bArr=obj.inner.bArr;
  obj.cArr=obj.inner.cArr;
  obj.boolArr=obj.inner.boolArr;
  obj.sArr=obj.inner.sArr;
  obj.strArr=obj.inner.strArr;
  obj.iArr=obj.inner.iArr;
  obj.lArr=obj.inner.lArr;
  obj.fArr=obj.inner.fArr;
  obj.dArr=obj.inner.dArr;
  obj.dateArr=obj.inner.dateArr;
  obj.uuidArr=obj.inner.uuidArr;
  obj.objArr=obj.inner.objArr;
  obj.bdArr=obj.inner.bdArr;
  obj.map=obj.inner.map;
  obj.col=obj.inner.col;
  obj.mEntry=obj.inner.mEntry;
  SimpleObject res=(SimpleObject)marshalUnmarshal(obj,marsh);
  assertEquals(obj,res);
  assertTrue(res.bArr == res.inner.bArr);
  assertTrue(res.cArr == res.inner.cArr);
  assertTrue(res.boolArr == res.inner.boolArr);
  assertTrue(res.sArr == res.inner.sArr);
  assertTrue(res.strArr == res.inner.strArr);
  assertTrue(res.iArr == res.inner.iArr);
  assertTrue(res.lArr == res.inner.lArr);
  assertTrue(res.fArr == res.inner.fArr);
  assertTrue(res.dArr == res.inner.dArr);
  assertTrue(res.dateArr == res.inner.dateArr);
  assertTrue(res.uuidArr == res.inner.uuidArr);
  assertTrue(res.objArr == res.inner.objArr);
  assertTrue(res.bdArr == res.inner.bdArr);
  assertTrue(res.map == res.inner.map);
  assertTrue(res.col == res.inner.col);
  assertTrue(res.mEntry == res.inner.mEntry);
}
