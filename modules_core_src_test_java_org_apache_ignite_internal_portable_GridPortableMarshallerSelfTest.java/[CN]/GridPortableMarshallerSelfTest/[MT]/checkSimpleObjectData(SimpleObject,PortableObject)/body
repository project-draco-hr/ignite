{
  assertEquals(obj.b,(byte)po.field("b"));
  assertEquals(obj.s,(short)po.field("s"));
  assertEquals(obj.i,(int)po.field("i"));
  assertEquals(obj.l,(long)po.field("l"));
  assertEquals(obj.f,(float)po.field("f"),0);
  assertEquals(obj.d,(double)po.field("d"),0);
  assertEquals(obj.c,(char)po.field("c"));
  assertEquals(obj.bool,(boolean)po.field("bool"));
  assertEquals(obj.str,po.field("str"));
  assertEquals(obj.uuid,po.field("uuid"));
  assertEquals(obj.date,po.field("date"));
  assertEquals(Date.class,obj.date.getClass());
  assertEquals(obj.ts,po.field("ts"));
  assertArrayEquals(obj.bArr,(byte[])po.field("bArr"));
  assertArrayEquals(obj.sArr,(short[])po.field("sArr"));
  assertArrayEquals(obj.iArr,(int[])po.field("iArr"));
  assertArrayEquals(obj.lArr,(long[])po.field("lArr"));
  assertArrayEquals(obj.fArr,(float[])po.field("fArr"),0);
  assertArrayEquals(obj.dArr,(double[])po.field("dArr"),0);
  assertArrayEquals(obj.cArr,(char[])po.field("cArr"));
  assertBooleanArrayEquals(obj.boolArr,(boolean[])po.field("boolArr"));
  assertArrayEquals(obj.strArr,(String[])po.field("strArr"));
  assertArrayEquals(obj.uuidArr,(UUID[])po.field("uuidArr"));
  assertArrayEquals(obj.dateArr,(Date[])po.field("dateArr"));
  assertArrayEquals(obj.objArr,(Object[])po.field("objArr"));
  assertEquals(obj.col,po.field("col"));
  assertEquals(obj.map,po.field("map"));
  assertEquals(new Integer(obj.enumVal.ordinal()),new Integer(((Enum<?>)po.field("enumVal")).ordinal()));
  assertArrayEquals(ordinals(obj.enumArr),ordinals((Enum<?>[])po.field("enumArr")));
  assertNull(po.field("unknown"));
  assertEquals(obj,po.deserialize());
}
