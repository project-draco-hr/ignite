{
  if (initGuard.compareAndSet(false,true)) {
    if (path == null)     throw new IgniteSpiException("Shared file system path is null " + "(it should be configured via setPath(..) configuration property).");
    if (path.equals(DFLT_PATH) && warnGuard.compareAndSet(false,true))     U.warn(log,"Default local computer-only share is used by IP finder.");
    try {
      File tmp;
      if (new File(path).exists())       tmp=new File(path);
 else {
        try {
          tmp=U.resolveWorkDirectory(path,false);
        }
 catch (        IgniteCheckedException e) {
          throw new IgniteSpiException("Failed to resolve directory [path=" + path + ", exception="+ e.getMessage()+ ']');
        }
      }
      if (!tmp.isDirectory())       throw new IgniteSpiException("Failed to initialize shared file system path " + "(path must point to folder): " + path);
      if (!tmp.canRead() || !tmp.canWrite())       throw new IgniteSpiException("Failed to initialize shared file system path " + "(path must be readable and writable): " + path);
      folder=tmp;
    }
  finally {
      initLatch.countDown();
    }
  }
 else {
    try {
      U.await(initLatch);
    }
 catch (    IgniteInterruptedException e) {
      throw new IgniteSpiException("Thread has been interrupted.",e);
    }
    if (folder == null)     throw new IgniteSpiException("Failed to initialize shared file system folder (check logs for errors).");
  }
  return folder;
}
