{
  try {
    daemon=true;
    final IgniteEx daemonNode=startGrid(0);
    final IgniteInternalFuture<Object> f=GridTestUtils.runAsync(new Callable<Object>(){
      @Override public Object call() throws Exception {
        daemonNode.context().marshallerContext().getClass(1,GridCacheDaemonNodeStopSelfTest.class.getClassLoader());
        return null;
      }
    }
);
    GridTestUtils.assertThrowsWithCause(new Callable<Object>(){
      @Override public Object call() throws Exception {
        f.get(300);
        return null;
      }
    }
,IgniteFutureTimeoutCheckedException.class);
    stopGrid(0);
    GridTestUtils.assertThrowsWithCause(new Callable<Object>(){
      @Override public Object call() throws Exception {
        f.get(5,TimeUnit.SECONDS);
        return null;
      }
    }
,IllegalStateException.class);
  }
  finally {
    stopAllGrids();
  }
}
