{
  ClassLoader ldr=getExternalClassLoader();
  Class<?> keyCls=ldr.loadClass(TEST_KEY);
  try {
    depMode=SHARED;
    Grid g1=startGrid(1);
    startGrid(2);
    Constructor<?> constructor=keyCls.getDeclaredConstructor(String.class);
    Object affKey;
    int i=0;
    do {
      affKey=constructor.newInstance(String.valueOf(i));
      i++;
    }
 while (!g1.mapKeyToNode(null,affKey).id().equals(g1.localNode().id()));
    GridCache<Object,Object> cache=g1.cache(null);
    GridCacheTx tx=cache.txStartAffinity(affKey,PESSIMISTIC,REPEATABLE_READ,0,1);
    try {
      cache.put(new GridCacheAffinityKey<>("key1",affKey),"val1");
      tx.commit();
    }
  finally {
      tx.close();
    }
    assertEquals("val1",cache.get(new GridCacheAffinityKey<>("key1",affKey)));
  }
  finally {
    stopAllGrids();
  }
}
