{
  commState.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (commState.idx) {
case 3:
    byte[] entriesBytes0=commState.getByteArray();
  if (entriesBytes0 == BYTE_ARR_NOT_READ)   return false;
entriesBytes=entriesBytes0;
commState.idx++;
case 4:
byte[] errBytes0=commState.getByteArray();
if (errBytes0 == BYTE_ARR_NOT_READ) return false;
errBytes=errBytes0;
commState.idx++;
case 5:
IgniteUuid futId0=commState.getGridUuid();
if (futId0 == GRID_UUID_NOT_READ) return false;
futId=futId0;
commState.idx++;
case 6:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt();
}
if (commState.readSize >= 0) {
if (invalidParts == null) invalidParts=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
if (buf.remaining() < 4) return false;
int _val=commState.getInt();
invalidParts.add((Integer)_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 7:
IgniteUuid miniId0=commState.getGridUuid();
if (miniId0 == GRID_UUID_NOT_READ) return false;
miniId=miniId0;
commState.idx++;
case 8:
if (buf.remaining() < 8) return false;
topVer=commState.getLong();
commState.idx++;
case 9:
GridCacheVersion ver0=commState.getCacheVersion();
if (ver0 == CACHE_VER_NOT_READ) return false;
ver=ver0;
commState.idx++;
}
return true;
}
