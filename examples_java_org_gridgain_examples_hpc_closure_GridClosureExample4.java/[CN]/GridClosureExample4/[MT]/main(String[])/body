{
  try (Grid g=GridGain.start(args.length == 0 ? "examples/config/example-default.xml" : args[0])){
    String res=g.compute().call(Collections.<GridOutClosure<String>>singleton(new GridOutClosure<String>(){
      @Override public String apply(){
        StringBuilder buf=new StringBuilder();
        buf.append("OS: ").append(System.getProperty("os.name")).append(" ").append(System.getProperty("os.version")).append(" ").append(System.getProperty("os.arch")).append("\nUser: ").append(System.getProperty("user.name")).append("\nJRE: ").append(System.getProperty("java.runtime" + ".name")).append(" ").append(System.getProperty("java.runtime.version"));
        return buf.toString();
      }
    }
),new GridReducer<String,String>(){
      private StringBuilder buf=new StringBuilder();
      @Override public boolean collect(      String s){
        buf.append("\n").append(s).append("\n");
        return true;
      }
      @Override public String reduce(){
        return buf.toString();
      }
    }
).get();
    System.out.println("Nodes system information:");
    System.out.println(res);
  }
 }
