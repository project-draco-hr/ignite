{
  StringBuilder sb=new StringBuilder("set");
  sb.append(fieldName);
  sb.setCharAt(3,Character.toUpperCase(sb.charAt(3)));
  Class paramCls=val.getClass();
  while (paramCls != null) {
    try {
      Method mtd=obj.getClass().getMethod(sb.toString(),paramCls);
      mtd.invoke(obj,val);
      return true;
    }
 catch (    InvocationTargetException e) {
      throw new CacheException(e.getCause());
    }
catch (    NoSuchMethodException|IllegalAccessException ignore) {
      paramCls=paramCls.getSuperclass();
    }
  }
  for (  Class<?> itf : val.getClass().getInterfaces()) {
    try {
      Method mtd=obj.getClass().getMethod(sb.toString(),itf);
      mtd.invoke(obj,val);
      return true;
    }
 catch (    InvocationTargetException e) {
      throw new CacheException(e.getCause());
    }
catch (    NoSuchMethodException|IllegalAccessException ignore) {
    }
  }
  return false;
}
