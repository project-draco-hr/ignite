{
  customInjector=new GridResourceCustomInjector(log,ioc);
  customInjector.setExecutorInjector(execInjector);
  customInjector.setGridgainHomeInjector(ggHomeInjector);
  customInjector.setGridNameInjector(ggNameInjector);
  customInjector.setGridInjector(gridInjector);
  customInjector.setMbeanServerInjector(mbeanSrvInjector);
  customInjector.setNodeIdInjector(nodeIdInjector);
  customInjector.setMarshallerInjector(marshInjector);
  customInjector.setLogInjector(logInjector);
  customInjector.setResourceContext(rsrcCtx);
  jobInjections=new ArrayList<>(Arrays.asList(GridTaskSessionResource.class,GridJobContextResource.class,GridInstanceResource.class,GridExecutorServiceResource.class,GridLocalNodeIdResource.class,GridLocalHostResource.class,GridMBeanServerResource.class,GridHomeResource.class,GridNameResource.class,GridMarshallerResource.class,GridLoggerResource.class,GridUserResource.class));
  taskInjections=new ArrayList<>(Arrays.asList(GridTaskSessionResource.class,GridLoadBalancerResource.class,GridTaskContinuousMapperResource.class,GridInstanceResource.class,GridExecutorServiceResource.class,GridLocalNodeIdResource.class,GridLocalHostResource.class,GridMBeanServerResource.class,GridHomeResource.class,GridNameResource.class,GridMarshallerResource.class,GridLoggerResource.class,GridUserResource.class));
  for (  GridBiTuple<Class<? extends Annotation>,GridResourceInjector> t : rsrcCtx.injectors()) {
    jobInjections.add(t.get1());
    taskInjections.add(t.get1());
  }
  if (log.isDebugEnabled())   log.debug("Started resource processor.");
}
