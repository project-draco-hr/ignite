{
  Class<? extends Annotation>[] filtered=ioc.filter(dep,job,JOB_INJECTIONS);
  if (filtered.length > 0) {
    for (    Class<? extends Annotation> annCls : filtered) {
      if (annCls == IgniteTaskSessionResource.class)       injectBasicResource(job,IgniteTaskSessionResource.class,ses,dep,taskCls);
 else       if (annCls == IgniteJobContextResource.class)       ioc.inject(job,IgniteJobContextResource.class,new GridResourceJobContextInjector(jobCtx),dep,taskCls);
 else       if (annCls == IgniteInstanceResource.class)       ioc.inject(job,IgniteInstanceResource.class,gridInjector,dep,taskCls);
 else       if (annCls == IgniteSpringApplicationContextResource.class)       ioc.inject(job,IgniteSpringApplicationContextResource.class,springCtxInjector,dep,taskCls);
 else       if (annCls == IgniteSpringResource.class)       ioc.inject(job,IgniteSpringResource.class,springBeanInjector,dep,taskCls);
 else       if (annCls == IgniteLoggerResource.class)       ioc.inject(job,IgniteLoggerResource.class,logInjector,dep,taskCls);
 else       if (annCls == IgniteServiceResource.class)       ioc.inject(job,IgniteServiceResource.class,srvcInjector,dep,taskCls);
    }
  }
}
