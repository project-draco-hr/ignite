{
  IgniteCache<Integer,Integer> jcache=grid(0).jcache(null);
  long hitCount=0;
  long missCount=0;
  long putCount=0;
  boolean result=jcache.replace(1,0,10);
  ++missCount;
  assertFalse(result);
  assertEquals(missCount,cache().metrics().getCacheMisses());
  assertEquals(hitCount,cache().metrics().getCacheHits());
  assertEquals(putCount,cache().metrics().getCachePuts());
  assertFalse(jcache.containsKey(1));
  jcache.put(1,10);
  ++putCount;
  assertEquals(missCount,cache().metrics().getCacheMisses());
  assertEquals(hitCount,cache().metrics().getCacheHits());
  assertEquals(putCount,cache().metrics().getCachePuts());
  assertTrue(jcache.containsKey(1));
  result=jcache.replace(1,10,20);
  assertTrue(result);
  ++hitCount;
  ++putCount;
  assertEquals(missCount,cache().metrics().getCacheMisses());
  assertEquals(hitCount,cache().metrics().getCacheHits());
  assertEquals(putCount,cache().metrics().getCachePuts());
  result=jcache.replace(1,40,50);
  assertFalse(result);
  ++hitCount;
  assertEquals(hitCount,cache().metrics().getCacheHits());
  assertEquals(putCount,cache().metrics().getCachePuts());
  assertEquals(missCount,cache().metrics().getCacheMisses());
}
