{
  Ignite ignite0=ignite(gridCount() - 1);
  assertTrue(ignite0.configuration().isClientMode());
  Ignite ignite1=ignite(0);
  assertFalse(ignite1.configuration().isClientMode());
  Affinity<Object> aff0=ignite0.affinity(null);
  Affinity<Object> aff1=ignite1.affinity(null);
  for (int i=0; i < 100; i++) {
    TestObject1 obj1=new TestObject1(i,i + 1);
    assertEquals(aff1.mapKeyToPrimaryAndBackups(obj1),aff0.mapKeyToPrimaryAndBackups(obj1));
    TestObject2 obj2=new TestObject2(i,i + 1);
    assertEquals(aff1.mapKeyToPrimaryAndBackups(obj2),aff0.mapKeyToPrimaryAndBackups(obj2));
  }
{
    PortableBuilder builder=ignite0.portables().builder("TestObject3");
    builder.setField("f1",1);
    ignite0.cache(null).put(0,builder.build());
    IgniteCache<Integer,PortableObject> cache=ignite0.cache(null).withKeepPortable();
    PortableObject obj=cache.get(0);
    PortableMetadata meta=obj.metaData();
    assertNotNull(meta);
    assertEquals(1,meta.fields().size());
    meta=ignite0.portables().metadata(TestObject1.class);
    assertNotNull(meta);
    assertEquals("val2",meta.affinityKeyFieldName());
    meta=ignite0.portables().metadata(TestObject2.class);
    assertNotNull(meta);
    assertNull(meta.affinityKeyFieldName());
  }
{
    PortableBuilder builder=ignite1.portables().builder("TestObject3");
    builder.setField("f2",2);
    ignite1.cache(null).put(1,builder.build());
    IgniteCache<Integer,PortableObject> cache=ignite1.cache(null).withKeepPortable();
    PortableObject obj=cache.get(0);
    PortableMetadata meta=obj.metaData();
    assertNotNull(meta);
    assertEquals(2,meta.fields().size());
    meta=ignite1.portables().metadata(TestObject1.class);
    assertNotNull(meta);
    assertEquals("val2",meta.affinityKeyFieldName());
    meta=ignite1.portables().metadata(TestObject2.class);
    assertNotNull(meta);
    assertNull(meta.affinityKeyFieldName());
  }
  PortableMetadata meta=ignite0.portables().metadata("TestObject3");
  assertNotNull(meta);
  assertEquals(2,meta.fields().size());
  IgniteCache<Integer,PortableObject> cache=ignite0.cache(null).withKeepPortable();
  PortableObject obj=cache.get(1);
  assertEquals(Integer.valueOf(2),obj.field("f2"));
  assertNull(obj.field("f1"));
  meta=obj.metaData();
  assertNotNull(meta);
  assertEquals(2,meta.fields().size());
  Collection<PortableMetadata> meta1=ignite1.portables().metadata();
  Collection<PortableMetadata> meta2=ignite1.portables().metadata();
  assertEquals(meta1.size(),meta2.size());
  for (  PortableMetadata m1 : meta1) {
    boolean found=false;
    for (    PortableMetadata m2 : meta1) {
      if (m1.typeName().equals(m2.typeName())) {
        assertEquals(m1.affinityKeyFieldName(),m2.affinityKeyFieldName());
        assertEquals(m1.fields(),m2.fields());
        found=true;
        break;
      }
    }
    assertTrue(found);
  }
}
