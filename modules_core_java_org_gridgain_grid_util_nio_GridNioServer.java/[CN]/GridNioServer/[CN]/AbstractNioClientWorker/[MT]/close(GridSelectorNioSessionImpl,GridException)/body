{
  if (e != null) {
    if (e.hasCause(IOException.class))     U.warn(log,"Closing NIO session because of unhandled exception [cls=" + e.getClass() + ", msg="+ e.getMessage()+ ']');
 else     U.error(log,"Closing NIO session because of unhandled exception.",e);
  }
  sessions.remove(ses);
  SelectionKey key=ses.key();
  Socket sock=((SocketChannel)key.channel()).socket();
  if (ses.setClosed()) {
    if (directBuf) {
      if (ses.writeBuffer() != null)       ((DirectBuffer)ses.writeBuffer()).cleaner().clean();
      if (ses.readBuffer() != null)       ((DirectBuffer)ses.readBuffer()).cleaner().clean();
    }
    try {
      try {
        sock.shutdownInput();
      }
 catch (      IOException ignored) {
      }
      try {
        sock.shutdownOutput();
      }
 catch (      IOException ignored) {
      }
    }
  finally {
      U.close(key,log);
      U.close(sock,log);
    }
    if (e != null)     filterChain.onExceptionCaught(ses,e);
    try {
      filterChain.onSessionClosed(ses);
    }
 catch (    GridException e1) {
      filterChain.onExceptionCaught(ses,e1);
    }
    ses.removeMeta(BUF_META_KEY);
    NioOperationFuture<?> fut=ses.removeMeta(NIO_OPERATION.ordinal());
    if (fut != null)     fut.connectionClosed();
    while ((fut=(NioOperationFuture<?>)ses.pollFuture()) != null)     fut.connectionClosed();
    return true;
  }
  return false;
}
