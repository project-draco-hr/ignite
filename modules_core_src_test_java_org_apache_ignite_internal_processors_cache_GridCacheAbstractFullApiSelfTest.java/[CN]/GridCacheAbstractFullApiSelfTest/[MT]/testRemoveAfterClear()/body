{
  IgniteEx grid=grid(0);
  CacheDistributionMode distroMode=grid.cache(null).configuration().getDistributionMode();
  if (distroMode == CacheDistributionMode.NEAR_ONLY || distroMode == CacheDistributionMode.CLIENT_ONLY) {
    if (gridCount() < 2)     return;
    grid=grid(1);
  }
  CacheProjection<Integer,Integer> cache=grid.cache(null).projection(Integer.class,Integer.class);
  int key=0;
  List<Integer> keys=new ArrayList<>();
  for (int k=0; k < 2; k++) {
    while (!grid.cache(null).affinity().isPrimary(grid.localNode(),key))     key++;
    keys.add(key);
    key++;
  }
  System.out.println(keys);
  for (  Integer k : keys)   cache.put(k,k);
  cache.clear(keys.get(0));
  cache.clear(keys.get(1));
  for (int g=0; g < gridCount(); g++) {
    Ignite grid0=grid(g);
    grid0.cache(null).projection(Integer.class,Integer.class).removeAll();
    assertTrue(grid0.cache(null).isEmpty());
  }
}
