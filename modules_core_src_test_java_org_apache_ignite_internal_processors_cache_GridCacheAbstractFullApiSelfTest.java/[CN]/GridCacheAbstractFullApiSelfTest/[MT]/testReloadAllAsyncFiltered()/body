{
  Cache<String,Integer> cache=cache();
  Collection<String> keys=primaryKeysForCache(cache,3);
  for (  String key : keys)   assertNull(cache.get(key));
  Map<String,Integer> vals=new HashMap<>(keys.size());
  int i=0;
  for (  String key : keys) {
    cache.put(key,i);
    vals.put(key,i);
    i++;
  }
  for (  String key : keys)   assertEquals(vals.get(key),cache.peek(key));
  cache.clearAll();
  for (  String key : keys)   assertNull(cache.peek(key));
  String first=F.first(keys);
  cache.put(first,0);
  assertEquals((Integer)0,cache.peek(first));
  cache.projection(F.<String,Integer>cacheHasPeekValue()).reloadAllAsync(keys).get();
  assertEquals((Integer)0,cache.peek(first));
  for (  String key : keys) {
    if (!first.equals(key))     assertNull(cache.peek(key));
  }
}
