{
  IgniteCache<String,Integer> cache=jcache();
  IgniteTx tx=txEnabled() ? ignite(0).transactions().txStart(concurrency,READ_COMMITTED) : null;
  try {
    if (startVal)     cache.put("key",2);
 else     assertEquals(null,cache.get("key"));
    Integer expectedRes=startVal ? 2 : null;
    assertEquals(String.valueOf(expectedRes),cache.invoke("key",INCR_PROCESSOR));
    expectedRes=startVal ? 3 : 1;
    assertEquals(String.valueOf(expectedRes),cache.invoke("key",INCR_PROCESSOR));
    expectedRes++;
    assertEquals(String.valueOf(expectedRes),cache.invoke("key",INCR_PROCESSOR));
    if (tx != null)     tx.commit();
  }
  finally {
    if (tx != null)     tx.close();
  }
  Integer exp=(startVal ? 2 : 0) + 3;
  assertEquals(exp,cache.get("key"));
  for (int i=0; i < gridCount(); i++) {
    if (cache(i).affinity().isPrimaryOrBackup(grid(i).localNode(),"key"))     assertEquals(exp,peek(cache(i),"key"));
  }
}
