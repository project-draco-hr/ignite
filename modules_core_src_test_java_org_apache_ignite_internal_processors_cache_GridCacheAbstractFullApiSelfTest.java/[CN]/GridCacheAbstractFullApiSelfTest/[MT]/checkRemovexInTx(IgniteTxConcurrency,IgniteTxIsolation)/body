{
  if (txEnabled()) {
    final int cnt=10;
    CU.inTx(cache(),concurrency,isolation,new CIX1<CacheProjection<String,Integer>>(){
      @Override public void applyx(      CacheProjection<String,Integer> cache) throws IgniteCheckedException {
        for (int i=0; i < cnt; i++)         assertTrue(cache.putx("key" + i,i));
      }
    }
);
    CU.inTx(cache(),concurrency,isolation,new CIX1<CacheProjection<String,Integer>>(){
      @Override public void applyx(      CacheProjection<String,Integer> cache) throws IgniteCheckedException {
        for (int i=0; i < cnt; i++)         assertEquals(new Integer(i),cache.get("key" + i));
      }
    }
);
    CU.inTx(cache(),concurrency,isolation,new CIX1<CacheProjection<String,Integer>>(){
      @Override public void applyx(      CacheProjection<String,Integer> cache) throws IgniteCheckedException {
        for (int i=0; i < cnt; i++)         assertTrue(cache.removex("key" + i));
      }
    }
);
  }
}
