{
  final AtomicReference<GridNioSession> sesRef=new AtomicReference<>();
  final CountDownLatch connectLatch=new CountDownLatch(1);
  GridNioServerListener lsnr=new GridNioServerListenerAdapter(){
    @Override public void onConnected(    GridNioSession ses){
      info("On connected: " + ses);
      sesRef.set(ses);
      connectLatch.countDown();
    }
    @Override public void onDisconnected(    GridNioSession ses,    @Nullable Exception e){
    }
    @Override public void onMessage(    GridNioSession ses,    Object msg){
      log.info("Message: " + msg);
    }
  }
;
  GridNioServer<?> srvr=startServer(new GridPlainParser(),lsnr,5);
  try {
    Socket s=createSocket();
    s.connect(new InetSocketAddress(U.getLocalHost(),srvr.port()),1000);
    s.getOutputStream().write(new byte[1]);
    U.await(connectLatch);
    GridNioSession ses=sesRef.get();
    assertNotNull(ses);
    ses.send(new byte[1]);
    srvr.stop();
    for (int i=0; i < 10; i++)     ses.send(new byte[1]);
  }
  finally {
    srvr.stop();
  }
}
