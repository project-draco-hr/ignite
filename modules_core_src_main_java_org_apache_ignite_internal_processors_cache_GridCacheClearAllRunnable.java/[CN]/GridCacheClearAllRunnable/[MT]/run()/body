{
  Iterator<GridCacheEntryEx> iter=cache.map().stripedEntryIterator(id,totalCnt);
  while (iter.hasNext())   clearEntry(iter.next());
  if (!ctx.isNear()) {
    if (ctx.swap().offHeapEnabled()) {
      if (ctx.config().isQueryIndexEnabled()) {
        for (Iterator<Map.Entry<K,V>> it=ctx.swap().lazyOffHeapIterator(); it.hasNext(); ) {
          Map.Entry<K,V> e=it.next();
          if (owns(e.getKey()))           clearEntry(cache.entryEx(e.getKey()));
        }
      }
 else       if (id == 0)       ctx.swap().clearOffHeap();
    }
    if (ctx.isSwapOrOffheapEnabled()) {
      if (ctx.swap().swapEnabled()) {
        if (ctx.config().isQueryIndexEnabled()) {
          Iterator<Map.Entry<K,V>> it=null;
          try {
            it=ctx.swap().lazySwapIterator();
          }
 catch (          IgniteCheckedException e) {
            U.error(log,"Failed to get iterator over swap.",e);
          }
          if (it != null) {
            while (it.hasNext()) {
              Map.Entry<K,V> e=it.next();
              if (owns(e.getKey()))               clearEntry(cache.entryEx(e.getKey()));
            }
          }
        }
 else         if (id == 0) {
          try {
            ctx.swap().clearSwap();
          }
 catch (          IgniteCheckedException e) {
            U.error(log,"Failed to clearLocally entries from swap storage.",e);
          }
        }
      }
    }
  }
}
