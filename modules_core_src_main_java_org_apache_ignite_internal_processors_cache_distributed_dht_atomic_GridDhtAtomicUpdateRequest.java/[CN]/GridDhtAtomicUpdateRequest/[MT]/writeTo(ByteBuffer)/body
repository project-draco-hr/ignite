{
  writer.setBuffer(buf);
  if (!super.writeTo(buf))   return false;
  if (!typeWritten) {
    if (!writer.writeByte(null,directType()))     return false;
    typeWritten=true;
  }
switch (state) {
case 3:
    if (!writer.writeMessage("drExpireTimes",drExpireTimes))     return false;
  state++;
case 4:
if (!writer.writeCollection("drVers",drVers,GridCacheVersion.class)) return false;
state++;
case 5:
if (!writer.writeCollection("entryProcessorsBytes",entryProcessorsBytes,byte[].class)) return false;
state++;
case 6:
if (!writer.writeBoolean("forceTransformBackups",forceTransformBackups)) return false;
state++;
case 7:
if (!writer.writeMessage("futVer",futVer)) return false;
state++;
case 8:
if (!writer.writeObjectArray("invokeArgsBytes",invokeArgsBytes,byte[].class)) return false;
state++;
case 9:
if (!writer.writeCollection("keyBytes",keyBytes,byte[].class)) return false;
state++;
case 10:
if (!writer.writeCollection("nearEntryProcessorsBytes",nearEntryProcessorsBytes,byte[].class)) return false;
state++;
case 11:
if (!writer.writeMessage("nearExpireTimes",nearExpireTimes)) return false;
state++;
case 12:
if (!writer.writeCollection("nearKeyBytes",nearKeyBytes,byte[].class)) return false;
state++;
case 13:
if (!writer.writeMessage("nearTtls",nearTtls)) return false;
state++;
case 14:
if (!writer.writeCollection("nearValBytes",nearValBytes,GridCacheValueBytes.class)) return false;
state++;
case 15:
if (!writer.writeUuid("nodeId",nodeId)) return false;
state++;
case 16:
if (!writer.writeUuid("subjId",subjId)) return false;
state++;
case 17:
if (!writer.writeEnum("syncMode",syncMode)) return false;
state++;
case 18:
if (!writer.writeInt("taskNameHash",taskNameHash)) return false;
state++;
case 19:
if (!writer.writeLong("topVer",topVer)) return false;
state++;
case 20:
if (!writer.writeMessage("ttls",ttls)) return false;
state++;
case 21:
if (!writer.writeCollection("valBytes",valBytes,GridCacheValueBytes.class)) return false;
state++;
case 22:
if (!writer.writeMessage("writeVer",writeVer)) return false;
state++;
}
return true;
}
