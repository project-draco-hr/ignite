{
  try {
    if (stopping)     return null;
    final IgfsIpcCommand cmd=msg.command();
    IgniteInternalFuture<IgfsMessage> fut;
switch (cmd) {
case WRITE_BLOCK:
case MAKE_DIRECTORIES:
case LIST_FILES:
case LIST_PATHS:
{
        fut=executeSynchronously(ses,cmd,msg,in);
        break;
      }
default :
{
      try {
        final GridFutureAdapter<IgfsMessage> fut0=new GridFutureAdapter<>();
        pool.execute(new Runnable(){
          @Override public void run(){
            try {
              fut0.onDone(execute(ses,cmd,msg,in));
            }
 catch (            Exception e) {
              fut0.onDone(e);
            }
          }
        }
);
        fut=fut0;
      }
 catch (      RejectedExecutionException ignored) {
        fut=executeSynchronously(ses,cmd,msg,in);
      }
    }
}
return fut;
}
 catch (Exception e) {
return new GridFinishedFuture<>(e);
}
}
