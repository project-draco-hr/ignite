{
  try {
    startGrid("GridifySetToSetTarget");
    startGrid("GridifySetToSetTarget2");
    startGrid("GridifySetToSetTarget3");
    GridifySetToSetTarget target=new GridifySetToSetTarget();
    Collection<Long> primesInSet=target.findPrimes(Arrays.asList(2L,3L,4L,6L));
    info(">>> Prime numbers in set '" + primesInSet + "'.");
    primesInSet=target.findPrimesWithoutSplitSize(Arrays.asList(2L,3L,4L,6L));
    info(">>> Prime numbers w/o splitsize in set '" + primesInSet + "'.");
    primesInSet=target.findPrimesWithoutSplitSizeAndThreshold(Arrays.asList(2L,3L,4L,6L));
    info(">>> Prime numbers w/o splitsize and threshold in set '" + primesInSet + "'.");
    primesInSet=target.findPrimesInListWithoutSplitSizeAndThreshold(Arrays.asList(2L,3L,4L,6L));
    info(">>> Prime numbers in list w/o splitsize and threshold in set '" + primesInSet + "'.");
    primesInSet=target.findPrimesInArrayListWithoutSplitSizeAndThreshold(new ArrayList<>(Arrays.asList(2L,3L,4L,6L)));
    info(">>> Prime numbers in arraylist w/o splitsize and threshold in set '" + primesInSet + "'.");
    Long[] primesInArr=target.findPrimesInArray(new Long[]{2L,3L,4L,6L});
    info(">>> Prime numbers in array '" + Arrays.asList(primesInArr) + "'.");
    long[] primesInPrimArr=target.findPrimesInPrimitiveArray(new long[]{2L,3L,4L,6L});
    info(">>> Prime numbers in primitive array '" + primesInPrimArr + "'.");
    Iterator<Long> primesInIter=target.findPrimesWithIterator(Arrays.asList(2L,3L,4L,6L).iterator());
    info(">>> Prime numbers in iterator '" + convert(primesInIter) + "'.");
    Enumeration<Long> primesInEnum=target.findPrimesWithEnumeration(new MathEnumerationAdapter<>(Arrays.asList(2L,3L,4L,6L)));
    info(">>> Prime numbers in enumeration '" + convert(primesInEnum) + "'.");
  }
  finally {
    stopGrid("GridifySetToSetTarget");
    stopGrid("GridifySetToSetTarget2");
    stopGrid("GridifySetToSetTarget3");
  }
}
