{
  for (  Ignite g : alive) {
    log.info("Validate node: " + g.name());
    assertEquals("Unexpected nodes number for node: " + g.name(),PERM_NODES_CNT,g.cluster().nodes().size());
  }
  for (  final Ignite g : alive) {
    IgniteKernal k=(IgniteKernal)g;
    GridDiscoveryManager discoMgr=k.context().discovery();
    final Collection<ClusterNode> currTop=g.cluster().nodes();
    long currVer=discoMgr.topologyVersion();
    for (long v=currVer; v > currVer - GridDiscoveryManager.DISCOVERY_HISTORY_SIZE && v > 0; v--) {
      F.forAll(discoMgr.aliveCacheNodes(null,new AffinityTopologyVersion(v)),new IgnitePredicate<ClusterNode>(){
        @Override public boolean apply(        ClusterNode e){
          return currTop.contains(e);
        }
      }
);
      F.forAll(discoMgr.aliveRemoteCacheNodes(null,new AffinityTopologyVersion(v)),new IgnitePredicate<ClusterNode>(){
        @Override public boolean apply(        ClusterNode e){
          return currTop.contains(e) || g.cluster().localNode().equals(e);
        }
      }
);
      GridCacheSharedContext<?,?> ctx=k.context().cache().context();
      ClusterNode oldest=GridCacheUtils.oldestAliveCacheServerNode(ctx,new AffinityTopologyVersion(currVer));
      assertNotNull(oldest);
      assertTrue(currTop.contains(oldest));
    }
  }
}
