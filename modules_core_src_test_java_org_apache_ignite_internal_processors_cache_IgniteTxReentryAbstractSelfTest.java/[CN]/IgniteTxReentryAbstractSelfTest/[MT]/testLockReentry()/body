{
  startGridsMultiThreaded(gridCount(),true);
  try {
    IgniteCache<Object,Object> cache=grid(0).cache(null);
    int key=testKey();
    try (Transaction tx=grid(0).transactions().txStart(PESSIMISTIC,REPEATABLE_READ)){
      cache.get(key);
      cache.remove(key);
      tx.commit();
    }
     CountingCommunicationSpi commSpi=(CountingCommunicationSpi)grid(0).configuration().getCommunicationSpi();
    assertEquals(expectedNearLockRequests(),commSpi.nearLocks());
    assertEquals(expectedDhtLockRequests(),commSpi.dhtLocks());
    assertEquals(expectedDistributedLockRequests(),commSpi.distributedLocks());
  }
  finally {
    stopAllGrids();
  }
}
