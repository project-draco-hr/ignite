{
  long[] checkVals={32452841,32452843,32452847,32452849,236887699,217645199};
  System.out.println(">>>");
  System.out.println(">>> Starting to check the following numbers for primes: " + Arrays.toString(checkVals));
  try (Grid g=GridGain.start("examples/config/example-default.xml")){
    long start=System.currentTimeMillis();
    for (    long checkVal : checkVals) {
      Long divisor=g.compute().reduce(SPREAD,closures(g.nodes().size(),checkVal),new GridReducer<Long,Long>(){
        /** 
 * Last divisor value. 
 */
        private Long divisor;
        /** 
 * {@inheritDoc} 
 */
        @Override public boolean collect(        Long e){
          return (divisor=e) == null;
        }
        /** 
 * {@inheritDoc} 
 */
        @Override public Long apply(){
          return divisor;
        }
      }
).get();
      if (divisor == null)       System.out.println(">>> Value '" + checkVal + "' is a prime number");
 else       System.out.println(">>> Value '" + checkVal + "' is divisible by '"+ divisor+ '\'');
    }
    long totalTime=System.currentTimeMillis() - start;
    System.out.println(">>> Total time to calculate all primes (milliseconds): " + totalTime);
    System.out.println(">>>");
  }
 }
