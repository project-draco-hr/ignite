{
  Collection<SharedDeployment> undeployed=new LinkedList<>();
synchronized (mux) {
    for (Iterator<List<SharedDeployment>> i1=cache.values().iterator(); i1.hasNext(); ) {
      List<SharedDeployment> deps=i1.next();
      for (Iterator<SharedDeployment> i2=deps.iterator(); i2.hasNext(); ) {
        SharedDeployment dep=i2.next();
        if (dep.hasName(rsrcName)) {
          if (!dep.undeployed()) {
            dep.undeploy();
            dep.onRemoved();
            i2.remove();
            undeployed.add(dep);
            if (log.isInfoEnabled())             log.info("Undeployed per-version class loader: " + dep);
          }
          break;
        }
      }
      if (deps.isEmpty())       i1.remove();
    }
  }
  recordUndeployed(null,undeployed);
}
