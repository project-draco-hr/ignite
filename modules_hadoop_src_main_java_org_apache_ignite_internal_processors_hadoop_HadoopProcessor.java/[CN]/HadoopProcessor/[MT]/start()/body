{
  if (ctx.isDaemon())   return;
  HadoopConfiguration cfg=ctx.config().getHadoopConfiguration();
  if (cfg == null)   cfg=new HadoopConfiguration();
 else   cfg=new HadoopConfiguration(cfg);
  initializeDefaults(cfg);
  validate(cfg);
  try {
    HadoopLocations loc=HadoopClasspathUtils.hadoopLocations();
    if (loc.home() != null)     U.quietAndInfo(log,"HADOOP_HOME is set to " + loc.home());
    U.quietAndInfo(log,"HADOOP_COMMON_HOME is set to " + loc.commonHome());
    U.quietAndInfo(log,"HADOOP_HDFS_HOME is set to " + loc.hdfsHome());
    U.quietAndInfo(log,"HADOOP_MAPRED_HOME is set to " + loc.mapredHome());
  }
 catch (  IOException ioe) {
    throw new IgniteCheckedException(ioe);
  }
  HadoopClassLoader.hadoopUrls();
  hctx=new HadoopContext(ctx,cfg,new HadoopJobTracker(),new HadoopEmbeddedTaskExecutor(),new HadoopShuffle());
  for (  HadoopComponent c : hctx.components())   c.start(hctx);
  hadoop=new HadoopImpl(this);
}
