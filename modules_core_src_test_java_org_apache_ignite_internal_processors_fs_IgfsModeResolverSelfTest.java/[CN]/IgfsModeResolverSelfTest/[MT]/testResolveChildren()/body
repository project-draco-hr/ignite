{
  assertEquals(new HashSet<IgniteFsMode>(){
{
      add(DUAL_SYNC);
      add(PRIMARY);
      add(PROXY);
    }
  }
,resolver.resolveChildrenModes(new IgfsPath("/")));
  assertEquals(new HashSet<IgniteFsMode>(){
{
      add(DUAL_SYNC);
      add(PRIMARY);
      add(PROXY);
    }
  }
,resolver.resolveChildrenModes(new IgfsPath("/a")));
  assertEquals(new HashSet<IgniteFsMode>(){
{
      add(DUAL_SYNC);
    }
  }
,resolver.resolveChildrenModes(new IgfsPath("/a/1")));
  assertEquals(new HashSet<IgniteFsMode>(){
{
      add(PRIMARY);
      add(PROXY);
    }
  }
,resolver.resolveChildrenModes(new IgfsPath("/a/b")));
  assertEquals(new HashSet<IgniteFsMode>(){
{
      add(PRIMARY);
      add(PROXY);
    }
  }
,resolver.resolveChildrenModes(new IgfsPath("/a/b/c")));
  assertEquals(new HashSet<IgniteFsMode>(){
{
      add(PRIMARY);
    }
  }
,resolver.resolveChildrenModes(new IgfsPath("/a/b/c/2")));
  assertEquals(new HashSet<IgniteFsMode>(){
{
      add(PROXY);
    }
  }
,resolver.resolveChildrenModes(new IgfsPath("/a/b/c/d")));
  assertEquals(new HashSet<IgniteFsMode>(){
{
      add(PROXY);
    }
  }
,resolver.resolveChildrenModes(new IgfsPath("/a/b/c/d/e")));
}
