{
  final Iterator<ConcurrentMap<GridSwapKey,SwapValue>> iter=parts.values().iterator();
  return transform(F.concat(new Iterator<Iterator<Map.Entry<GridSwapKey,SwapValue>>>(){
    @Override public boolean hasNext(){
      return iter.hasNext();
    }
    @Override public Iterator<Map.Entry<GridSwapKey,SwapValue>> next(){
      return iter.next().entrySet().iterator();
    }
    @Override public void remove(){
      throw new UnsupportedOperationException();
    }
  }
));
}
