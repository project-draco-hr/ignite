{
  if (!enterBusy())   throw new IllegalStateException("Failed to get metadata (grid is stopping).");
  try {
    Callable<Collection<CacheSqlMetadata>> job=new MetadataJob();
    Collection<ClusterNode> nodes=F.view(cctx.discovery().remoteNodes(),new P1<ClusterNode>(){
      @Override public boolean apply(      ClusterNode n){
        return cctx.kernalContext().discovery().cacheAffinityNode(n,space);
      }
    }
);
    Collection<Collection<CacheSqlMetadata>> res=new ArrayList<>(nodes.size() + 1);
    IgniteInternalFuture<Collection<Collection<CacheSqlMetadata>>> rmtFut=null;
    if (!nodes.isEmpty())     rmtFut=cctx.closures().callAsyncNoFailover(BROADCAST,F.asSet(job),nodes,true);
    IgniteInternalFuture<Collection<CacheSqlMetadata>> locFut=cctx.closures().callLocalSafe(job,true);
    if (rmtFut != null)     res.addAll(rmtFut.get());
    res.add(locFut.get());
    Map<String,Collection<CacheSqlMetadata>> map=new HashMap<>();
    for (    Collection<CacheSqlMetadata> col : res) {
      for (      CacheSqlMetadata meta : col) {
        String name=meta.cacheName();
        Collection<CacheSqlMetadata> cacheMetas=map.get(name);
        if (cacheMetas == null)         map.put(name,cacheMetas=new LinkedList<>());
        cacheMetas.add(meta);
      }
    }
    Collection<GridCacheSqlMetadata> col=new ArrayList<>(map.size());
    col.add(new CacheSqlMetadata(map.remove(space)));
    for (    Collection<CacheSqlMetadata> metas : map.values())     col.add(new CacheSqlMetadata(metas));
    return col;
  }
  finally {
    leaveBusy();
  }
}
