{
  createSessionFactories(accessType);
  Map<Integer,String> idToName=new HashMap<>();
  try {
    Session ses=sesFactory1.openSession();
    try {
      Transaction tx=ses.beginTransaction();
      for (int i=0; i < 3; i++) {
        String name="name-" + i;
        ses.save(new Entity(i,name));
        idToName.put(i,name);
      }
      tx.commit();
    }
  finally {
      ses.close();
    }
    assertEntityCache(ENTITY_NAME,sesFactory2,idToName,100);
    assertEntityCache(ENTITY_NAME,sesFactory1,idToName,100);
    ses=sesFactory1.openSession();
    Transaction tx=ses.beginTransaction();
    try {
      ses.save(new Entity(3,"name-3"));
      ses.save(new Entity(0,"name-0"));
      tx.commit();
      fail("Commit must fail.");
    }
 catch (    ConstraintViolationException e) {
      log.info("Expected exception: " + e);
      tx.rollback();
    }
 finally {
      ses.close();
    }
    assertEntityCache(ENTITY_NAME,sesFactory2,idToName,3);
    assertEntityCache(ENTITY_NAME,sesFactory1,idToName,3);
    if (accessType == AccessType.READ_ONLY)     return;
    ses=sesFactory1.openSession();
    tx=ses.beginTransaction();
    try {
      Entity e0=(Entity)ses.load(Entity.class,0);
      Entity e1=(Entity)ses.load(Entity.class,1);
      e0.setName("name-10");
      e1.setName("name-2");
      ses.update(e0);
      ses.update(e1);
      tx.commit();
      fail("Commit must fail.");
    }
 catch (    ConstraintViolationException e) {
      log.info("Expected exception: " + e);
      tx.rollback();
    }
 finally {
      ses.close();
    }
    assertEntityCache(ENTITY_NAME,sesFactory2,idToName);
    assertEntityCache(ENTITY_NAME,sesFactory1,idToName);
    ses=sesFactory1.openSession();
    try {
      tx=ses.beginTransaction();
      ses.save(new ParentEntity(0,(Entity)ses.load(Entity.class,0)));
      tx.commit();
    }
  finally {
      ses.close();
    }
    ses=sesFactory1.openSession();
    tx=ses.beginTransaction();
    try {
      ses.save(new Entity(3,"name-3"));
      Entity e1=(Entity)ses.load(Entity.class,1);
      e1.setName("name-10");
      ses.delete(ses.load(Entity.class,0));
      tx.commit();
      fail("Commit must fail.");
    }
 catch (    ConstraintViolationException e) {
      log.info("Expected exception: " + e);
      tx.rollback();
    }
 finally {
      ses.close();
    }
    assertEntityCache(ENTITY_NAME,sesFactory2,idToName,3);
    assertEntityCache(ENTITY_NAME,sesFactory1,idToName,3);
    ses=sesFactory1.openSession();
    tx=ses.beginTransaction();
    try {
      ses.delete(ses.load(Entity.class,1));
      idToName.remove(1);
      ses.delete(ses.load(Entity.class,0));
      tx.commit();
      fail("Commit must fail.");
    }
 catch (    ConstraintViolationException e) {
      log.info("Expected exception: " + e);
      tx.rollback();
    }
 finally {
      ses.close();
    }
    assertEntityCache(ENTITY_NAME,sesFactory2,idToName);
    assertEntityCache(ENTITY_NAME,sesFactory1,idToName);
  }
  finally {
    cleanup();
  }
}
