{
  createSessionFactories(accessType);
  try {
    Session ses=sesFactory1.openSession();
    Map<Integer,String> idToName1=new HashMap<>();
    Map<Integer,String> idToName2=new HashMap<>();
    try {
      Transaction tx=ses.beginTransaction();
      for (int i=0; i < 2; i++) {
        String name="name-" + i;
        ses.save(new Entity(i,name));
        ses.save(new Entity2(i,name));
        idToName1.put(i,name);
        idToName2.put(i,name);
      }
      tx.commit();
    }
  finally {
      ses.close();
    }
    assertEntityCache(ENTITY_NAME,sesFactory2,idToName1,100);
    assertEntityCache(ENTITY_NAME,sesFactory1,idToName1,100);
    assertEntityCache(ENTITY2_NAME,sesFactory2,idToName2,100);
    assertEntityCache(ENTITY2_NAME,sesFactory1,idToName2,100);
    if (accessType == AccessType.READ_ONLY)     return;
    ses=sesFactory1.openSession();
    try {
      Transaction tx=ses.beginTransaction();
      Entity e=(Entity)ses.load(Entity.class,0);
      e.setName("name-0-changed1");
      ses.update(e);
      Entity2 e2=(Entity2)ses.load(Entity2.class,0);
      e2.setName("name-e2-0-changed1");
      ses.update(e2);
      idToName1.put(0,e.getName());
      idToName2.put(0,e2.getName());
      tx.commit();
    }
  finally {
      ses.close();
    }
    assertEntityCache(ENTITY_NAME,sesFactory2,idToName1,100);
    assertEntityCache(ENTITY_NAME,sesFactory1,idToName1,100);
    assertEntityCache(ENTITY2_NAME,sesFactory2,idToName2,100);
    assertEntityCache(ENTITY2_NAME,sesFactory1,idToName2,100);
    ses=sesFactory1.openSession();
    try {
      Transaction tx=ses.beginTransaction();
      Entity e=(Entity)ses.load(Entity.class,0);
      ses.delete(e);
      Entity2 e2=new Entity2(2,"name-2");
      ses.save(e2);
      idToName1.remove(0);
      idToName2.put(2,e2.getName());
      tx.commit();
    }
  finally {
      ses.close();
    }
    assertEntityCache(ENTITY_NAME,sesFactory2,idToName1,0,100);
    assertEntityCache(ENTITY_NAME,sesFactory1,idToName1,0,100);
    assertEntityCache(ENTITY2_NAME,sesFactory2,idToName2,100);
    assertEntityCache(ENTITY2_NAME,sesFactory1,idToName2,100);
    ses=sesFactory1.openSession();
    Transaction tx=ses.beginTransaction();
    try {
      Entity e=(Entity)ses.load(Entity.class,1);
      e.setName("name-1-changed1");
      ses.update(e);
      ses.save(new Entity(2,"name-2"));
      ses.delete(ses.load(Entity2.class,0));
      Entity2 e2=(Entity2)ses.load(Entity2.class,1);
      e2.setName("name-2");
      ses.update(e2);
      tx.commit();
      fail("Commit must fail.");
    }
 catch (    ConstraintViolationException e) {
      log.info("Expected exception: " + e);
      tx.rollback();
    }
 finally {
      ses.close();
    }
    assertEntityCache(ENTITY_NAME,sesFactory2,idToName1,0,2,100);
    assertEntityCache(ENTITY_NAME,sesFactory1,idToName1,0,2,100);
    assertEntityCache(ENTITY2_NAME,sesFactory2,idToName2,100);
    assertEntityCache(ENTITY2_NAME,sesFactory1,idToName2,100);
    ses=sesFactory2.openSession();
    try {
      tx=ses.beginTransaction();
      Entity e=(Entity)ses.load(Entity.class,1);
      e.setName("name-1-changed1");
      ses.update(e);
      idToName1.put(1,e.getName());
      ses.save(new Entity(2,"name-2"));
      idToName1.put(2,"name-2");
      ses.delete(ses.load(Entity2.class,0));
      idToName2.remove(0);
      Entity2 e2=(Entity2)ses.load(Entity2.class,1);
      e2.setName("name-e2-2-changed");
      ses.update(e2);
      idToName2.put(1,e2.getName());
      tx.commit();
    }
  finally {
      ses.close();
    }
    assertEntityCache(ENTITY_NAME,sesFactory2,idToName1,0,100);
    assertEntityCache(ENTITY_NAME,sesFactory1,idToName1,0,100);
    assertEntityCache(ENTITY2_NAME,sesFactory2,idToName2,0,100);
    assertEntityCache(ENTITY2_NAME,sesFactory1,idToName2,0,100);
  }
  finally {
    cleanup();
  }
}
