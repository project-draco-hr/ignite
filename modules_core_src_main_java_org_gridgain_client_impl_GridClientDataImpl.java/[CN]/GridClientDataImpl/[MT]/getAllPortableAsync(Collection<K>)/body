{
  A.notNull(keys,"keys");
  if (keys.isEmpty())   return new GridClientFutureAdapter<>(Collections.<K,GridPortableObject<V>>emptyMap());
  K key=GridClientUtils.first(keys);
  return withReconnectHandling(new ClientProjectionClosure<Map<K,GridPortableObject<V>>>(){
    @Override public GridClientFuture<Map<K,GridPortableObject<V>>> apply(    GridClientConnection conn,    UUID destNodeId) throws GridClientConnectionResetException, GridClientClosedException {
      return conn.cacheGetAll(cacheName,(Collection<Object>)keys,flags,destNodeId).chain(new GridClientFutureCallback<Map<Object,Object>,Map<K,GridPortableObject<V>>>(){
        @Override public Map<K,GridPortableObject<V>> onComplete(        GridClientFuture<Map<Object,Object>> fut) throws GridClientException {
          Map<Object,Object> map=fut.get();
          Map<K,GridPortableObject<V>> res=null;
          if (map != null) {
            res=new HashMap<>(map.size());
            for (            Map.Entry<Object,Object> e : map.entrySet()) {
              Object key=e.getKey();
              try {
                if (key instanceof GridPortableObject)                 key=((GridPortableObject)key).deserialize();
              }
 catch (              GridPortableException ex) {
                throw new GridClientException("Failed to deserialize portable object.",ex);
              }
              res.put((K)key,(GridPortableObject<V>)e.getValue());
            }
          }
          return res;
        }
      }
);
    }
  }
,cacheName,key);
}
