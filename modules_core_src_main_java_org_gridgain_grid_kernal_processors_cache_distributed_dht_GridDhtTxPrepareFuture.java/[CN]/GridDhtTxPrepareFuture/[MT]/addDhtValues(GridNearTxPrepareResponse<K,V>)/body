{
  if (!F.isEmpty(writes)) {
    for (    GridCacheTxEntry<K,V> e : writes) {
      GridCacheTxEntry<K,V> txEntry=tx.entry(e.txKey());
      while (true) {
        try {
          GridCacheEntryEx<K,V> entry=txEntry.cached();
          GridCacheVersion dhtVer=entry.version();
          V val0=null;
          byte[] valBytes0=null;
          GridCacheValueBytes valBytesTuple=entry.valueBytes();
          if (!valBytesTuple.isNull()) {
            if (valBytesTuple.isPlain())             val0=(V)valBytesTuple.get();
 else             valBytes0=valBytesTuple.get();
          }
 else           val0=entry.rawGet();
          res.addOwnedValue(txEntry.txKey(),dhtVer,val0,valBytes0);
          break;
        }
 catch (        GridCacheEntryRemovedException ignored) {
        }
      }
    }
  }
  for (  Map.Entry<GridCacheTxKey<K>,GridCacheVersion> ver : dhtVerMap.entrySet()) {
    GridCacheTxEntry<K,V> txEntry=tx.entry(ver.getKey());
    if (res.hasOwnedValue(ver.getKey()))     continue;
    while (true) {
      try {
        GridCacheEntryEx<K,V> entry=txEntry.cached();
        GridCacheVersion dhtVer=entry.version();
        if (ver.getValue() == null || !ver.getValue().equals(dhtVer)) {
          V val0=null;
          byte[] valBytes0=null;
          GridCacheValueBytes valBytesTuple=entry.valueBytes();
          if (!valBytesTuple.isNull()) {
            if (valBytesTuple.isPlain())             val0=(V)valBytesTuple.get();
 else             valBytes0=valBytesTuple.get();
          }
 else           val0=entry.rawGet();
          res.addOwnedValue(txEntry.txKey(),dhtVer,val0,valBytes0);
        }
        break;
      }
 catch (      GridCacheEntryRemovedException ignored) {
      }
    }
  }
}
