{
  Collection<GridDeployment> doomed=new HashSet<>();
synchronized (mux) {
    for (Iterator<ConcurrentLinkedDeque8<GridDeployment>> i1=cache.values().iterator(); i1.hasNext(); ) {
      ConcurrentLinkedDeque8<GridDeployment> deps=i1.next();
      for (Iterator<GridDeployment> i2=deps.iterator(); i2.hasNext(); ) {
        GridDeployment dep=i2.next();
        if (dep.classLoader() == ldr) {
          dep.undeploy();
          i2.remove();
          doomed.add(dep);
          if (log.isInfoEnabled())           log.info("Removed undeployed class: " + dep);
        }
      }
      if (deps.isEmpty())       i1.remove();
    }
  }
  for (  GridDeployment dep : doomed) {
    if (dep.obsolete()) {
      ctx.resource().onUndeployed(dep);
      if (ctx.config().getMarshaller() instanceof OptimizedMarshaller)       ((OptimizedMarshaller)ctx.config().getMarshaller()).onUndeploy(ldr);
      clearSerializationCaches();
      GridAnnotationsCache.onUndeployed(ldr);
      GridClassLoaderCache.onUndeployed(ldr);
    }
    recordUndeploy(dep);
  }
}
