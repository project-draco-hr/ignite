{
  return new RecordReader<Text,NullWritable>(){
    /** 
 */
    int cnt;
    Text txt=new Text();
    @Override public void initialize(    InputSplit split,    TaskAttemptContext context) throws IOException, InterruptedException {
    }
    @Override public boolean nextKeyValue() throws IOException, InterruptedException {
      return ++cnt < split.getLength();
    }
    @Override public Text getCurrentKey() throws IOException, InterruptedException {
      txt.set(UUID.randomUUID().toString());
      return txt;
    }
    @Override public NullWritable getCurrentValue() throws IOException, InterruptedException {
      return NullWritable.get();
    }
    @Override public float getProgress() throws IOException, InterruptedException {
      return (float)cnt / split.getLength();
    }
    @Override public void close() throws IOException {
    }
  }
;
}
