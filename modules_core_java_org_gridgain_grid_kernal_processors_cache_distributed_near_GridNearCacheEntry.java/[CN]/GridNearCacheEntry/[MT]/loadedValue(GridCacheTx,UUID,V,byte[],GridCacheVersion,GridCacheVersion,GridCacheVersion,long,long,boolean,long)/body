{
  if (valBytes != null && val == null && isNewLocked(topVer))   val=cctx.marshaller().<V>unmarshal(valBytes,cctx.deploy().globalLoader());
synchronized (this) {
    checkObsolete();
    cctx.cache().metrics0().onRead(false);
    boolean ret=false;
    V old=this.val;
    boolean hasVal=hasValueUnlocked();
    if (isNew(topVer) || !valid(topVer) || expVer == null || expVer.equals(this.dhtVer)) {
      this.primaryNodeId=primaryNodeId;
      refreshingLocked(false);
      if (!dhtVer.equals(dhtVersion())) {
        update(val,valBytes,expireTime,ttl,ver);
        recordDhtVersion(dhtVer);
        ret=true;
      }
    }
    if (evt && cctx.events().isRecordable(EVT_CACHE_OBJECT_READ))     cctx.events().addEvent(partition(),key,tx,null,EVT_CACHE_OBJECT_READ,val,val != null || valBytes != null,old,hasVal);
    return ret;
  }
}
