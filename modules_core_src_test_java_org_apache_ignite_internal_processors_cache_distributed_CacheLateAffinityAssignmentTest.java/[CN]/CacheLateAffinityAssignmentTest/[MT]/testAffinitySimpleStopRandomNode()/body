{
  final int ITERATIONS=3;
  for (int iter=0; iter < 3; iter++) {
    log.info("Iteration: " + iter);
    final int NODES=5;
    for (int i=0; i < NODES; i++)     startServer(i,i + 1);
    int majorVer=NODES;
    checkAffinity(majorVer,topVer(majorVer,1),true);
    Set<Integer> stopOrder=new HashSet<>();
    while (stopOrder.size() != NODES - 1)     stopOrder.add(ThreadLocalRandom.current().nextInt(NODES));
    int nodes=NODES;
    for (    Integer idx : stopOrder) {
      log.info("Stop node: " + idx);
      majorVer++;
      stopNode(idx,majorVer);
      checkAffinity(--nodes,topVer(majorVer,0),false);
      awaitPartitionMapExchange();
    }
    if (iter < ITERATIONS - 1) {
      stopAllGrids();
      idealAff.clear();
    }
  }
}
