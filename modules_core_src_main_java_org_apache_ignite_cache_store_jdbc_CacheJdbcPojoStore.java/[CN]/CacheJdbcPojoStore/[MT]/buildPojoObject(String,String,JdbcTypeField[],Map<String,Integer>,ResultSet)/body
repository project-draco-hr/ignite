{
  Map<String,PojoPropertiesCache> cacheProps=pojosProps.get(cacheName);
  if (cacheProps == null)   throw new CacheLoaderException("Failed to find POJO types metadata for cache: " + U.maskName(cacheName));
  PojoPropertiesCache ppc=cacheProps.get(typeName);
  if (ppc == null)   throw new CacheLoaderException("Failed to find POJO type metadata for type: " + typeName);
  try {
    Object obj=ppc.ctor.newInstance();
    for (    JdbcTypeField fld : flds) {
      String fldJavaName=fld.getJavaFieldName();
      ClassProperty prop=ppc.props.get(fldJavaName);
      if (prop == null)       throw new IllegalStateException("Failed to find property in POJO class [type=" + typeName + ", prop="+ fldJavaName+ "]");
      String dbName=fld.getDatabaseFieldName();
      Integer colIdx=columnIndex(loadColIdxs,dbName);
      try {
        Object colVal=transformer.getColumnValue(rs,colIdx,fld.getJavaFieldType());
        try {
          prop.set(obj,colVal);
        }
 catch (        Exception e) {
          throw new CacheLoaderException("Failed to set property in POJO class [type=" + typeName + ", prop="+ fldJavaName+ ", col="+ colIdx+ ", dbName="+ dbName+ "]",e);
        }
      }
 catch (      SQLException e) {
        throw new CacheLoaderException("Failed to read object property [type= " + typeName + ", prop="+ fldJavaName+ ", col="+ colIdx+ ", dbName="+ dbName+ "]",e);
      }
    }
    return obj;
  }
 catch (  Exception e) {
    throw new CacheLoaderException("Failed to construct instance of class: " + typeName,e);
  }
}
