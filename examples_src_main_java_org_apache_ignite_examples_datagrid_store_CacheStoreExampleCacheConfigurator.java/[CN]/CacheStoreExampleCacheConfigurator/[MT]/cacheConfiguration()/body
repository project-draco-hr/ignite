{
  CacheConfiguration<Long,Person> cacheCfg=new CacheConfiguration<>();
  cacheCfg.setAtomicityMode(TRANSACTIONAL);
  cacheCfg.setCacheStoreFactory(new Factory<CacheStore<? super Long,? super Person>>(){
    @Override public CacheStore<? super Long,? super Person> create(){
      CacheStore<Long,Person> store;
switch (STORE) {
case DUMMY:
        store=new CacheDummyPersonStore();
      break;
case SIMPLE_JDBC:
    store=new CacheJdbcPersonStore();
  break;
case HIBERNATE:
store=new CacheHibernatePersonStore();
break;
case AUTO:
store=new CacheJdbcPojoPersonStore();
break;
default :
throw new IllegalStateException("Unexpected store configured: " + STORE);
}
return store;
}
}
);
if (STORE.equals(AUTO)) cacheCfg.setTypeMetadata(typeMetadata());
cacheCfg.setReadThrough(true);
cacheCfg.setWriteThrough(true);
return cacheCfg;
}
