{
  try (Grid g=GridGain.start("examples/config/example-compute.xml")){
    if (!ExamplesUtils.checkMinTopologySize(g,2))     return;
    System.out.println();
    System.out.println(">>> Messaging ping-pong listen actor example started.");
    Collection<GridNode> rmtNodes=g.forRemotes().nodes();
    GridProjection nodeB=g.forNode(rmtNodes.iterator().next());
    nodeB.message().remoteListen(null,new GridMessagingListenActor<String>(){
      @Override public void receive(      UUID nodeId,      String rcvMsg) throws GridException {
        System.out.println(rcvMsg);
        if ("PING".equals(rcvMsg))         respond("PONG");
 else         if ("STOP".equals(rcvMsg))         stop();
      }
    }
).get();
    int MAX_PLAYS=10;
    final CountDownLatch cnt=new CountDownLatch(MAX_PLAYS);
    g.message().localListen(null,new GridMessagingListenActor<String>(){
      @Override protected void receive(      UUID nodeId,      String rcvMsg) throws GridException {
        System.out.println(rcvMsg);
        if (cnt.getCount() == 1)         stop("STOP");
 else         if ("PONG".equals(rcvMsg))         respond("PING");
        cnt.countDown();
      }
    }
);
    nodeB.message().send(null,"PING");
    try {
      cnt.await();
    }
 catch (    InterruptedException e) {
      System.err.println("Hm... let us finish the game!\n" + e);
    }
  }
 }
