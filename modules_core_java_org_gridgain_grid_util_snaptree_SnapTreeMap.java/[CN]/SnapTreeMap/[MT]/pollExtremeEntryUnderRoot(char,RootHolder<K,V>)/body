{
  while (true) {
    final Node<K,V> right=holder.unsharedRight();
    if (right == null) {
      return null;
    }
 else {
      final long ovl=right.shrinkOVL;
      if (isShrinkingOrUnlinked(ovl)) {
        right.waitUntilShrinkCompleted(ovl);
      }
 else       if (right == holder.right) {
        final Map.Entry<K,V> result=attemptRemoveExtreme(dir,holder,right,ovl);
        if (result != SpecialRetry) {
          return result;
        }
      }
    }
  }
}
