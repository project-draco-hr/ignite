{
  startUpSecondary();
  GridGgfsConfiguration ggfsCfg=new GridGgfsConfiguration();
  ggfsCfg.setDataCacheName("partitioned");
  ggfsCfg.setMetaCacheName("replicated");
  ggfsCfg.setName("ggfs");
  ggfsCfg.setBlockSize(512 * 1024);
  if (setNullMode)   ggfsCfg.setDefaultMode(null);
 else   if (mode != null)   ggfsCfg.setDefaultMode(mode);
  ggfsCfg.setPathModes(pathModes);
  if (setSecondaryFs) {
    ggfsCfg.setSecondaryFileSystem(new GridGgfsHadoopFileSystemWrapper("ggfs://ggfs-secondary:ggfs-grid-secondary@127.0.0.1:11500/",setSecondaryFsCfg ? "modules/core/src/test/config/hadoop/core-site-loopback-secondary.xml" : null));
  }
  GridCacheConfiguration cacheCfg=defaultCacheConfiguration();
  cacheCfg.setName("partitioned");
  cacheCfg.setCacheMode(PARTITIONED);
  cacheCfg.setDistributionMode(GridCacheDistributionMode.PARTITIONED_ONLY);
  cacheCfg.setWriteSynchronizationMode(GridCacheWriteSynchronizationMode.FULL_SYNC);
  cacheCfg.setAffinityMapper(new GridGgfsGroupDataBlocksKeyMapper(128));
  cacheCfg.setBackups(0);
  cacheCfg.setQueryIndexEnabled(false);
  cacheCfg.setAtomicityMode(TRANSACTIONAL);
  GridCacheConfiguration metaCacheCfg=defaultCacheConfiguration();
  metaCacheCfg.setName("replicated");
  metaCacheCfg.setCacheMode(REPLICATED);
  metaCacheCfg.setWriteSynchronizationMode(GridCacheWriteSynchronizationMode.FULL_SYNC);
  metaCacheCfg.setQueryIndexEnabled(false);
  metaCacheCfg.setAtomicityMode(TRANSACTIONAL);
  GridConfiguration cfg=new GridConfiguration();
  cfg.setGridName("ggfs-grid");
  GridTcpDiscoverySpi discoSpi=new GridTcpDiscoverySpi();
  discoSpi.setIpFinder(new GridTcpDiscoveryVmIpFinder(true));
  cfg.setDiscoverySpi(discoSpi);
  cfg.setCacheConfiguration(metaCacheCfg,cacheCfg);
  cfg.setGgfsConfiguration(ggfsCfg);
  cfg.setLocalHost("127.0.0.1");
  cfg.setRestEnabled(false);
  grid=(GridEx)G.start(cfg);
  ggfs=(GridGgfsImpl)grid.ggfs("ggfs");
}
