{
  List<GridH2Index> idxsBefore=tbl.indexes();
  assertEquals(3,idxsBefore.size());
  Random rnd=new Random();
  for (int i=0; i < MAX_X; i++) {
    UUID id=UUID.randomUUID();
    GridH2Row row=row(id,System.currentTimeMillis(),rnd.nextBoolean() ? id.toString() : UUID.randomUUID().toString(),rnd.nextInt(100));
    tbl.doUpdate(row,false);
  }
  for (  GridH2Index idx : idxsBefore)   assertEquals(MAX_X,idx.getRowCountApproximation());
  tbl.rebuildIndexes();
  List<GridH2Index> idxsAfter=tbl.indexes();
  assertEquals(3,idxsAfter.size());
  for (int i=0; i < 3; i++) {
    GridH2Index idxBefore=idxsBefore.get(i);
    GridH2Index idxAfter=idxsAfter.get(i);
    assertNotSame(idxBefore,idxAfter);
    assertEquals(idxBefore.getName(),idxAfter.getName());
    assertSame(idxBefore.getTable(),idxAfter.getTable());
    assertEquals(idxBefore.getRowCountApproximation(),idxAfter.getRowCountApproximation());
    assertEquals(idxBefore.getIndexType().isUnique(),idxAfter.getIndexType().isUnique());
    Assert.assertArrayEquals(idxBefore.getColumns(),idxAfter.getColumns());
  }
}
