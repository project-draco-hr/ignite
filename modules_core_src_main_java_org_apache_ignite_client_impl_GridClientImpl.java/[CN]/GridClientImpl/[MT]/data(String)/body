{
  checkClosed();
  Object key=maskNull(cacheName);
  GridClientDataImpl data=dataMap.get(key);
  if (data == null) {
    GridClientDataConfiguration dataCfg=cfg.getDataConfiguration(cacheName);
    if (dataCfg == null && cacheName != null)     throw new GridClientException("Data configuration for given cache name was not provided: " + cacheName);
    GridClientLoadBalancer balancer=dataCfg != null ? dataCfg.getPinnedBalancer() : new GridClientRandomBalancer();
    GridClientPredicate<GridClientNode> cacheNodes=new GridClientPredicate<GridClientNode>(){
      @Override public boolean apply(      GridClientNode e){
        return e.caches().containsKey(cacheName);
      }
      @Override public String toString(){
        return "GridClientHasCacheFilter [cacheName=" + cacheName + "]";
      }
    }
;
    data=new GridClientDataImpl(cacheName,this,null,cacheNodes,balancer,null,cfg.isEnableMetricsCache());
    GridClientDataImpl old=dataMap.putIfAbsent(key,data);
    if (old != null)     data=old;
  }
  return data;
}
