{
  writer.setBuffer(buf);
  if (!super.writeTo(buf))   return false;
  if (!typeWritten) {
    if (!writer.writeByte(null,directType()))     return false;
    typeWritten=true;
  }
switch (state) {
case 24:
    if (!writer.writeLong("accessTtl",accessTtl))     return false;
  state++;
case 25:
if (!writer.writeBitSet("invalidateEntries",invalidateEntries)) return false;
state++;
case 26:
if (!writer.writeIgniteUuid("miniId",miniId)) return false;
state++;
case 27:
if (!writer.writeCollection("nearKeyBytes",nearKeyBytes,byte[].class)) return false;
state++;
case 28:
if (!writer.writeByteArray("ownedBytes",ownedBytes)) return false;
state++;
case 29:
if (!writer.writeBitSet("preloadKeys",preloadKeys)) return false;
state++;
case 30:
if (!writer.writeUuid("subjId",subjId)) return false;
state++;
case 31:
if (!writer.writeInt("taskNameHash",taskNameHash)) return false;
state++;
case 32:
if (!writer.writeLong("topVer",topVer)) return false;
state++;
}
return true;
}
