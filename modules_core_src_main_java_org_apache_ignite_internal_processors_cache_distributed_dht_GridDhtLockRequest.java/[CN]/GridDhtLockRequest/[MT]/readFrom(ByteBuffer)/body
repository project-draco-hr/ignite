{
  reader.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (state) {
case 24:
    accessTtl=reader.readLong("accessTtl");
  if (!reader.isLastRead())   return false;
state++;
case 25:
invalidateEntries=reader.readBitSet("invalidateEntries");
if (!reader.isLastRead()) return false;
state++;
case 26:
miniId=reader.readIgniteUuid("miniId");
if (!reader.isLastRead()) return false;
state++;
case 27:
nearKeyBytes=reader.readCollection("nearKeyBytes",byte[].class);
if (!reader.isLastRead()) return false;
state++;
case 28:
ownedBytes=reader.readByteArray("ownedBytes");
if (!reader.isLastRead()) return false;
state++;
case 29:
preloadKeys=reader.readBitSet("preloadKeys");
if (!reader.isLastRead()) return false;
state++;
case 30:
subjId=reader.readUuid("subjId");
if (!reader.isLastRead()) return false;
state++;
case 31:
taskNameHash=reader.readInt("taskNameHash");
if (!reader.isLastRead()) return false;
state++;
case 32:
topVer=reader.readLong("topVer");
if (!reader.isLastRead()) return false;
state++;
}
return true;
}
