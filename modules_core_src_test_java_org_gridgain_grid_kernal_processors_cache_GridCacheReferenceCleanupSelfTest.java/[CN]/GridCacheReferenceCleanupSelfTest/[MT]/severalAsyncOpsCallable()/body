{
  return new Callable<Collection<WeakReference<Object>>>(){
    @Override public Collection<WeakReference<Object>> call() throws Exception {
      Collection<WeakReference<Object>> refs=new ArrayList<>();
      Ignite g=startGrid();
      try {
        GridCache<Integer,TestValue> cache=g.cache(null);
        refs.add(new WeakReference<Object>(cacheContext(cache)));
        Collection<GridFuture<?>> futs=new ArrayList<>(1000);
        for (int i=0; i < 1000; i++) {
          TestValue val=new TestValue(i);
          refs.add(new WeakReference<Object>(val));
          futs.add(cache.putxAsync(i,val));
        }
        for (        GridFuture<?> fut : futs)         fut.get();
      }
  finally {
        G.stop(g.name(),cancel);
      }
      return refs;
    }
  }
;
}
