{
  return new Callable<Collection<WeakReference<Object>>>(){
    @Override public Collection<WeakReference<Object>> call() throws Exception {
      Collection<WeakReference<Object>> refs=new ArrayList<>();
      Grid g=startGrid();
      try {
        GridCache<Integer,TestValue> cache=g.cache(null);
        refs.add(new WeakReference<Object>(cacheContext(cache)));
        Map<Integer,TestValue> m=new HashMap<>();
        for (int i=0; i < 10; i++) {
          TestValue val=new TestValue(i);
          refs.add(new WeakReference<Object>(val));
          m.put(i,val);
          cache.dataStructures().atomicLong("testLong" + i,0,true).incrementAndGet();
        }
        cache.putAll(m);
      }
  finally {
        G.stop(g.name(),cancel);
      }
      return refs;
    }
  }
;
}
