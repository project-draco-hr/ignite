{
  try {
    long start=U.currentTimeMillis();
    streamerHolder.onStageExecutionStarted(stageWrapper.index(),start - schedTs);
    long end=0;
    try {
      if (log.isDebugEnabled())       log.debug("Running streamer stage [stage=" + stageWrapper.name() + ", futId="+ batch.futureId()+ ']');
      GridStreamerContext ctxDelegate=new GridStreamerContextDelegate(context(),stageWrapper.nextStageName());
      winLock.readLock();
      Map<String,Collection<?>> res;
      try {
        res=stageWrapper.run(ctxDelegate,batch.events());
      }
  finally {
        winLock.readUnlock();
      }
      GridDeployment dep=batch.deployment();
      if (dep != null && dep.obsolete())       unwindUndeploys(dep.classLoader(),false);
      if (res != null) {
        for (        Map.Entry<String,Collection<?>> entry : res.entrySet()) {
          if (entry.getKey() == null)           throw new GridException("Failed to pass events to next stage " + "(stage name cannot be null).");
          GridStreamerStageExecutionFuture part=addEvents0(batch.executionId(),0,batch.executionStartTimeStamp(),batch.futureId(),batch.executionNodeIds(),entry.getKey(),entry.getValue());
          if (atLeastOnce)           fut.add(part);
        }
      }
 else {
        if (log.isDebugEnabled())         log.debug("Finished pipeline execution [stage=" + stageWrapper.name() + ", futId="+ batch.futureId()+ ']');
        end=U.currentTimeMillis();
        streamerHolder.onPipelineCompleted(end - batch.executionStartTimeStamp(),batch.executionNodeIds().size());
      }
    }
 catch (    GridException e) {
      if (!atLeastOnce) {
        notifyFailure(batch.stageName(),batch.events(),e);
        streamerHolder.onStageFailure(stageWrapper.index());
      }
      fut.onDone(e);
    }
 finally {
      if (end == 0)       end=U.currentTimeMillis();
      streamerHolder.onStageExecutionFinished(stageWrapper.index(),end - start);
    }
  }
  finally {
    fut.markInitialized();
  }
}
