{
  GridCacheTxRecoveryResponse res=new GridCacheTxRecoveryResponse(req.version(),req.futureId(),req.miniId(),prepared,req.deployInfo() != null);
  try {
    ctx.io().send(nodeId,res,req.system() ? UTILITY_CACHE_POOL : SYSTEM_POOL);
    if (txRecoveryMsgLog.isDebugEnabled()) {
      txRecoveryMsgLog.debug("Sent tx recovery response [txId=" + req.nearXidVersion() + ", node="+ nodeId+ ", res="+ res+ ']');
    }
  }
 catch (  ClusterTopologyCheckedException ignored) {
    if (txRecoveryMsgLog.isDebugEnabled())     txRecoveryMsgLog.debug("Failed to send tx recovery response, node failed [" + ", txId=" + req.nearXidVersion() + ", node="+ nodeId+ ", res="+ res+ ']');
  }
catch (  IgniteCheckedException e) {
    U.error(txRecoveryMsgLog,"Failed to send tx recovery response [txId=" + req.nearXidVersion() + ", node="+ nodeId+ ", req="+ req+ ", res="+ res+ ']',e);
  }
}
