{
  this.ctx=ctx;
  log=ctx.logger(IgniteTxHandler.class);
  txRecoveryMsgLog=ctx.logger(CU.TX_MSG_RECOVERY_LOG_CATEGORY);
  txPrepareMsgLog=ctx.logger(CU.TX_MSG_PREPARE_LOG_CATEGORY);
  txFinishMsgLog=ctx.logger(CU.TX_MSG_FINISH_LOG_CATEGORY);
  ctx.io().addHandler(0,GridNearTxPrepareRequest.class,new CI2<UUID,GridCacheMessage>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage msg){
      processNearTxPrepareRequest(nodeId,(GridNearTxPrepareRequest)msg);
    }
  }
);
  ctx.io().addHandler(0,GridNearTxPrepareResponse.class,new CI2<UUID,GridCacheMessage>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage msg){
      processNearTxPrepareResponse(nodeId,(GridNearTxPrepareResponse)msg);
    }
  }
);
  ctx.io().addHandler(0,GridNearTxFinishRequest.class,new CI2<UUID,GridCacheMessage>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage msg){
      processNearTxFinishRequest(nodeId,(GridNearTxFinishRequest)msg);
    }
  }
);
  ctx.io().addHandler(0,GridNearTxFinishResponse.class,new CI2<UUID,GridCacheMessage>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage msg){
      processNearTxFinishResponse(nodeId,(GridNearTxFinishResponse)msg);
    }
  }
);
  ctx.io().addHandler(0,GridDhtTxPrepareRequest.class,new CI2<UUID,GridCacheMessage>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage msg){
      processDhtTxPrepareRequest(nodeId,(GridDhtTxPrepareRequest)msg);
    }
  }
);
  ctx.io().addHandler(0,GridDhtTxPrepareResponse.class,new CI2<UUID,GridCacheMessage>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage msg){
      processDhtTxPrepareResponse(nodeId,(GridDhtTxPrepareResponse)msg);
    }
  }
);
  ctx.io().addHandler(0,GridDhtTxFinishRequest.class,new CI2<UUID,GridCacheMessage>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage msg){
      processDhtTxFinishRequest(nodeId,(GridDhtTxFinishRequest)msg);
    }
  }
);
  ctx.io().addHandler(0,GridDhtTxOnePhaseCommitAckRequest.class,new CI2<UUID,GridCacheMessage>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage msg){
      processDhtTxOnePhaseCommitAckRequest(nodeId,(GridDhtTxOnePhaseCommitAckRequest)msg);
    }
  }
);
  ctx.io().addHandler(0,GridDhtTxFinishResponse.class,new CI2<UUID,GridCacheMessage>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage msg){
      processDhtTxFinishResponse(nodeId,(GridDhtTxFinishResponse)msg);
    }
  }
);
  ctx.io().addHandler(0,GridCacheTxRecoveryRequest.class,new CI2<UUID,GridCacheTxRecoveryRequest>(){
    @Override public void apply(    UUID nodeId,    GridCacheTxRecoveryRequest req){
      processCheckPreparedTxRequest(nodeId,req);
    }
  }
);
  ctx.io().addHandler(0,GridCacheTxRecoveryResponse.class,new CI2<UUID,GridCacheTxRecoveryResponse>(){
    @Override public void apply(    UUID nodeId,    GridCacheTxRecoveryResponse res){
      processCheckPreparedTxResponse(nodeId,res);
    }
  }
);
}
