{
  this.ctx=ctx;
  log=ctx.logger(IgniteTxHandler.class);
  ctx.io().addHandler(0,GridNearTxPrepareRequest.class,new CI2<UUID,GridCacheMessage<K,V>>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage<K,V> msg){
      processNearTxPrepareRequest(nodeId,(GridNearTxPrepareRequest<K,V>)msg);
    }
  }
);
  ctx.io().addHandler(0,GridNearTxPrepareResponse.class,new CI2<UUID,GridCacheMessage<K,V>>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage<K,V> msg){
      processNearTxPrepareResponse(nodeId,(GridNearTxPrepareResponse<K,V>)msg);
    }
  }
);
  ctx.io().addHandler(0,GridNearTxFinishRequest.class,new CI2<UUID,GridCacheMessage<K,V>>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage<K,V> msg){
      processNearTxFinishRequest(nodeId,(GridNearTxFinishRequest<K,V>)msg);
    }
  }
);
  ctx.io().addHandler(0,GridNearTxFinishResponse.class,new CI2<UUID,GridCacheMessage<K,V>>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage<K,V> msg){
      processNearTxFinishResponse(nodeId,(GridNearTxFinishResponse<K,V>)msg);
    }
  }
);
  ctx.io().addHandler(0,GridDhtTxPrepareRequest.class,new CI2<UUID,GridCacheMessage<K,V>>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage<K,V> msg){
      processDhtTxPrepareRequest(nodeId,(GridDhtTxPrepareRequest<K,V>)msg);
    }
  }
);
  ctx.io().addHandler(0,GridDhtTxPrepareResponse.class,new CI2<UUID,GridCacheMessage<K,V>>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage<K,V> msg){
      processDhtTxPrepareResponse(nodeId,(GridDhtTxPrepareResponse<K,V>)msg);
    }
  }
);
  ctx.io().addHandler(0,GridDhtTxFinishRequest.class,new CI2<UUID,GridCacheMessage<K,V>>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage<K,V> msg){
      processDhtTxFinishRequest(nodeId,(GridDhtTxFinishRequest<K,V>)msg);
    }
  }
);
  ctx.io().addHandler(0,GridDhtTxFinishResponse.class,new CI2<UUID,GridCacheMessage<K,V>>(){
    @Override public void apply(    UUID nodeId,    GridCacheMessage<K,V> msg){
      processDhtTxFinishResponse(nodeId,(GridDhtTxFinishResponse<K,V>)msg);
    }
  }
);
  ctx.io().addHandler(0,GridCacheOptimisticCheckPreparedTxRequest.class,new CI2<UUID,GridCacheOptimisticCheckPreparedTxRequest<K,V>>(){
    @Override public void apply(    UUID nodeId,    GridCacheOptimisticCheckPreparedTxRequest<K,V> req){
      processCheckPreparedTxRequest(nodeId,req);
    }
  }
);
  ctx.io().addHandler(0,GridCacheOptimisticCheckPreparedTxResponse.class,new CI2<UUID,GridCacheOptimisticCheckPreparedTxResponse<K,V>>(){
    @Override public void apply(    UUID nodeId,    GridCacheOptimisticCheckPreparedTxResponse<K,V> res){
      processCheckPreparedTxResponse(nodeId,res);
    }
  }
);
}
