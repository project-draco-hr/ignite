{
switch (taskInfo.type()) {
case COMBINE:
    return combinerMap.input((Comparator<Object>)job.combineGroupComparator());
case REDUCE:
  int reducer=taskInfo.taskNumber();
GridHadoopMultimap m=maps.get(reducer);
if (m != null) return m.input((Comparator<Object>)job.reduceGroupComparator());
return new GridHadoopTaskInput(){
@Override public boolean next(){
return false;
}
@Override public Object key(){
throw new IllegalStateException();
}
@Override public Iterator<?> values(){
throw new IllegalStateException();
}
@Override public void close(){
}
}
;
default :
throw new IllegalStateException("Illegal type: " + taskInfo.type());
}
}
