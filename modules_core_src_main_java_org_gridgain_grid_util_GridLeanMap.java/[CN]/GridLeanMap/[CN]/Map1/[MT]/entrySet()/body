{
  return new AbstractSet<Entry<K,V>>(){
    @Override public Iterator<Entry<K,V>> iterator(){
      return new Iterator<Entry<K,V>>(){
        private int idx;
        @Override public boolean hasNext(){
          return idx == 0 && k1 != null;
        }
        @Override public Entry<K,V> next(){
          if (!hasNext())           throw new NoSuchElementException();
          idx=1;
          return e(k1,v1);
        }
        @Override public void remove(){
          throw new UnsupportedOperationException();
        }
      }
;
    }
    @Override public int size(){
      return Map1.this.size();
    }
  }
;
}
