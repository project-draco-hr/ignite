{
  final Semaphore sem=new Semaphore(taskCnt);
  final GridInClosure<GridFuture> lsnr=new CI1<GridFuture>(){
    @Override public void apply(    GridFuture t){
      sem.release();
    }
  }
;
  GridLoadTestUtils.runMultithreadedInLoop(new Callable<Object>(){
    @Nullable @Override public Object call() throws Exception {
      sem.acquire();
      GridCompute comp=g.compute().enableAsync();
      comp.execute(GridJobExecutionLoadTestTask.class,null);
      GridComputeTaskFuture<Object> f=comp.future();
      f.listenAsync(lsnr);
      iterCntr.increment();
      return null;
    }
  }
,threadCnt,dur > 0 ? dur : Long.MAX_VALUE);
}
