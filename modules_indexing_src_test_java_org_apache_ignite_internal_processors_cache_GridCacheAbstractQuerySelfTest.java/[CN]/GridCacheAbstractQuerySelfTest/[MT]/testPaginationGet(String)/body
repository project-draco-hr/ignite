{
  Cache<Integer,Integer> cache=ignite.cache(cacheName);
  for (int i=0; i < 50; i++)   assertTrue(cache.putx(i,i));
  CacheQuery<Map.Entry<Integer,Integer>> q=cache.queries().createSqlQuery(Integer.class,"_key >= 0");
  q.pageSize(10);
  q.enableDedup(true);
  List<Map.Entry<Integer,Integer>> list=new ArrayList<>(q.execute().get());
  Collections.sort(list,new Comparator<Map.Entry<Integer,Integer>>(){
    @Override public int compare(    Map.Entry<Integer,Integer> e1,    Map.Entry<Integer,Integer> e2){
      return e1.getKey().compareTo(e2.getKey());
    }
  }
);
  for (int i=0; i < 50; i++) {
    Map.Entry<Integer,Integer> e=list.get(i);
    assertEquals(i,(int)e.getKey());
    assertEquals(i,(int)e.getValue());
  }
}
