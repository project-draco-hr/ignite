{
  GridCache<Integer,Object> cache=((IgniteKernal)ignite).cache(null);
  Object val=new Object(){
    @QuerySqlField private int field1=10;
    @Override public String toString(){
      return "Test anonymous object.";
    }
  }
;
  assertTrue(val.getClass().getName().endsWith("GridCacheAbstractQuerySelfTest$16"));
  assertTrue(cache.putx(1,val));
  CacheQuery<Map.Entry<Integer,Object>> q=cache.queries().createSqlQuery(val.getClass(),"_key >= 0");
  q.enableDedup(true);
  Collection<Map.Entry<Integer,Object>> res=q.execute().get();
  assertEquals(1,res.size());
  CacheQuery<List<?>> fieldsQry=cache.queries().createSqlFieldsQuery("select field1 from GridCacheAbstractQuerySelfTest_16");
  fieldsQry.enableDedup(true);
  Collection<List<?>> fieldsRes=fieldsQry.execute().get();
  assertEquals(1,fieldsRes.size());
  List<?> fields=F.first(fieldsRes);
  assertEquals(1,fields.size());
  assertEquals(10,fields.get(0));
}
