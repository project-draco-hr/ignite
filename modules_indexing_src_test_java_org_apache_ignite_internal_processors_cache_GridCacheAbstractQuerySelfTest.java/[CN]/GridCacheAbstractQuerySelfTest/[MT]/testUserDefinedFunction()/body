{
  CacheQuery<List<?>> qry=ignite.cache(null).queries().createSqlFieldsQuery("select square(1), square(2)").projection(ignite.cluster());
  CacheQueryFuture<List<?>> fut=qry.execute();
  Collection<List<?>> res=fut.get();
  assertEquals(gridCount(),res.size());
  List<?> row=res.iterator().next();
  assertEquals(1,row.get(0));
  assertEquals(4,row.get(1));
  qry=ignite.cache(null).queries().createSqlFieldsQuery("select _cube_(1), _cube_(2)").projection(ignite.cluster());
  fut=qry.execute();
  res=fut.get();
  assertEquals(gridCount(),res.size());
  row=res.iterator().next();
  assertEquals(1,row.get(0));
  assertEquals(8,row.get(1));
  final CacheQuery<List<?>> qry3=ignite.cache(null).queries().createSqlFieldsQuery("select no()");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      qry3.execute().get();
      return null;
    }
  }
,IgniteCheckedException.class,null);
}
