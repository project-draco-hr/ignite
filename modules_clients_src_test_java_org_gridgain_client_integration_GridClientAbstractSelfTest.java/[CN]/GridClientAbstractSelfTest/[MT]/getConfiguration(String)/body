{
  GridConfiguration cfg=super.getConfiguration(gridName);
  cfg.setLocalHost(HOST);
  cfg.setRestTcpPort(BINARY_PORT);
  cfg.setRestEnabled(true);
  cfg.setRestAccessibleFolders(U.getGridGainHome() + "/work/log",U.getGridGainHome() + "/modules/tests/resources/log");
  if (useSsl()) {
    cfg.setRestTcpSslEnabled(true);
    cfg.setRestTcpSslContextFactory(sslContextFactory());
  }
  GridTcpDiscoverySpi disco=new GridTcpDiscoverySpi();
  disco.setIpFinder(IP_FINDER);
  cfg.setDiscoverySpi(disco);
  cfg.setCacheConfiguration(cacheConfiguration(null),cacheConfiguration("replicated"),cacheConfiguration("partitioned"),cacheConfiguration(CACHE_NAME));
  cfg.setClientMessageInterceptor(new GridClientMessageInterceptor(){
    @Override public Object onReceive(    @Nullable Object obj){
      if (obj != null)       INTERCEPTED_OBJECTS.put(obj,obj);
      return overwriteIntercepted && obj instanceof String ? obj + INTERCEPTED_SUF : obj;
    }
    @Override public Object onSend(    Object obj){
      if (obj != null)       INTERCEPTED_OBJECTS.put(obj,obj);
      return obj;
    }
  }
);
  cfg.setSwapSpaceSpi(new GridFileSwapSpaceSpi());
  return cfg;
}
