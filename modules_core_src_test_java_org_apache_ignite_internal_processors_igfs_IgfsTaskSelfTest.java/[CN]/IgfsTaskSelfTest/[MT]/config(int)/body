{
  FileSystemConfiguration igfsCfg=new FileSystemConfiguration();
  igfsCfg.setDataCacheName("dataCache");
  igfsCfg.setMetaCacheName("metaCache");
  igfsCfg.setName("igfs");
  igfsCfg.setBlockSize(BLOCK_SIZE);
  igfsCfg.setDefaultMode(PRIMARY);
  igfsCfg.setFragmentizerEnabled(false);
  CacheConfiguration dataCacheCfg=new CacheConfiguration();
  dataCacheCfg.setName("dataCache");
  dataCacheCfg.setCacheMode(PARTITIONED);
  dataCacheCfg.setAtomicityMode(TRANSACTIONAL);
  dataCacheCfg.setDistributionMode(PARTITIONED_ONLY);
  dataCacheCfg.setWriteSynchronizationMode(FULL_SYNC);
  dataCacheCfg.setAffinityMapper(new IgfsGroupDataBlocksKeyMapper(1));
  dataCacheCfg.setBackups(0);
  CacheConfiguration metaCacheCfg=new CacheConfiguration();
  metaCacheCfg.setName("metaCache");
  metaCacheCfg.setCacheMode(REPLICATED);
  metaCacheCfg.setAtomicityMode(TRANSACTIONAL);
  dataCacheCfg.setWriteSynchronizationMode(CacheWriteSynchronizationMode.FULL_SYNC);
  IgniteConfiguration cfg=new IgniteConfiguration();
  TcpDiscoverySpi discoSpi=new TcpDiscoverySpi();
  discoSpi.setIpFinder(IP_FINDER);
  cfg.setDiscoverySpi(discoSpi);
  cfg.setCacheConfiguration(dataCacheCfg,metaCacheCfg);
  cfg.setFileSystemConfiguration(igfsCfg);
  cfg.setGridName("node-" + idx);
  return cfg;
}
