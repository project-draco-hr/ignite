{
  CU.validateCacheKey("key");
  CU.validateCacheKey(1);
  CU.validateCacheKey(1L);
  CU.validateCacheKey(1.0);
  CU.validateCacheKey(new ExtendsClassWithEqualsAndHashCode());
  CU.validateCacheKey(new ExtendsClassWithEqualsAndHashCode2());
  assertThrowsForInvalidKey(new NoEqualsAndHashCode());
  assertThrowsForInvalidKey(new NoEquals());
  assertThrowsForInvalidKey(new NoHashCode());
  assertThrowsForInvalidKey(new WrongEquals());
  BinaryObjectBuilderImpl binBuilder=new BinaryObjectBuilderImpl(binaryContext(),EqualsAndHashCode.class.getName());
  assertThrowsForInvalidKey(binBuilder.build());
  binBuilder.hashCode(0xFE12);
  BinaryObject binObj=binBuilder.build();
  CU.validateCacheKey(binObj);
  BinaryObjectBuilderImpl binBuilder2=new BinaryObjectBuilderImpl((BinaryObjectImpl)binObj);
  CU.validateCacheKey(binBuilder2.build());
}
