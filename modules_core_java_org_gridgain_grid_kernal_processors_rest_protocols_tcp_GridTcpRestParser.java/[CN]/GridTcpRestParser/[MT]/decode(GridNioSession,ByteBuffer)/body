{
  ParserState state=ses.removeMeta(PARSER_STATE.ordinal());
  if (state == null)   state=new ParserState();
  GridClientPacketType type=state.packetType();
  if (type == null) {
    byte hdr=buf.get(buf.position());
switch (hdr) {
case MEMCACHE_REQ_FLAG:
      state.packet(new GridMemcachedMessage());
    state.packetType(GridClientPacketType.MEMCACHE);
  break;
case GRIDGAIN_REQ_FLAG:
buf.get();
state.packetType(GridClientPacketType.GRIDGAIN);
break;
case GRIDGAIN_HANDSHAKE_FLAG:
buf.get();
state.packetType(GridClientPacketType.GRIDGAIN_HANDSHAKE);
break;
default :
throw new IOException("Failed to parse incoming packet (invalid packet start) [ses=" + ses + ", b="+ Integer.toHexString(hdr & 0xFF)+ ']');
}
}
GridClientMessage res=null;
switch (state.packetType()) {
case MEMCACHE:
res=parseMemcachePacket(ses,buf,state);
break;
case GRIDGAIN_HANDSHAKE:
res=parseHandshake(buf,state);
break;
case GRIDGAIN:
res=parseCustomPacket(ses,buf,state);
break;
}
if (res == null) ses.addMeta(PARSER_STATE.ordinal(),state);
return res;
}
