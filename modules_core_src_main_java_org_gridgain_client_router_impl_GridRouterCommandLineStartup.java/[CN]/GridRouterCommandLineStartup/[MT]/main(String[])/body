{
  X.println("  _____     _     _______      _         "," / ___/____(_)___/ / ___/___ _(_)___     ","/ (_ // __/ // _  / (_ // _ `/ // _ \\   ","\\___//_/ /_/ \\_,_/\\___/ \\_,_/_//_//_/"," ","GridGain Router Command Line Loader","ver. " + ACK_VER,COPYRIGHT," ");
  GridSpringProcessor spring=SPRING.create(false);
  if (args.length < 1) {
    X.error("Missing XML configuration path.");
    System.exit(1);
  }
  String cfgPath=args[0];
  URL cfgUrl=U.resolveGridGainUrl(cfgPath);
  if (cfgUrl == null) {
    X.error("Spring XML file not found (is GRIDGAIN_HOME set?): " + cfgPath);
    System.exit(1);
  }
  boolean isLog4jUsed=U.gridClassLoader().getResource("org/apache/log4j/Appender.class") != null;
  GridBiTuple<Object,Object> t=null;
  Collection<Handler> savedHnds=null;
  if (isLog4jUsed)   t=U.addLog4jNoOpLogger();
 else   savedHnds=U.addJavaNoOpLogger();
  Map<Class<?>,Object> beans;
  try {
    beans=spring.loadBeans(cfgUrl,GridLogger.class,GridTcpRouterConfiguration.class);
  }
  finally {
    if (isLog4jUsed && t != null)     U.removeLog4jNoOpLogger(t);
    if (!isLog4jUsed)     U.removeJavaNoOpLogger(savedHnds);
  }
  final GridRouterCommandLineStartup routerStartup=new GridRouterCommandLineStartup();
  routerStartup.start(beans);
  Runtime.getRuntime().addShutdownHook(new Thread(){
    @Override public void run(){
      routerStartup.stop();
    }
  }
);
}
