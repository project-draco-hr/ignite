{
  assertFalse(client.cacheCompareAndSet(null,"key",null,null));
  assertTrue(grid().cache(null).putx("key","val"));
  assertTrue(client.cacheCompareAndSet(null,"key",null,null));
  assertNull(grid().cache(null).get("key"));
  assertFalse(client.cacheCompareAndSet(null,"key",null,"val"));
  assertTrue(grid().cache(null).putx("key","val"));
  assertFalse(client.cacheCompareAndSet(null,"key",null,"wrongVal"));
  assertEquals("val",grid().cache(null).get("key"));
  assertTrue(client.cacheCompareAndSet(null,"key",null,"val"));
  assertNull(grid().cache(null).get("key"));
  assertTrue(client.cacheCompareAndSet(null,"key","val",null));
  assertEquals("val",grid().cache(null).get("key"));
  assertFalse(client.cacheCompareAndSet(null,"key","newVal",null));
  assertEquals("val",grid().cache(null).get("key"));
  assertTrue(grid().cache(null).removex("key"));
  assertFalse(client.cacheCompareAndSet(null,"key","val1","val2"));
  assertTrue(grid().cache(null).putx("key","val2"));
  assertFalse(client.cacheCompareAndSet(null,"key","val1","wrongVal"));
  assertEquals("val2",grid().cache(null).get("key"));
  assertTrue(client.cacheCompareAndSet(null,"key","val1","val2"));
  assertEquals("val1",grid().cache(null).get("key"));
  assertTrue(grid().cache(null).removex("key"));
  assertFalse(client.cacheCompareAndSet(CACHE_NAME,"key",null,null));
  assertTrue(grid().cache(CACHE_NAME).putx("key","val"));
  assertTrue(client.cacheCompareAndSet(CACHE_NAME,"key",null,null));
  assertNull(grid().cache(CACHE_NAME).get("key"));
  assertFalse(client.cacheCompareAndSet(CACHE_NAME,"key",null,"val"));
  assertTrue(grid().cache(CACHE_NAME).putx("key","val"));
  assertFalse(client.cacheCompareAndSet(CACHE_NAME,"key",null,"wrongVal"));
  assertEquals("val",grid().cache(CACHE_NAME).get("key"));
  assertTrue(client.cacheCompareAndSet(CACHE_NAME,"key",null,"val"));
  assertNull(grid().cache(CACHE_NAME).get("key"));
  assertTrue(client.cacheCompareAndSet(CACHE_NAME,"key","val",null));
  assertEquals("val",grid().cache(CACHE_NAME).get("key"));
  assertFalse(client.cacheCompareAndSet(CACHE_NAME,"key","newVal",null));
  assertEquals("val",grid().cache(CACHE_NAME).get("key"));
  assertTrue(grid().cache(CACHE_NAME).removex("key"));
  assertFalse(client.cacheCompareAndSet(CACHE_NAME,"key","val1","val2"));
  assertTrue(grid().cache(CACHE_NAME).putx("key","val2"));
  assertFalse(client.cacheCompareAndSet(CACHE_NAME,"key","val1","wrongVal"));
  assertEquals("val2",grid().cache(CACHE_NAME).get("key"));
  assertTrue(client.cacheCompareAndSet(CACHE_NAME,"key","val1","val2"));
  assertEquals("val1",grid().cache(CACHE_NAME).get("key"));
  assertTrue(grid().cache(CACHE_NAME).removex("key"));
}
