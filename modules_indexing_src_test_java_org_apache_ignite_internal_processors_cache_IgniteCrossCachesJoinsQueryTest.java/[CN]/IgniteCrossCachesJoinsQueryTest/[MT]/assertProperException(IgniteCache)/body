{
  qry="assertProperException";
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      cache.query(new SqlFieldsQuery("select p.name from " + "\"" + PERSON_CACHE_NAME + "\".Person p, "+ "\""+ ACC_CACHE_NAME+ "\".Account a "+ "where p._key = a.personId").setDistributedJoins(true));
      return null;
    }
  }
,CacheException.class,"Queries using distributed JOINs have to be run on partitioned cache");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      cache.query(new SqlQuery(Person.class,"from \"" + PERSON_CACHE_NAME + "\".Person , "+ "\""+ ACC_CACHE_NAME+ "\".Account  "+ "where Person._key = Account.personId").setDistributedJoins(true));
      return null;
    }
  }
,CacheException.class,"Queries using distributed JOINs have to be run on partitioned cache");
}
