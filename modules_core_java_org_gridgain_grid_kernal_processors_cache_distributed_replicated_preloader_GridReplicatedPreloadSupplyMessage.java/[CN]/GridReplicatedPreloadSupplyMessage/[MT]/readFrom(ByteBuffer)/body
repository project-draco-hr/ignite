{
  commState.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (commState.idx) {
case 2:
    if (commState.readSize == -1) {
      if (buf.remaining() < 4)       return false;
      commState.readSize=commState.getInt();
    }
  if (commState.readSize >= 0) {
    if (entryBytes == null)     entryBytes=new ArrayList<>(commState.readSize);
    for (int i=commState.readItems; i < commState.readSize; i++) {
      byte[] _val=commState.getByteArray();
      if (_val == BYTE_ARR_NOT_READ)       return false;
      entryBytes.add((byte[])_val);
      commState.readItems++;
    }
  }
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 3:
if (buf.remaining() < 1) return false;
failed=commState.getBoolean();
commState.idx++;
case 4:
if (buf.remaining() < 1) return false;
last=commState.getBoolean();
commState.idx++;
case 5:
if (buf.remaining() < 4) return false;
msgSize=commState.getInt();
commState.idx++;
case 6:
if (buf.remaining() < 4) return false;
workerId=commState.getInt();
commState.idx++;
}
return true;
}
