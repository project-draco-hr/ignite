{
  commState.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (commState.idx) {
case 8:
    GridCacheVersion baseVer0=commState.getCacheVersion();
  if (baseVer0 == CACHE_VER_NOT_READ)   return false;
baseVer=baseVer0;
commState.idx++;
case 9:
if (buf.remaining() < 1) return false;
commit=commState.getBoolean();
commState.idx++;
case 10:
GridCacheVersion commitVer0=commState.getCacheVersion();
if (commitVer0 == CACHE_VER_NOT_READ) return false;
commitVer=commitVer0;
commState.idx++;
case 11:
GridUuid futId0=commState.getGridUuid();
if (futId0 == GRID_UUID_NOT_READ) return false;
futId=futId0;
commState.idx++;
case 12:
byte[] grpLockKeyBytes0=commState.getByteArray();
if (grpLockKeyBytes0 == BYTE_ARR_NOT_READ) return false;
grpLockKeyBytes=grpLockKeyBytes0;
commState.idx++;
case 13:
if (buf.remaining() < 1) return false;
invalidate=commState.getBoolean();
commState.idx++;
case 14:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt();
}
if (commState.readSize >= 0) {
if (recoveryWritesBytes == null) recoveryWritesBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
byte[] _val=commState.getByteArray();
if (_val == BYTE_ARR_NOT_READ) return false;
recoveryWritesBytes.add((byte[])_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 15:
if (buf.remaining() < 1) return false;
reply=commState.getBoolean();
commState.idx++;
case 16:
if (buf.remaining() < 8) return false;
threadId=commState.getLong();
commState.idx++;
case 17:
if (buf.remaining() < 4) return false;
txSize=commState.getInt();
commState.idx++;
case 18:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt();
}
if (commState.readSize >= 0) {
if (writeEntriesBytes == null) writeEntriesBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
byte[] _val=commState.getByteArray();
if (_val == BYTE_ARR_NOT_READ) return false;
writeEntriesBytes.add((byte[])_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
}
return true;
}
