{
  final GridListSet<V> set=this;
  return new GridListSet<V>(){
    @Override public synchronized boolean add(    V val){
      return set.add(val);
    }
    @Override public synchronized V addx(    V val){
      return set.addx(val);
    }
    @SuppressWarnings({"CloneDoesntCallSuperClone"}) @Override public synchronized Object clone() throws CloneNotSupportedException {
      return set.clone();
    }
    @Override public synchronized boolean contains(    Object val){
      return set.contains(val);
    }
    @Override public synchronized GridListSet<V> copy(){
      return set.copy();
    }
    @Override public synchronized V get(    int idx){
      return set.get(idx);
    }
    @Override public synchronized V get(    V val){
      return set.get(val);
    }
    @Override public synchronized Iterator<V> iterator(){
      return set.iterator();
    }
    @Override public synchronized boolean remove(    Object val){
      return set.remove(val);
    }
    @Override public synchronized V removex(    V val){
      return set.removex(val);
    }
    @Override public synchronized int size(){
      return set.size();
    }
    @Override public synchronized String toString(){
      return set.toString();
    }
    @Override public synchronized GridListSet<V> toSynchronized(){
      return set.toSynchronized();
    }
    @Override public synchronized boolean equals(    Object o){
      return set.equals(o);
    }
    @Override public synchronized int hashCode(){
      return set.hashCode();
    }
    @Override public synchronized boolean removeAll(    Collection<?> c){
      return set.removeAll(c);
    }
    @Override public synchronized boolean addAll(    Collection<? extends V> c){
      return set.addAll(c);
    }
    @Override public synchronized void clear(){
      set.clear();
    }
    @Override public synchronized boolean containsAll(    Collection<?> c){
      return set.containsAll(c);
    }
    @Override public synchronized boolean isEmpty(){
      return set.isEmpty();
    }
    @Override public synchronized boolean retainAll(    Collection<?> c){
      return set.retainAll(c);
    }
    @Override public synchronized Object[] toArray(){
      return set.toArray();
    }
    @SuppressWarnings({"SuspiciousToArrayCall"}) @Override public synchronized <T>T[] toArray(    T[] a){
      return set.toArray(a);
    }
    @Override public synchronized V first(){
      return set.first();
    }
    @Override public synchronized V removeFirst(){
      return set.removeFirst();
    }
    @Override public synchronized List<V> values(){
      return set.values();
    }
    @Override public V last(){
      return set.last();
    }
    @Override public V removeLast(){
      return set.removeLast();
    }
  }
;
}
