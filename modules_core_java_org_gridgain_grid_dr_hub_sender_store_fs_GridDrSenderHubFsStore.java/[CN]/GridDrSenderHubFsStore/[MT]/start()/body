{
  A.ensure(readBufSize > 64,"readBufSize > 64");
  A.notNull(overflowMode,"overflowMode");
  A.ensure(maxFileSize > 128,"maxFileSize > 128");
  A.ensure(maxFilesNum > 2,"maxFilesNum > 2");
  A.notNull(dirPath,"dirPath");
  A.ensure(checkPntFreq > 50,"checkPntFreq > 50");
  File dirFile=new File(dirPath);
  if (dirFile.isAbsolute())   dir=dirFile.toPath();
 else   if (U.getGridGainHome() != null)   dir=new File(U.getGridGainHome(),dirPath).toPath();
 else   throw new GridException("Cannot resolve path: " + dirPath);
  Collection<Path> checkPoints=Collections.emptyList();
  try {
    if (!Files.exists(dir)) {
      try {
        Files.createDirectories(dir);
      }
 catch (      AccessDeniedException e) {
        if (!U.isWindows())         throw e;
        try {
          Thread.sleep(10);
        }
 catch (        InterruptedException ignored) {
        }
        Files.createDirectories(dir);
      }
    }
 else {
      initLogFiles();
      checkPoints=initLastCheckPoint();
    }
  }
 catch (  IOException e) {
    throw new GridException(e);
  }
  switchToNextFile(files.isEmpty() ? 0 : (files.last().id + 1));
  checkPntWorker=new CheckPointWorker(gridName,log,checkPoints);
  new GridThread(checkPntWorker).start();
}
