{
  assertTrue(!expEvts.isEmpty());
  boolean pass=true;
  for (  Map.Entry<Integer,List<T2<Integer,Integer>>> e : expEvts.entrySet()) {
    Integer key=e.getKey();
    List<T2<Integer,Integer>> exp=e.getValue();
    List<CacheEntryEvent<?,?>> rcvdEvts=lsnr.evts.get(key);
    if (rcvdEvts == null) {
      pass=false;
      log.info("No events for key [key=" + key + ", exp="+ e.getValue()+ ']');
      if (!logAll)       return false;
    }
 else {
synchronized (rcvdEvts) {
        if (rcvdEvts.size() != exp.size()) {
          pass=false;
          log.info("Missed or extra events for key [key=" + key + ", exp="+ e.getValue()+ ", rcvd="+ rcvdEvts+ ']');
          if (!logAll)           return false;
        }
        int cnt=Math.min(rcvdEvts.size(),exp.size());
        for (int i=0; i < cnt; i++) {
          T2<Integer,Integer> expEvt=exp.get(i);
          CacheEntryEvent<?,?> rcvdEvt=rcvdEvts.get(i);
          if (pass) {
            assertEquals(key,rcvdEvt.getKey());
            assertEquals(expEvt.get1(),rcvdEvt.getValue());
          }
 else {
            if (!key.equals(rcvdEvt.getKey()) || !expEvt.get1().equals(rcvdEvt.getValue()))             log.warning("Missed events. [key=" + key + ", actKey="+ rcvdEvt.getKey()+ ", expVal="+ expEvt.get1()+ ", actVal="+ rcvdEvt.getValue()+ "]");
          }
        }
        if (!pass) {
          for (int i=cnt; i < exp.size(); i++) {
            T2<Integer,Integer> val=exp.get(i);
            log.warning("Missed events. [key=" + key + ", expVal="+ val.get1()+ ", prevVal="+ val.get2()+ "]");
          }
        }
      }
    }
  }
  if (pass) {
    expEvts.clear();
    lsnr.evts.clear();
  }
  return pass;
}
