{
  if (!busyLock.tryReadLock())   return null;
  try {
    GridHadoopJobMetadata meta=jobMetaPrj.get(jobId);
    if (meta == null)     return null;
    if (log.isDebugEnabled())     log.debug("Got job metadata for status check [locNodeId=" + ctx.localNodeId() + ", meta="+ meta+ ']');
    GridHadoopJobInfo info=meta.jobInfo();
    if (meta.phase() == PHASE_COMPLETE) {
      if (log.isDebugEnabled())       log.debug("Job is complete, returning finished future: " + jobId);
      return new GridHadoopJobStatus(new GridFinishedFutureEx<>(jobId),info);
    }
    GridFutureAdapter<GridHadoopJobId> fut=F.addIfAbsent(activeFinishFuts,jobId,new GridFutureAdapter<GridHadoopJobId>());
    meta=jobMetaPrj.get(jobId);
    if (log.isDebugEnabled())     log.debug("Re-checking job metadata [locNodeId=" + ctx.localNodeId() + ", meta="+ meta+ ']');
    if (meta == null || meta.phase() == PHASE_COMPLETE) {
      fut.onDone(jobId,meta.failCause());
      activeFinishFuts.remove(jobId,fut);
    }
    return new GridHadoopJobStatus(fut,info);
  }
  finally {
    busyLock.readUnlock();
  }
}
