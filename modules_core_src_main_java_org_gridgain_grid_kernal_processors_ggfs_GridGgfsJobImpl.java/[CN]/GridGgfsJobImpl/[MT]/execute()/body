{
  GridGgfs ggfs=grid.ggfs(ggfsName);
  try (GridGgfsInputStream in=ggfs.open(path)){
    GridGgfsFileRange split=new GridGgfsFileRange(path,start,len);
    if (rslvr != null) {
      split=rslvr.resolveRecords(ggfs,in,split);
      if (split == null) {
        log.warning("No data found for split on local node after resolver is applied " + "[ggfsName=" + ggfsName + ", path="+ path+ ", start="+ start+ ", len="+ len+ ']');
        return null;
      }
    }
    in.seek(split.start());
    return job.execute(ggfs,new GridGgfsFileRange(path,split.start(),split.length()),in);
  }
 catch (  IOException e) {
    throw new GridException("Failed to execute GGFS job for file split [ggfsName=" + ggfsName + ", path="+ path+ ", start="+ start+ ", len="+ len+ ']',e);
  }
}
