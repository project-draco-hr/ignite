{
  long cpuTime;
  try {
    cpuTime=U.<Long>property(os,"processCpuTime");
  }
 catch (  IgniteException ignored) {
    return -1;
  }
  cpuTime/=1000000 * metrics.getAvailableProcessors();
  double cpu=0;
  if (prevCpuTime > 0) {
    long cpuTimeDiff=cpuTime - prevCpuTime;
    cpu=Math.min(1.0,(double)cpuTimeDiff / METRICS_UPDATE_FREQ);
  }
  prevCpuTime=cpuTime;
  return cpu;
}
