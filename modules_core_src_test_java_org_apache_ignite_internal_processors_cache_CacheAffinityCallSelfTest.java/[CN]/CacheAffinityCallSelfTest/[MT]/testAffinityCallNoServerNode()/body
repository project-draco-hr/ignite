{
  startGrids(SERVERS_COUNT + 1);
  final Integer key=1;
  final Ignite client=grid(SERVERS_COUNT);
  final IgniteInternalFuture<Object> fut=GridTestUtils.runAsync(new Callable<Object>(){
    @Override public Object call() throws Exception {
      for (int i=0; i < SERVERS_COUNT; ++i)       stopGrid(i);
      return null;
    }
  }
);
  try {
    while (!fut.isDone())     client.compute().affinityCall(CACHE_NAME,key,new CheckCallable(key));
  }
 catch (  ComputeTaskCancelledException e) {
    assertTrue(e.getMessage().contains("stopping"));
  }
catch (  ClusterGroupEmptyException e) {
    assertTrue(e.getMessage().contains("Topology projection is empty"));
  }
catch (  IgniteException e) {
    assertTrue(e.getMessage().contains("Client node disconnected") || e.getMessage().contains("Failed to reconnect to cluster") || e.getMessage().contains("Failed to execute task, client node disconnected."));
  }
  stopAllGrids();
}
