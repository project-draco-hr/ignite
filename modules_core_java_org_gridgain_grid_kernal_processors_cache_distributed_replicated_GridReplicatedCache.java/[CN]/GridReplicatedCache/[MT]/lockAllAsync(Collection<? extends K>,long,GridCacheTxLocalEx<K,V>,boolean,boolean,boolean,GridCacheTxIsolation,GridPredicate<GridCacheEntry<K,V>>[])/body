{
  if (keys.isEmpty())   return new GridFinishedFuture<>(ctx.kernalContext(),true);
  GridFuture<Object> fut=preloader().request(keys,tx != null ? tx.topologyVersion() : ctx.discovery().topologyVersion());
  final long threadId=Thread.currentThread().getId();
  if (fut.isDone()) {
    try {
      fut.get();
    }
 catch (    GridException e) {
      return new GridFinishedFuture<>(ctx.kernalContext(),e);
    }
    return lockAllAsync0(keys,timeout,threadId,tx,isInvalidate,isRead,retval,isolation,filter);
  }
  return new GridEmbeddedFuture<>(true,fut,new C2<Object,Exception,GridFuture<Boolean>>(){
    @Override public GridFuture<Boolean> apply(    Object o,    Exception err){
      if (err != null)       return new GridFinishedFuture<>(ctx.kernalContext(),err);
      return lockAllAsync0(keys,timeout,threadId,tx,isInvalidate,isRead,retval,isolation,filter);
    }
  }
,ctx.kernalContext());
}
