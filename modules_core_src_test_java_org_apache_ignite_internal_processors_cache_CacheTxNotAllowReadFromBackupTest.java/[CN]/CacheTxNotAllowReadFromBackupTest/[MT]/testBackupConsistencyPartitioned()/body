{
  CacheConfiguration<Integer,Integer> cfg=new CacheConfiguration<>("test-cache");
  cfg.setAtomicityMode(CacheAtomicityMode.TRANSACTIONAL);
  cfg.setWriteSynchronizationMode(CacheWriteSynchronizationMode.PRIMARY_SYNC);
  cfg.setCacheMode(CacheMode.PARTITIONED);
  cfg.setBackups(NODES - 1);
  cfg.setReadFromBackup(false);
  checkBackupConsistency(cfg,TransactionConcurrency.PESSIMISTIC,TransactionIsolation.READ_COMMITTED);
  checkBackupConsistency(cfg,TransactionConcurrency.PESSIMISTIC,TransactionIsolation.REPEATABLE_READ);
  checkBackupConsistency(cfg,TransactionConcurrency.PESSIMISTIC,TransactionIsolation.SERIALIZABLE);
  checkBackupConsistency(cfg,TransactionConcurrency.OPTIMISTIC,TransactionIsolation.READ_COMMITTED);
  checkBackupConsistency(cfg,TransactionConcurrency.OPTIMISTIC,TransactionIsolation.REPEATABLE_READ);
  checkBackupConsistency(cfg,TransactionConcurrency.OPTIMISTIC,TransactionIsolation.SERIALIZABLE);
  checkBackupConsistencyGetAll(cfg,TransactionConcurrency.PESSIMISTIC,TransactionIsolation.READ_COMMITTED);
  checkBackupConsistencyGetAll(cfg,TransactionConcurrency.PESSIMISTIC,TransactionIsolation.REPEATABLE_READ);
  checkBackupConsistencyGetAll(cfg,TransactionConcurrency.PESSIMISTIC,TransactionIsolation.SERIALIZABLE);
  checkBackupConsistencyGetAll(cfg,TransactionConcurrency.OPTIMISTIC,TransactionIsolation.READ_COMMITTED);
  checkBackupConsistencyGetAll(cfg,TransactionConcurrency.OPTIMISTIC,TransactionIsolation.REPEATABLE_READ);
  checkBackupConsistencyGetAll(cfg,TransactionConcurrency.OPTIMISTIC,TransactionIsolation.SERIALIZABLE);
}
