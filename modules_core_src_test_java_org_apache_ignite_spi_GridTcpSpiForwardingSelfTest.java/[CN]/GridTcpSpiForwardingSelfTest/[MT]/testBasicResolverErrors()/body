{
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      return new BasicAddressResolver(null);
    }
  }
,IllegalArgumentException.class,"At least one address mapping is required.");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      return new BasicAddressResolver(new HashMap<String,String>());
    }
  }
,IllegalArgumentException.class,"At least one address mapping is required.");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      Map<String,String> map=new HashMap<>();
      map.put("from",null);
      return new BasicAddressResolver(map);
    }
  }
,IllegalArgumentException.class,"Invalid address mapping: from=null");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      Map<String,String> map=new HashMap<>();
      map.put("from","");
      return new BasicAddressResolver(map);
    }
  }
,IllegalArgumentException.class,"Invalid address mapping: from=");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      Map<String,String> map=new HashMap<>();
      map.put(null,"to");
      return new BasicAddressResolver(map);
    }
  }
,IllegalArgumentException.class,"Invalid address mapping: null=to");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      Map<String,String> map=new HashMap<>();
      map.put("","to");
      return new BasicAddressResolver(map);
    }
  }
,IllegalArgumentException.class,"Invalid address mapping: =to");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      Map<String,String> map=new HashMap<>();
      map.put("from","to:1111");
      return new BasicAddressResolver(map);
    }
  }
,IllegalArgumentException.class,"Invalid address mapping: from=to:1111");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      Map<String,String> map=new HashMap<>();
      map.put("from:1111","to");
      return new BasicAddressResolver(map);
    }
  }
,IllegalArgumentException.class,"Invalid address mapping: from:1111=to");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      Map<String,String> map=new HashMap<>();
      map.put("from:1111:2222","to:1111");
      return new BasicAddressResolver(map);
    }
  }
,IllegalArgumentException.class,"Invalid address mapping: from:1111:2222=to:1111");
  GridTestUtils.assertThrows(log,new Callable<Object>(){
    @Override public Object call() throws Exception {
      Map<String,String> map=new HashMap<>();
      map.put("from:1111","to:1111:2222");
      return new BasicAddressResolver(map);
    }
  }
,IllegalArgumentException.class,"Invalid address mapping: from:1111=to:1111:2222");
}
