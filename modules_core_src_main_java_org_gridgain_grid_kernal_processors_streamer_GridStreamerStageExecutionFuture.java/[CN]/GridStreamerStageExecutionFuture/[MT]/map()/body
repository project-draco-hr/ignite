{
  try {
    streamer.onFutureMapped(this);
    StreamerEventRouter evtRouter=streamer.eventRouter();
    Map<ClusterNode,Collection<Object>> routeMap=evtRouter.route(streamer.context(),stageName,evts);
    if (log.isDebugEnabled())     log.debug("Mapped stage to nodes [futId=" + futId + ", stageName="+ stageName+ ", nodeIds="+ (routeMap != null ? U.nodeIds(routeMap.keySet()) : null)+ ']');
    if (F.isEmpty(routeMap)) {
      U.error(log,"Failed to route events to nodes (will fail pipeline execution) " + "[streamer=" + streamer.name() + ", stageName="+ stageName+ ", evts="+ evts+ ']');
      UUID locNodeId=streamer.kernalContext().localNodeId();
      onFailed(locNodeId,new GridStreamerRouteFailedException("Failed to route " + "events to nodes (router returned null or empty route map) [locNodeId=" + locNodeId + ", "+ "stageName="+ stageName+ ']'));
    }
 else {
      execNodeIds.addAll(U.nodeIds(routeMap.keySet()));
      for (      Map.Entry<ClusterNode,Collection<Object>> entry : routeMap.entrySet()) {
        ClusterNode node=entry.getKey();
        childExecs.put(node.id(),new GridStreamerExecutionBatch(execId,execStartTs,futId,execNodeIds,stageName,entry.getValue()));
      }
      streamer.scheduleExecutions(this,childExecs);
    }
  }
 catch (  GridException e) {
    onFailed(ctx.localNodeId(),e);
  }
}
