{
  try {
    ctx.itHolder().checkWeakQueue();
    GridCacheAdapter<K,V> cache=ctx.cache();
    GridCachePreloader<K,V> preldr=cache != null ? cache.preloader() : null;
    if (preldr == null)     throw new IllegalStateException("Grid is in invalid state to perform this operation. " + "It either not started yet or has already being or have stopped [gridName=" + ctx.gridName() + ']');
    preldr.startFuture().get();
  }
 catch (  IgniteCheckedException e) {
    throw new IgniteException("Failed to wait for cache preloader start [cacheName=" + ctx.name() + "]",e);
  }
  if (ctx.deploymentEnabled())   ctx.deploy().onEnter();
  rwLock.readLock();
  if (stopped) {
    rwLock.readUnlock();
    throw new IllegalStateException("Dynamic cache has been stopped: " + ctx.name());
  }
  try {
    CacheProjectionContext<K,V> prev=ctx.projectionPerCall();
    if (prev != null || prj != null)     ctx.projectionPerCall(prj);
    return prev;
  }
 catch (  RuntimeException e) {
    rwLock.readUnlock();
    throw e;
  }
}
