{
switch (v.getType()) {
case Value.NULL:
    return GridH2Null.INSTANCE;
case Value.BOOLEAN:
  return new GridH2Boolean(v);
case Value.BYTE:
return new GridH2Byte(v);
case Value.SHORT:
return new GridH2Short(v);
case Value.INT:
return new GridH2Integer(v);
case Value.LONG:
return new GridH2Long(v);
case Value.DECIMAL:
return new GridH2Decimal(v);
case Value.DOUBLE:
return new GridH2Double(v);
case Value.FLOAT:
return new GridH2Float(v);
case Value.DATE:
return new GridH2Date(v);
case Value.TIME:
return new GridH2Time(v);
case Value.TIMESTAMP:
return new GridH2Timestamp(v);
case Value.BYTES:
return new GridH2Bytes(v);
case Value.STRING:
case Value.STRING_FIXED:
case Value.STRING_IGNORECASE:
return new GridH2String(v);
case Value.ARRAY:
return new GridH2Array(v);
case Value.JAVA_OBJECT:
return new GridH2JavaObject(v);
case Value.UUID:
return new GridH2Uuid(v);
case Value.GEOMETRY:
return new GridH2Geometry(v);
default :
throw new IllegalStateException("Unsupported H2 type: " + v.getType());
}
}
