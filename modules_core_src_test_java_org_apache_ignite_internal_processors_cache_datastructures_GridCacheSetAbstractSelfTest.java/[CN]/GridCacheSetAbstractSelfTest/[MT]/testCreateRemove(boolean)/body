{
  for (int i=0; i < gridCount(); i++)   assertNull(grid(i).set(SET_NAME,null));
  CollectionConfiguration colCfg0=config(collocated);
  IgniteSet<Integer> set0=grid(0).set(SET_NAME,colCfg0);
  assertNotNull(set0);
  for (int i=0; i < gridCount(); i++) {
    CollectionConfiguration colCfg=config(collocated);
    IgniteSet<Integer> set=grid(i).set(SET_NAME,colCfg);
    assertNotNull(set);
    assertTrue(set.isEmpty());
    assertEquals(0,set.size());
    assertEquals(SET_NAME,set.name());
    if (collectionCacheMode() == PARTITIONED)     assertEquals(collocated,set.collocated());
  }
  set0.close();
  GridTestUtils.waitForCondition(new GridAbsPredicate(){
    @Override public boolean apply(){
      try {
        for (int i=0; i < gridCount(); i++) {
          if (grid(i).set(SET_NAME,null) != null)           return false;
        }
        return true;
      }
 catch (      Exception e) {
        fail("Unexpected exception: " + e);
        return true;
      }
    }
  }
,1000);
  for (int i=0; i < gridCount(); i++)   assertNull(grid(i).set(SET_NAME,null));
}
