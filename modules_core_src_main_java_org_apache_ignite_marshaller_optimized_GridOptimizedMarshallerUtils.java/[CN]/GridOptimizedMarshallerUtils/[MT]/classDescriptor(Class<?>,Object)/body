{
  if (obj != null) {
    if (obj instanceof GridOptimizedMarshallable) {
      GridOptimizedMarshallable m=(GridOptimizedMarshallable)obj;
      Object clsId=m.ggClassId();
      if (clsId != null && !(clsId instanceof GridOptimizedClassDescriptor))       throw new IOException("Method '" + obj.getClass().getName() + ".ggClassId() must return "+ "the value of the field '"+ CLS_ID_FIELD_NAME+ "'.");
      GridOptimizedClassDescriptor desc=(GridOptimizedClassDescriptor)clsId;
      if (desc == null) {
        desc=new GridOptimizedClassDescriptor(cls);
        try {
          Field field=obj.getClass().getDeclaredField(CLS_ID_FIELD_NAME);
          field.setAccessible(true);
          Object o=field.get(null);
          if (o == null) {
            if ((field.getModifiers() & Modifier.STATIC) == 0)             throw new IOException("Field '" + CLS_ID_FIELD_NAME + "' must be declared static: "+ obj.getClass().getName());
            field.set(null,desc);
            if (m.ggClassId() == null)             throw new IOException("Method '" + obj.getClass().getName() + ".ggClassId() must "+ "return the value of the field '"+ CLS_ID_FIELD_NAME+ "': "+ obj.getClass().getName());
          }
 else           if (!(o instanceof GridOptimizedClassDescriptor))           throw new IOException("Field '" + CLS_ID_FIELD_NAME + "' must be declared with "+ "null value: "+ obj.getClass().getName());
        }
 catch (        NoSuchFieldException e) {
          throw new IOException("GridOptimizedMarshallable classes must have static field declared " + "[fieldName=" + CLS_ID_FIELD_NAME + ", cls="+ obj.getClass().getName()+ ']',e);
        }
catch (        IllegalAccessException e) {
          throw new IOException("Failed to set field '" + CLS_ID_FIELD_NAME + "' on '"+ obj.getClass().getName()+ "' class.",e);
        }
      }
      return desc;
    }
  }
  GridOptimizedClassDescriptor desc=CLS_DESC_CACHE.get(cls);
  if (desc == null) {
    GridOptimizedClassDescriptor existing=CLS_DESC_CACHE.putIfAbsent(cls,desc=new GridOptimizedClassDescriptor(cls));
    if (existing != null)     desc=existing;
  }
  return desc;
}
