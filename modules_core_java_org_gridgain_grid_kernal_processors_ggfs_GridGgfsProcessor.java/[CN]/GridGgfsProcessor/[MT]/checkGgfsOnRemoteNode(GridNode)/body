{
  GridGgfsAttributes[] locAttrs=ctx.discovery().localNode().attribute(GridNodeAttributes.ATTR_GGFS);
  GridGgfsAttributes[] rmtAttrs=rmtNode.attribute(GridNodeAttributes.ATTR_GGFS);
  if (F.isEmpty(locAttrs) || F.isEmpty(rmtAttrs))   return;
  for (  GridGgfsAttributes rmtAttr : rmtAttrs)   for (  GridGgfsAttributes locAttr : locAttrs) {
    if (!F.eq(rmtAttr.ggfsName(),locAttr.ggfsName()))     continue;
    if (!F.eq(rmtAttr.blockSize(),locAttr.blockSize()))     throw new GridException("Data block size should be same on all nodes in grid " + "for GGFS configuration [rmtNodeId=" + rmtNode.id() + ", rmtBlockSize="+ rmtAttr.blockSize()+ ", locBlockSize="+ locAttr.blockSize()+ ", ggfsName="+ rmtAttr.ggfsName()+ ']');
    if (!F.eq(rmtAttr.groupSize(),locAttr.groupSize()))     throw new GridException("Affinity mapper group size should be the same on all nodes in " + "grid for GGFS configuration [rmtNodeId=" + rmtNode.id() + ", rmtGrpSize="+ rmtAttr.groupSize()+ ", locGrpSize="+ locAttr.groupSize()+ ", ggfsName="+ rmtAttr.ggfsName()+ ']');
    if (!F.eq(rmtAttr.metaCacheName(),locAttr.metaCacheName()))     throw new GridException("Meta cache name should be the same on all nodes in grid for GGFS " + "configuration [rmtNodeId=" + rmtNode.id() + ", rmtMetaCacheName="+ rmtAttr.metaCacheName()+ ", locMetaCacheName="+ locAttr.metaCacheName()+ ", ggfsName="+ rmtAttr.ggfsName()+ ']');
    if (!F.eq(rmtAttr.dataCacheName(),locAttr.dataCacheName()))     throw new GridException("Data cache name should be the same on all nodes in grid for GGFS " + "configuration [rmtNodeId=" + rmtNode.id() + ", rmtDataCacheName="+ rmtAttr.dataCacheName()+ ", locDataCacheName="+ locAttr.dataCacheName()+ ", ggfsName="+ rmtAttr.ggfsName()+ ']');
    if (!F.eq(rmtAttr.defaultMode(),locAttr.defaultMode()))     throw new GridException("Default mode should be the same on all nodes in grid for GGFS " + "configuration [rmtNodeId=" + rmtNode.id() + ", rmtDefaultMode="+ rmtAttr.defaultMode()+ ", locDefaultMode="+ locAttr.defaultMode()+ ", ggfsName="+ rmtAttr.ggfsName()+ ']');
    if (!F.eq(rmtAttr.pathModes(),locAttr.pathModes()))     throw new GridException("Path modes should be the same on all nodes in grid for GGFS " + "configuration [rmtNodeId=" + rmtNode.id() + ", rmtPathModes="+ rmtAttr.pathModes()+ ", locPathModes="+ locAttr.pathModes()+ ", ggfsName="+ rmtAttr.ggfsName()+ ']');
    if (!F.eq(rmtAttr.fragmentizerEnabled(),locAttr.fragmentizerEnabled()))     throw new GridException("Fragmentizer should be either enabled or disabled on " + "all nodes in grid for GGFS configuration [rmtNodeId=" + rmtNode.id() + ", rmtFragmentizerEnabled="+ rmtAttr.fragmentizerEnabled()+ ", locFragmentizerEnabled="+ locAttr.fragmentizerEnabled()+ ", ggfsName="+ rmtAttr.ggfsName()+ ']');
  }
}
