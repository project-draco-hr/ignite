{
  commState.setBuffer(buf);
  if (!super.writeTo(buf))   return false;
  if (!commState.typeWritten) {
    if (!commState.putByte(null,directType()))     return false;
    commState.typeWritten=true;
  }
switch (commState.idx) {
case 3:
    if (!commState.putLongList("drExpireTimes",drExpireTimes))     return false;
  commState.idx++;
case 4:
if (!commState.putLongList("drTtls",drTtls)) return false;
commState.idx++;
case 5:
if (drVers != null) {
if (commState.it == null) {
if (!commState.putInt(null,drVers.size())) return false;
commState.it=drVers.iterator();
}
while (commState.it.hasNext() || commState.cur != NULL) {
if (commState.cur == NULL) commState.cur=commState.it.next();
if (!commState.putCacheVersion(null,(GridCacheVersion)commState.cur)) return false;
commState.cur=NULL;
}
commState.it=null;
}
 else {
if (!commState.putInt(null,-1)) return false;
}
commState.idx++;
case 6:
if (!commState.putByteArray("expiryPlcBytes",expiryPlcBytes)) return false;
commState.idx++;
case 7:
if (!commState.putBoolean("fastMap",fastMap)) return false;
commState.idx++;
case 8:
if (filterBytes != null) {
if (commState.it == null) {
if (!commState.putInt(null,filterBytes.length)) return false;
commState.it=arrayIterator(filterBytes);
}
while (commState.it.hasNext() || commState.cur != NULL) {
if (commState.cur == NULL) commState.cur=commState.it.next();
if (!commState.putByteArray(null,(byte[])commState.cur)) return false;
commState.cur=NULL;
}
commState.it=null;
}
 else {
if (!commState.putInt(null,-1)) return false;
}
commState.idx++;
case 9:
if (!commState.putCacheVersion("futVer",futVer)) return false;
commState.idx++;
case 10:
if (!commState.putBoolean("hasPrimary",hasPrimary)) return false;
commState.idx++;
case 11:
if (invokeArgsBytes != null) {
if (commState.it == null) {
if (!commState.putInt(null,invokeArgsBytes.length)) return false;
commState.it=arrayIterator(invokeArgsBytes);
}
while (commState.it.hasNext() || commState.cur != NULL) {
if (commState.cur == NULL) commState.cur=commState.it.next();
if (!commState.putByteArray(null,(byte[])commState.cur)) return false;
commState.cur=NULL;
}
commState.it=null;
}
 else {
if (!commState.putInt(null,-1)) return false;
}
commState.idx++;
case 12:
if (keyBytes != null) {
if (commState.it == null) {
if (!commState.putInt(null,keyBytes.size())) return false;
commState.it=keyBytes.iterator();
}
while (commState.it.hasNext() || commState.cur != NULL) {
if (commState.cur == NULL) commState.cur=commState.it.next();
if (!commState.putByteArray(null,(byte[])commState.cur)) return false;
commState.cur=NULL;
}
commState.it=null;
}
 else {
if (!commState.putInt(null,-1)) return false;
}
commState.idx++;
case 13:
if (!commState.putEnum("op",op)) return false;
commState.idx++;
case 14:
if (!commState.putBoolean("retval",retval)) return false;
commState.idx++;
case 15:
if (!commState.putEnum("syncMode",syncMode)) return false;
commState.idx++;
case 16:
if (!commState.putLong("topVer",topVer)) return false;
commState.idx++;
case 17:
if (!commState.putCacheVersion("updateVer",updateVer)) return false;
commState.idx++;
case 18:
if (valBytes != null) {
if (commState.it == null) {
if (!commState.putInt(null,valBytes.size())) return false;
commState.it=valBytes.iterator();
}
while (commState.it.hasNext() || commState.cur != NULL) {
if (commState.cur == NULL) commState.cur=commState.it.next();
if (!commState.putValueBytes(null,(GridCacheValueBytes)commState.cur)) return false;
commState.cur=NULL;
}
commState.it=null;
}
 else {
if (!commState.putInt(null,-1)) return false;
}
commState.idx++;
case 19:
if (!commState.putBoolean("forceTransformBackups",forceTransformBackups)) return false;
commState.idx++;
case 20:
if (!commState.putUuid("subjId",subjId)) return false;
commState.idx++;
case 21:
if (!commState.putInt("taskNameHash",taskNameHash)) return false;
commState.idx++;
}
return true;
}
