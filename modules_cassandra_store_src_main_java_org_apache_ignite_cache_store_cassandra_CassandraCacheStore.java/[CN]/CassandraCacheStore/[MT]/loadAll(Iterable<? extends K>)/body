{
  if (keys == null || !keys.iterator().hasNext())   return new HashMap<>();
  CassandraSession ses=getCassandraSession();
  try {
    return ses.execute(new GenericBatchExecutionAssistant<Map<K,V>,K>(){
      private Map<K,V> data=new HashMap<>();
      /** 
 * {@inheritDoc} 
 */
      @Override public String getTable(){
        return cassandraTable();
      }
      /** 
 * {@inheritDoc} 
 */
      @Override public String getStatement(){
        return controller.getLoadStatement(cassandraTable(),true);
      }
      /** 
 * {@inheritDoc} 
 */
      @Override public BoundStatement bindStatement(      PreparedStatement statement,      K key){
        return controller.bindKey(statement,key);
      }
      /** 
 * {@inheritDoc} 
 */
      @Override public KeyValuePersistenceSettings getPersistenceSettings(){
        return controller.getPersistenceSettings();
      }
      /** 
 * {@inheritDoc} 
 */
      @Override public String operationName(){
        return "BULK_READ";
      }
      /** 
 * {@inheritDoc} 
 */
      @Override public Map<K,V> processedData(){
        return data;
      }
      /** 
 * {@inheritDoc} 
 */
      @Override protected void process(      Row row){
        data.put((K)controller.buildKeyObject(row),(V)controller.buildValueObject(row));
      }
    }
,keys);
  }
  finally {
    closeCassandraSession(ses);
  }
}
