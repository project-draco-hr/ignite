{
  if (readSize == -1) {
    int size=readInt();
    if (!lastFinished)     return null;
    readSize=size;
  }
  if (readSize >= 0) {
    if (map == null)     map=linked ? U.newLinkedHashMap(readSize) : U.newHashMap(readSize);
    Type keyType=type(keyCls);
    Type valType=type(valCls);
    for (int i=readItems; i < readSize; i++) {
      if (!keyDone) {
        Object key=read(keyType);
        if (!lastFinished)         return null;
        cur=key;
        keyDone=true;
      }
      Object val=read(valType);
      if (!lastFinished)       return null;
      map.put(cur,val);
      keyDone=false;
      readItems++;
    }
  }
  readSize=-1;
  readItems=0;
  cur=null;
  Map<K,V> map0=(Map<K,V>)map;
  map=null;
  return (M)map0;
}
