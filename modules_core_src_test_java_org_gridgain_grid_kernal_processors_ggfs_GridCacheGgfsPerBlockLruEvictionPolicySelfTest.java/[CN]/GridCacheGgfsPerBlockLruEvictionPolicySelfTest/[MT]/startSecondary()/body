{
  IgniteFsConfiguration ggfsCfg=new IgniteFsConfiguration();
  ggfsCfg.setDataCacheName("dataCache");
  ggfsCfg.setMetaCacheName("metaCache");
  ggfsCfg.setName(GGFS_SECONDARY);
  ggfsCfg.setBlockSize(512);
  ggfsCfg.setDefaultMode(PRIMARY);
  ggfsCfg.setIpcEndpointConfiguration(SECONDARY_REST_CFG);
  GridCacheConfiguration dataCacheCfg=defaultCacheConfiguration();
  dataCacheCfg.setName("dataCache");
  dataCacheCfg.setCacheMode(PARTITIONED);
  dataCacheCfg.setDistributionMode(GridCacheDistributionMode.PARTITIONED_ONLY);
  dataCacheCfg.setWriteSynchronizationMode(GridCacheWriteSynchronizationMode.FULL_SYNC);
  dataCacheCfg.setAffinityMapper(new IgniteFsGroupDataBlocksKeyMapper(128));
  dataCacheCfg.setBackups(0);
  dataCacheCfg.setQueryIndexEnabled(false);
  dataCacheCfg.setAtomicityMode(TRANSACTIONAL);
  GridCacheConfiguration metaCacheCfg=defaultCacheConfiguration();
  metaCacheCfg.setName("metaCache");
  metaCacheCfg.setCacheMode(REPLICATED);
  metaCacheCfg.setDistributionMode(GridCacheDistributionMode.PARTITIONED_ONLY);
  metaCacheCfg.setWriteSynchronizationMode(GridCacheWriteSynchronizationMode.FULL_SYNC);
  metaCacheCfg.setQueryIndexEnabled(false);
  metaCacheCfg.setAtomicityMode(TRANSACTIONAL);
  IgniteConfiguration cfg=new IgniteConfiguration();
  cfg.setGridName("grid-secondary");
  TcpDiscoverySpi discoSpi=new TcpDiscoverySpi();
  discoSpi.setIpFinder(new TcpDiscoveryVmIpFinder(true));
  cfg.setDiscoverySpi(discoSpi);
  cfg.setCacheConfiguration(dataCacheCfg,metaCacheCfg);
  cfg.setGgfsConfiguration(ggfsCfg);
  cfg.setLocalHost("127.0.0.1");
  cfg.setRestEnabled(false);
  Ignite g=G.start(cfg);
  secondaryFs=g.fileSystem(GGFS_SECONDARY);
}
