{
  final Ignite ignite1=ignite(1);
  assertTrue(ignite1.configuration().isClientMode());
  ignite1.createNearCache(null,new NearCacheConfiguration<>());
  IgniteInternalFuture<?> fut1=GridTestUtils.runMultiThreadedAsync(new Callable<Object>(){
    @Override public Object call() throws Exception {
      IgniteCache cache=ignite1.cache(null);
      int key=1;
      for (int i=0; i < 100; i++)       cache.put(key,1);
      return null;
    }
  }
,5,"put1-thread");
  IgniteInternalFuture<?> fut2=GridTestUtils.runMultiThreadedAsync(new Callable<Object>(){
    @Override public Object call() throws Exception {
      IgniteCache cache=ignite1.cache(null);
      int key=1;
      IgniteTransactions txs=ignite1.transactions();
      for (int i=0; i < 100; i++) {
        try (Transaction tx=txs.txStart(PESSIMISTIC,REPEATABLE_READ)){
          cache.get(key);
          cache.put(key,1);
          tx.commit();
        }
       }
      return null;
    }
  }
,5,"put2-thread");
  fut1.get();
  fut2.get();
}
