{
  if (log.isDebugEnabled())   log.debug("Before locally locking keys : " + keys);
  IgniteInternalFuture<Exception> fut=cctx.colocated().lockAllAsync(cctx,tx,threadId,lockVer,topVer,keys,read,retval,timeout,accessTtl,filter,skipStore);
  add(new GridEmbeddedFuture<>(new C2<Exception,Exception,Boolean>(){
    @Override public Boolean apply(    Exception resEx,    Exception e){
      if (CU.isLockTimeoutOrCancelled(e) || (resEx != null && CU.isLockTimeoutOrCancelled(resEx)))       return false;
      if (e != null) {
        onError(e);
        return false;
      }
      if (resEx != null) {
        onError(resEx);
        return false;
      }
      if (log.isDebugEnabled())       log.debug("Acquired lock for local DHT mapping [locId=" + cctx.nodeId() + ", mappedKeys="+ keys+ ", fut="+ GridDhtColocatedLockFuture.this+ ']');
      if (inTx()) {
        for (        KeyCacheObject key : keys)         tx.entry(cctx.txKey(key)).markLocked();
      }
 else {
        for (        KeyCacheObject key : keys)         cctx.mvcc().markExplicitOwner(cctx.txKey(key),threadId);
      }
      try {
        if (mappings != null)         proceedMapping();
      }
 catch (      IgniteCheckedException ex) {
        onError(ex);
        return false;
      }
      return true;
    }
  }
,fut));
}
