{
  try {
    JobConf cfg=ctx.getJobConf();
    String mrDir=cfg.get("mapreduce.job.dir");
    if (mrDir != null) {
      if (download) {
        Path path=new Path(new URI(mrDir));
        FileSystem fs=FileSystem.get(path.toUri(),cfg);
        if (!fs.exists(path))         throw new GridException("Failed to find map-reduce submission directory (does not exist): " + path);
        if (jobLocDir.exists())         throw new GridException("Local job directory already exists: " + jobLocDir.getAbsolutePath());
        if (!FileUtil.copy(fs,path,jobLocDir,false,cfg))         throw new GridException("Failed to copy job submission directory contents to local file system " + "[path=" + path + ", locDir="+ jobLocDir.getAbsolutePath()+ ", jobId="+ jobId+ ']');
      }
      clsPath.add(new File(jobLocDir,"job.jar").toURI().toURL());
      processFiles(ctx.getCacheFiles(),download,false,false);
      processFiles(ctx.getCacheArchives(),download,true,false);
      processFiles(ctx.getFileClassPaths(),download,false,true);
      processFiles(ctx.getArchiveClassPaths(),download,true,true);
    }
  }
 catch (  URISyntaxException|IOException e) {
    throw new GridException(e);
  }
}
