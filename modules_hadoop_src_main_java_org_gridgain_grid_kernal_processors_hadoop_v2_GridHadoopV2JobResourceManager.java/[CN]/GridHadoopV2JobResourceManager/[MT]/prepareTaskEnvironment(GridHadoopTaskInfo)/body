{
  File locDir=localDir(info);
  try {
    if (info != null) {
      if (locDir.exists())       throw new IOException("Task local directory already exists");
      if (!locDir.mkdir())       throw new IOException("Failed to create directory");
      for (      File resource : rsrcList) {
        File symLink=new File(locDir,resource.getName());
        try {
          Files.createSymbolicLink(symLink.toPath(),resource.toPath());
        }
 catch (        IOException e) {
          String msg="Unable to create symlink \"" + symLink + "\" to \""+ resource+ "\".\n";
          if (U.isWindows() && e instanceof FileSystemException)           msg+="Ability to create symbolic links is required!\n" + "On Windows platform you have to grant permission 'Create symbolic links'\n" + "to your user or run the Accelerator as Administrator.";
          throw new IOException(msg,e);
        }
      }
    }
    FileSystem.getLocal(ctx.getJobConf()).setWorkingDirectory(new Path(locDir.getAbsolutePath()));
  }
 catch (  IOException e) {
    throw new GridException("Unable to prepare local working directory for the task " + "[path=" + locDir + ", jobId="+ jobId+ ", task="+ info+ ']',e);
  }
}
