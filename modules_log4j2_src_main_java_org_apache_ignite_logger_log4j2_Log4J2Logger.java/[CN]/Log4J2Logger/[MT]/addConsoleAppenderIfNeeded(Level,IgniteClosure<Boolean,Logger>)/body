{
  if (inited) {
    if (implInitC != null)     impl=implInitC.apply(false);
    return;
  }
synchronized (mux) {
    if (inited) {
      if (implInitC != null)       impl=implInitC.apply(false);
      return;
    }
    if (implInitC != null)     impl=implInitC.apply(true);
    boolean quiet=isQuiet();
    Logger clog=LogManager.getLogger("CONSOLE");
    if (clog == null) {
      ConsoleAppender console=ConsoleAppender.createAppender(PatternLayout.createDefaultLayout(),null,"CONSOLE","console",null,null);
      final LoggerContext ctx=(LoggerContext)new org.apache.logging.log4j.core.LoggerContext("console");
      final Configuration config=((org.apache.logging.log4j.core.LoggerContext)ctx).getConfiguration();
      config.addAppender(console);
      AppenderRef ref=AppenderRef.createAppenderRef("console",logLevel,null);
      AppenderRef[] refs=new AppenderRef[]{ref};
      LoggerConfig loggerConfig=LoggerConfig.createLogger("false",logLevel,"org.apache.logging.log4j","true",refs,null,config,null);
      loggerConfig.addAppender(console,null,null);
      config.addLogger("org.apache.logging.log4j",loggerConfig);
      ((org.apache.logging.log4j.core.LoggerContext)ctx).updateLoggers();
    }
    quiet0=quiet;
    inited=true;
  }
}
