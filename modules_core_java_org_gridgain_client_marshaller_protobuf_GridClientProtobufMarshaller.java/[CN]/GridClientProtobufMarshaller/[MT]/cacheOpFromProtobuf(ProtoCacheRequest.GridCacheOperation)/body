{
switch (val) {
case PUT:
    return GridClientCacheRequest.GridCacheOperation.PUT;
case PUT_ALL:
  return GridClientCacheRequest.GridCacheOperation.PUT_ALL;
case GET:
return GridClientCacheRequest.GridCacheOperation.GET;
case GET_ALL:
return GridClientCacheRequest.GridCacheOperation.GET_ALL;
case RMV:
return GridClientCacheRequest.GridCacheOperation.RMV;
case RMV_ALL:
return GridClientCacheRequest.GridCacheOperation.RMV_ALL;
case REPLACE:
return GridClientCacheRequest.GridCacheOperation.REPLACE;
case CAS:
return GridClientCacheRequest.GridCacheOperation.CAS;
case METRICS:
return GridClientCacheRequest.GridCacheOperation.METRICS;
case APPEND:
return GridClientCacheRequest.GridCacheOperation.APPEND;
case PREPEND:
return GridClientCacheRequest.GridCacheOperation.PREPEND;
default :
throw new IllegalArgumentException("Unsupported cache operation: " + val);
}
}
