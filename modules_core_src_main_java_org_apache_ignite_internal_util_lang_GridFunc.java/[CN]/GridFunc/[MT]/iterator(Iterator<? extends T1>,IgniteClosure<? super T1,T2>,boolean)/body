{
  A.notNull(c,"c",trans,"trans");
  return new GridIteratorAdapter<T2>(){
    /** 
 */
    private Iterator<? extends T1> iter=c;
    @Override public boolean hasNextX(){
      return iter.hasNext();
    }
    @Nullable @Override public T2 nextX(){
      return trans.apply(iter.next());
    }
    @Override public void removeX(){
      if (readOnly)       throw new UnsupportedOperationException("Cannot modify read-only iterator.");
      iter.remove();
    }
  }
;
}
