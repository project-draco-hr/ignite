{
  assertTrue(Arrays.equals(new byte[0],U.readByteArray(ByteBuffer.allocate(0))));
  assertTrue(Arrays.equals(new byte[0],U.readByteArray(ByteBuffer.allocate(0),ByteBuffer.allocate(0))));
  Random rnd=new Random();
  byte[] bytes=new byte[13];
  rnd.nextBytes(bytes);
  assertTrue(Arrays.equals(bytes,U.readByteArray(ByteBuffer.wrap(bytes))));
  assertTrue(Arrays.equals(bytes,U.readByteArray(ByteBuffer.wrap(bytes),ByteBuffer.allocate(0))));
  assertTrue(Arrays.equals(bytes,U.readByteArray(ByteBuffer.allocate(0),ByteBuffer.wrap(bytes))));
  for (int i=0; i < 1000; i++) {
    int n=rnd.nextInt(100);
    bytes=new byte[n];
    rnd.nextBytes(bytes);
    ByteBuffer[] bufs=new ByteBuffer[1 + rnd.nextInt(10)];
    int x=0;
    for (int j=0; j < bufs.length - 1; j++) {
      int size=x == n ? 0 : rnd.nextInt(n - x);
      bufs[j]=(ByteBuffer)ByteBuffer.wrap(bytes).position(x).limit(x+=size);
    }
    bufs[bufs.length - 1]=(ByteBuffer)ByteBuffer.wrap(bytes).position(x).limit(n);
    assertTrue(Arrays.equals(bytes,U.readByteArray(bufs)));
  }
}
