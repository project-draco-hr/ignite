{
  reader.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (readState) {
case 3:
    accessTtl=reader.readLong("accessTtl");
  if (!reader.isLastRead())   return false;
readState++;
case 4:
futId=reader.readIgniteUuid("futId");
if (!reader.isLastRead()) return false;
readState++;
case 5:
keyBytes=reader.readMap("keyBytes",byte[].class,boolean.class,true);
if (!reader.isLastRead()) return false;
readState++;
case 6:
miniId=reader.readIgniteUuid("miniId");
if (!reader.isLastRead()) return false;
readState++;
case 7:
readThrough=reader.readBoolean("readThrough");
if (!reader.isLastRead()) return false;
readState++;
case 8:
reload=reader.readBoolean("reload");
if (!reader.isLastRead()) return false;
readState++;
case 9:
subjId=reader.readUuid("subjId");
if (!reader.isLastRead()) return false;
readState++;
case 10:
taskNameHash=reader.readInt("taskNameHash");
if (!reader.isLastRead()) return false;
readState++;
case 11:
topVer=reader.readLong("topVer");
if (!reader.isLastRead()) return false;
readState++;
case 12:
ver=reader.readMessage("ver");
if (!reader.isLastRead()) return false;
readState++;
case 13:
skipVals=reader.readBoolean("skipVals");
if (!reader.isLastRead()) return false;
readState++;
}
return true;
}
