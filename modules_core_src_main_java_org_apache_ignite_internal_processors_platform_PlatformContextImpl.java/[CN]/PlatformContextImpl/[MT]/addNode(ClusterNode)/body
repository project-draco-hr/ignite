{
  if (node == null || sentNodes.contains(node.id()))   return;
  try (PlatformMemory mem0=mem.allocate()){
    PlatformOutputStream out=mem0.output();
    PortableRawWriterEx w=writer(out);
    w.writeUuid(node.id());
    Map<String,Object> attrs=new HashMap<>(node.attributes());
    Iterator<Map.Entry<String,Object>> attrIter=attrs.entrySet().iterator();
    while (attrIter.hasNext()) {
      Map.Entry<String,Object> entry=attrIter.next();
      Object val=entry.getValue();
      if (val != null && !val.getClass().getName().startsWith("java.lang"))       attrIter.remove();
    }
    w.writeMap(attrs);
    w.writeCollection(node.addresses());
    w.writeCollection(node.hostNames());
    w.writeLong(node.order());
    w.writeBoolean(node.isLocal());
    w.writeBoolean(node.isDaemon());
    w.writeBoolean(node.isClient());
    writeClusterMetrics(w,node.metrics());
    out.synchronize();
    gateway().nodeInfo(mem0.pointer());
  }
   sentNodes.add(node.id());
}
