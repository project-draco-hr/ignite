{
  Collection<Metadata> metas=PlatformUtils.readCollection(reader,new PlatformReaderClosure<Metadata>(){
    @Override public Metadata read(    BinaryRawReaderEx reader){
      int typeId=reader.readInt();
      String typeName=reader.readString();
      String affKey=reader.readString();
      Map<String,Integer> fields=PlatformUtils.readMap(reader,new PlatformReaderBiClosure<String,Integer>(){
        @Override public IgniteBiTuple<String,Integer> read(        BinaryRawReaderEx reader){
          return F.t(reader.readString(),reader.readInt());
        }
      }
);
      boolean isEnum=reader.readBoolean();
      int schemaCnt=reader.readInt();
      List<BinarySchema> schemas=null;
      if (schemaCnt > 0) {
        schemas=new ArrayList<>(schemaCnt);
        for (int i=0; i < schemaCnt; i++) {
          int id=reader.readInt();
          int fieldCnt=reader.readInt();
          List<Integer> fieldIds=new ArrayList<>(fieldCnt);
          for (int j=0; j < fieldCnt; j++)           fieldIds.add(reader.readInt());
          schemas.add(new BinarySchema(id,fieldIds));
        }
      }
      return new Metadata(typeId,typeName,affKey,fields,isEnum,schemas);
    }
  }
);
  BinaryContext binCtx=cacheObjProc.binaryContext();
  for (  Metadata meta : metas)   binCtx.updateMetadata(meta.typeId,new BinaryMetadata(meta.typeId,meta.typeName,meta.fields,meta.affKey,meta.schemas,meta.isEnum));
}
