{
  while (true) {
    final long right=unsharedRight(holder,unlinked);
    if (right == 0) {
      return null;
    }
 else {
      final long ovl=shrinkOVL(right);
      if (isShrinkingOrUnlinked(ovl)) {
        waitUntilShrinkCompleted(right,ovl);
      }
 else       if (right == right(holder)) {
        final Map.Entry<K,V> result=attemptRemoveExtreme(dir,holder,right,ovl,unlinked);
        if (result != SpecialRetry) {
          return result;
        }
      }
    }
  }
}
