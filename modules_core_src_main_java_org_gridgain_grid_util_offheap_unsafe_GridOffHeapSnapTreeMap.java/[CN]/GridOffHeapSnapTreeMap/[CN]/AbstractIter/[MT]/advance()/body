{
  do {
    final long t=top();
    if (endKey != null && endKey.equals(key(t))) {
      depth=0;
      path=null;
      return;
    }
    final long fwd=child(t,forward);
    if (fwd != 0) {
      pushFirst(fwd);
    }
 else {
      long popped;
      do {
        popped=path[--depth];
      }
 while (depth > 0 && popped == child(top(),forward));
    }
    if (depth == 0) {
      path=null;
      return;
    }
  }
 while (vOptIsNull(top()));
}
