{
  final Comparable<? super K> fromCmp=fromKey == null ? null : m.comparable(fromKey);
  final Comparable<? super K> toCmp=toKey == null ? null : m.comparable(toKey);
  if (fromKey != null && toKey != null) {
    final int c=fromCmp.compareTo(toKey);
    if ((!descending ? c > 0 : c < 0)) {
      throw new IllegalArgumentException();
    }
  }
  GridOffHeapSmartPointer minK=minKey;
  Comparable<? super K> minC=minCmp;
  boolean minI=minIncl;
  GridOffHeapSmartPointer maxK=maxKey;
  Comparable<? super K> maxC=maxCmp;
  boolean maxI=maxIncl;
  if (fromKey != null) {
    if (!descending) {
      minK=fromKey;
      minC=fromCmp;
      minI=fromIncl;
    }
 else {
      maxK=fromKey;
      maxC=fromCmp;
      maxI=fromIncl;
    }
  }
  if (toKey != null) {
    if (!descending) {
      maxK=toKey;
      maxC=toCmp;
      maxI=toIncl;
    }
 else {
      minK=toKey;
      minC=toCmp;
      minI=toIncl;
    }
  }
  return new SubMap(m,minK,minC,minI,maxK,maxC,maxI,descending);
}
