{
  commState.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (commState.idx) {
case 3:
    if (commState.readSize == -1) {
      int _val=commState.getInt(null);
      if (!commState.lastRead())       return false;
      commState.readSize=_val;
    }
  if (commState.readSize >= 0) {
    if (parts == null)     parts=new HashSet<>(commState.readSize);
    for (int i=commState.readItems; i < commState.readSize; i++) {
      int _val=commState.getInt(null);
      if (!commState.lastRead())       return false;
      parts.add((Integer)_val);
      commState.readItems++;
    }
  }
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 4:
timeout=commState.getLong("timeout");
if (!commState.lastRead()) return false;
commState.idx++;
case 5:
topVer=commState.getLong("topVer");
if (!commState.lastRead()) return false;
commState.idx++;
case 6:
topicBytes=commState.getByteArray("topicBytes");
if (!commState.lastRead()) return false;
commState.idx++;
case 7:
updateSeq=commState.getLong("updateSeq");
if (!commState.lastRead()) return false;
commState.idx++;
case 8:
workerId=commState.getInt("workerId");
if (!commState.lastRead()) return false;
commState.idx++;
}
return true;
}
