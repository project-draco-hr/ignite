{
  try {
    startGridsMultiThreaded(5);
    Long startTime=null;
    GridKernal firstGrid=null;
    Collection<GridKernal> grids=new ArrayList<>();
    for (int i=0; i < 5; i++) {
      GridKernal grid=(GridKernal)grid(i);
      assertTrue(grid.context().discovery().gridStartTime() > 0);
      if (i > 0)       assertEquals(startTime,(Long)grid.context().discovery().gridStartTime());
 else       startTime=grid.context().discovery().gridStartTime();
      if (grid.localNode().order() == 1)       firstGrid=grid;
 else       grids.add(grid);
    }
    assertNotNull(firstGrid);
    stopGrid(firstGrid.name());
    for (    GridKernal grid : grids)     assertEquals(startTime,(Long)grid.context().discovery().gridStartTime());
    grids.add((GridKernal)startGrid(5));
    for (    GridKernal grid : grids)     assertEquals(startTime,(Long)grid.context().discovery().gridStartTime());
  }
  finally {
    stopAllGrids();
  }
}
