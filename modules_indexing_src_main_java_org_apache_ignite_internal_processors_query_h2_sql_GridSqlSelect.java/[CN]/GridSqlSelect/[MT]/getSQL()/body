{
  StatementBuilder buff=new StatementBuilder(explain() ? "EXPLAIN SELECT" : "SELECT");
  if (distinct)   buff.append(" DISTINCT");
  for (  GridSqlElement expression : select) {
    buff.appendExceptFirst(",");
    buff.append('\n');
    buff.append(StringUtils.indent(expression.getSQL(),4,false));
  }
  buff.append("\nFROM ").append(from.getSQL());
  if (where != null)   buff.append("\nWHERE ").append(StringUtils.unEnclose(where.getSQL()));
  if (grpCols != null) {
    buff.append("\nGROUP BY ");
    buff.resetCount();
    for (    int grpCol : grpCols) {
      GridSqlElement expression=allExprs.get(grpCol);
      buff.appendExceptFirst(", ");
      if (expression instanceof GridSqlAlias)       buff.append(StringUtils.unEnclose((expression.child().getSQL())));
 else       buff.append(StringUtils.unEnclose(expression.getSQL()));
    }
  }
  if (havingCol >= 0)   buff.append("\nHAVING ").append(StringUtils.unEnclose(allExprs.get(havingCol).getSQL()));
  getSortLimitSQL(buff);
  return buff.toString();
}
