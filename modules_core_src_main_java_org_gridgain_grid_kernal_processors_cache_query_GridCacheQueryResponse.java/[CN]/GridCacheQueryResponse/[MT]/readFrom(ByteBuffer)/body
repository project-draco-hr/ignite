{
  commState.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (commState.idx) {
case 3:
    if (commState.readSize == -1) {
      if (buf.remaining() < 4)       return false;
      commState.readSize=commState.getInt(null);
    }
  if (commState.readSize >= 0) {
    if (dataBytes == null)     dataBytes=new ArrayList<>(commState.readSize);
    for (int i=commState.readItems; i < commState.readSize; i++) {
      byte[] _val=commState.getByteArray(null);
      if (_val == BYTE_ARR_NOT_READ)       return false;
      dataBytes.add((byte[])_val);
      commState.readItems++;
    }
  }
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 4:
byte[] errBytes0=commState.getByteArray("errBytes");
if (errBytes0 == BYTE_ARR_NOT_READ) return false;
errBytes=errBytes0;
commState.idx++;
case 5:
if (buf.remaining() < 1) return false;
fields=commState.getBoolean("fields");
commState.idx++;
case 6:
if (buf.remaining() < 1) return false;
finished=commState.getBoolean("finished");
commState.idx++;
case 7:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt(null);
}
if (commState.readSize >= 0) {
if (metaDataBytes == null) metaDataBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
byte[] _val=commState.getByteArray(null);
if (_val == BYTE_ARR_NOT_READ) return false;
metaDataBytes.add((byte[])_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 8:
if (buf.remaining() < 8) return false;
reqId=commState.getLong("reqId");
commState.idx++;
}
return true;
}
