{
  Connection conn=store.openConnection(false);
  Statement stmt=conn.createStatement();
  try {
    stmt.executeUpdate("delete from String_Entries");
  }
 catch (  SQLException ignore) {
  }
  try {
    stmt.executeUpdate("delete from UUID_Entries");
  }
 catch (  SQLException ignore) {
  }
  try {
    stmt.executeUpdate("delete from Organization");
  }
 catch (  SQLException ignore) {
  }
  try {
    stmt.executeUpdate("delete from Person");
  }
 catch (  SQLException ignore) {
  }
  stmt.executeUpdate("CREATE TABLE IF NOT EXISTS String_Entries (key varchar(100) not null, val varchar(100), PRIMARY KEY(key))");
  stmt.executeUpdate("CREATE TABLE IF NOT EXISTS UUID_Entries (key binary(16) not null, val binary(16), PRIMARY KEY(key))");
  stmt.executeUpdate("CREATE TABLE IF NOT EXISTS Organization (id integer not null, name varchar(50), city varchar(50), PRIMARY KEY(id))");
  stmt.executeUpdate("CREATE TABLE IF NOT EXISTS Person (id integer not null, org_id integer, name varchar(50), PRIMARY KEY(id))");
  stmt.executeUpdate("CREATE TABLE IF NOT EXISTS Person_Complex (id integer not null, org_id integer not null, city_id integer not null, name varchar(50), PRIMARY KEY(id))");
  conn.commit();
  U.closeQuiet(stmt);
  U.closeQuiet(conn);
  super.beforeTest();
}
