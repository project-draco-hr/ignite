{
  CacheJdbcPojoStore<Object,Object> store=store();
  store.setDialect(new H2Dialect(){
    /** 
 * {@inheritDoc} 
 */
    @Override public boolean hasMerge(){
      return false;
    }
    /** 
 * {@inheritDoc} 
 */
    @Override public String updateQuery(    String tblName,    Collection<String> keyCols,    Iterable<String> valCols){
      return super.updateQuery(tblName,keyCols,valCols) + " AND 1 = 0";
    }
  }
);
  inject(store);
  Connection conn=store.openConnection(false);
  PreparedStatement orgStmt=conn.prepareStatement("INSERT INTO Organization(id, name, city) VALUES (?, ?, ?)");
  orgStmt.setInt(1,1);
  orgStmt.setString(2,"name" + 1);
  orgStmt.setString(3,"city" + 1);
  orgStmt.executeUpdate();
  U.closeQuiet(orgStmt);
  conn.commit();
  OrganizationKey k1=new OrganizationKey(1);
  Organization v1=new Organization(1,"Name1","City1");
  ses.newSession(null);
  try {
    store.write(new CacheEntryImpl<>(k1,v1));
    fail("CacheWriterException wasn't thrown.");
  }
 catch (  CacheWriterException e) {
    if (!e.getMessage().startsWith("Failed insert entry in database, violate a unique index or primary key") || e.getSuppressed().length != 2)     throw e;
  }
}
