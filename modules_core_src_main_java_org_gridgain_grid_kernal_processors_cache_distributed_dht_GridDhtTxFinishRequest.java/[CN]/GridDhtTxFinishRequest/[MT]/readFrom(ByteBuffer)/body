{
  commState.setBuffer(buf);
  if (!super.readFrom(buf))   return false;
switch (commState.idx) {
case 20:
    if (buf.remaining() < 1)     return false;
  byte isolation0=commState.getByte("isolation");
isolation=GridCacheTxIsolation.fromOrdinal(isolation0);
commState.idx++;
case 21:
IgniteUuid miniId0=commState.getGridUuid("miniId");
if (miniId0 == GRID_UUID_NOT_READ) return false;
miniId=miniId0;
commState.idx++;
case 22:
UUID nearNodeId0=commState.getUuid("nearNodeId");
if (nearNodeId0 == UUID_NOT_READ) return false;
nearNodeId=nearNodeId0;
commState.idx++;
case 23:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt(null);
}
if (commState.readSize >= 0) {
if (nearWritesBytes == null) nearWritesBytes=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
byte[] _val=commState.getByteArray(null);
if (_val == BYTE_ARR_NOT_READ) return false;
nearWritesBytes.add((byte[])_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 24:
if (buf.remaining() < 1) return false;
onePhaseCommit=commState.getBoolean("onePhaseCommit");
commState.idx++;
case 25:
if (commState.readSize == -1) {
if (buf.remaining() < 4) return false;
commState.readSize=commState.getInt(null);
}
if (commState.readSize >= 0) {
if (pendingVers == null) pendingVers=new ArrayList<>(commState.readSize);
for (int i=commState.readItems; i < commState.readSize; i++) {
GridCacheVersion _val=commState.getCacheVersion(null);
if (_val == CACHE_VER_NOT_READ) return false;
pendingVers.add((GridCacheVersion)_val);
commState.readItems++;
}
}
commState.readSize=-1;
commState.readItems=0;
commState.idx++;
case 26:
if (buf.remaining() < 1) return false;
sysInvalidate=commState.getBoolean("sysInvalidate");
commState.idx++;
case 27:
if (buf.remaining() < 8) return false;
topVer=commState.getLong("topVer");
commState.idx++;
case 28:
GridCacheVersion writeVer0=commState.getCacheVersion("writeVer");
if (writeVer0 == CACHE_VER_NOT_READ) return false;
writeVer=writeVer0;
commState.idx++;
case 29:
UUID subjId0=commState.getUuid("subjId");
if (subjId0 == UUID_NOT_READ) return false;
subjId=subjId0;
commState.idx++;
case 30:
if (buf.remaining() < 4) return false;
taskNameHash=commState.getInt("taskNameHash");
commState.idx++;
}
return true;
}
