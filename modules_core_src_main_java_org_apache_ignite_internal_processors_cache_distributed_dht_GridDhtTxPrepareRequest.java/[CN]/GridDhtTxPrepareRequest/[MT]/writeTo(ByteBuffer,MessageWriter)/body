{
  writer.setBuffer(buf);
  if (!super.writeTo(buf,writer))   return false;
  if (!writer.isTypeWritten()) {
    if (!writer.writeMessageType(directType()))     return false;
    writer.onTypeWritten();
  }
switch (writer.state()) {
case 22:
    if (!writer.writeField("futId",futId,MessageFieldType.IGNITE_UUID))     return false;
  writer.incrementState();
case 23:
if (!writer.writeField("invalidateNearEntries",invalidateNearEntries,MessageFieldType.BIT_SET)) return false;
writer.incrementState();
case 24:
if (!writer.writeField("last",last,MessageFieldType.BOOLEAN)) return false;
writer.incrementState();
case 25:
if (!writer.writeField("miniId",miniId,MessageFieldType.IGNITE_UUID)) return false;
writer.incrementState();
case 26:
if (!writer.writeField("nearNodeId",nearNodeId,MessageFieldType.UUID)) return false;
writer.incrementState();
case 27:
if (!writer.writeCollectionField("nearWritesBytes",nearWritesBytes,MessageFieldType.BYTE_ARR)) return false;
writer.incrementState();
case 28:
if (!writer.writeField("nearXidVer",nearXidVer,MessageFieldType.MSG)) return false;
writer.incrementState();
case 29:
if (!writer.writeField("ownedBytes",ownedBytes,MessageFieldType.BYTE_ARR)) return false;
writer.incrementState();
case 30:
if (!writer.writeField("preloadKeys",preloadKeys,MessageFieldType.BIT_SET)) return false;
writer.incrementState();
case 31:
if (!writer.writeField("subjId",subjId,MessageFieldType.UUID)) return false;
writer.incrementState();
case 32:
if (!writer.writeField("taskNameHash",taskNameHash,MessageFieldType.INT)) return false;
writer.incrementState();
case 33:
if (!writer.writeField("topVer",topVer,MessageFieldType.LONG)) return false;
writer.incrementState();
}
return true;
}
