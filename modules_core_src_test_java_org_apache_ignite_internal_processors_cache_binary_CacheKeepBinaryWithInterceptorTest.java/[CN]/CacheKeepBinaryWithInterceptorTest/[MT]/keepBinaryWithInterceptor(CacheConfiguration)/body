{
  ignite(0).createCache(ccfg);
  try {
    TestInterceptor1.onAfterRmv=0;
    TestInterceptor1.onBeforeRmv=0;
    TestInterceptor1.onAfterPut=0;
    TestInterceptor1.onBeforePut=0;
    TestInterceptor1.onGet=0;
    IgniteCache cache=ignite(0).cache(null).withKeepBinary();
    IgniteCache asyncCache=cache.withAsync();
    cache.put(new TestKey(1),new TestValue(10));
    cache.put(new TestKey(1),new TestValue(10));
    BinaryObject obj=(BinaryObject)cache.get(new TestKey(1));
    assertEquals(10,obj.field("val"));
    asyncCache.get(new TestKey(1));
    obj=(BinaryObject)asyncCache.future().get();
    assertEquals(10,obj.field("val"));
    Cache.Entry<BinaryObject,BinaryObject> e=(Cache.Entry)cache.getEntry(new TestKey(1));
    assertEquals(1,e.getKey().field("key"));
    assertEquals(10,e.getValue().field("val"));
    asyncCache.getEntry(new TestKey(1));
    e=(Cache.Entry)asyncCache.future().get();
    assertEquals(1,e.getKey().field("key"));
    assertEquals(10,e.getValue().field("val"));
    obj=(BinaryObject)cache.getAndRemove(new TestKey(1));
    assertEquals(10,obj.field("val"));
    cache.put(new TestKey(1),new TestValue(10));
    assertTrue(cache.remove(new TestKey(1)));
    assertTrue(TestInterceptor1.onAfterRmv > 0);
    assertTrue(TestInterceptor1.onBeforeRmv > 0);
    assertTrue(TestInterceptor1.onAfterPut > 0);
    assertTrue(TestInterceptor1.onBeforePut > 0);
    assertTrue(TestInterceptor1.onGet > 0);
  }
  finally {
    ignite(0).destroyCache(ccfg.getName());
  }
}
