{
  return new Callable<Collection<WeakReference<Object>>>(){
    @Override public Collection<WeakReference<Object>> call() throws Exception {
      Collection<WeakReference<Object>> refs=new ArrayList<>();
      Ignite g=startGrid();
      try {
        IgniteCache<Integer,TestValue> cache=g.jcache(null);
        IgniteCache<Integer,TestValue> cacheAsync=cache.withAsync();
        refs.add(new WeakReference<Object>(cacheContext(cache)));
        IgniteTx tx=g.transactions().txStart();
        for (int i=0; i < 1000; i++) {
          TestValue val=new TestValue(i);
          refs.add(new WeakReference<Object>(val));
          cacheAsync.put(i,val);
        }
        tx.commit();
      }
  finally {
        G.stop(g.name(),cancel);
      }
      return refs;
    }
  }
;
}
